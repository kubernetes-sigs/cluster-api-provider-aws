/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by MockGen. DO NOT EDIT.
// Source: sigs.k8s.io/cluster-api-provider-aws/v2/pkg/cloud/services/elb (interfaces: ResourceGroupsTaggingAPIAPI)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	resourcegroupstaggingapi "github.com/aws/aws-sdk-go-v2/service/resourcegroupstaggingapi"
	gomock "github.com/golang/mock/gomock"
)

// MockResourceGroupsTaggingAPIAPI is a mock of ResourceGroupsTaggingAPIAPI interface.
type MockResourceGroupsTaggingAPIAPI struct {
	ctrl     *gomock.Controller
	recorder *MockResourceGroupsTaggingAPIAPIMockRecorder
}

// MockResourceGroupsTaggingAPIAPIMockRecorder is the mock recorder for MockResourceGroupsTaggingAPIAPI.
type MockResourceGroupsTaggingAPIAPIMockRecorder struct {
	mock *MockResourceGroupsTaggingAPIAPI
}

// NewMockResourceGroupsTaggingAPIAPI creates a new mock instance.
func NewMockResourceGroupsTaggingAPIAPI(ctrl *gomock.Controller) *MockResourceGroupsTaggingAPIAPI {
	mock := &MockResourceGroupsTaggingAPIAPI{ctrl: ctrl}
	mock.recorder = &MockResourceGroupsTaggingAPIAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResourceGroupsTaggingAPIAPI) EXPECT() *MockResourceGroupsTaggingAPIAPIMockRecorder {
	return m.recorder
}

// GetResources mocks base method.
func (m *MockResourceGroupsTaggingAPIAPI) GetResources(arg0 context.Context, arg1 *resourcegroupstaggingapi.GetResourcesInput, arg2 ...func(*resourcegroupstaggingapi.Options)) (*resourcegroupstaggingapi.GetResourcesOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetResources", varargs...)
	ret0, _ := ret[0].(*resourcegroupstaggingapi.GetResourcesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResources indicates an expected call of GetResources.
func (mr *MockResourceGroupsTaggingAPIAPIMockRecorder) GetResources(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResources", reflect.TypeOf((*MockResourceGroupsTaggingAPIAPI)(nil).GetResources), varargs...)
}

// GetResourcesPages mocks base method.
func (m *MockResourceGroupsTaggingAPIAPI) GetResourcesPages(arg0 context.Context, arg1 *resourcegroupstaggingapi.GetResourcesInput, arg2 func(*resourcegroupstaggingapi.GetResourcesOutput)) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResourcesPages", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetResourcesPages indicates an expected call of GetResourcesPages.
func (mr *MockResourceGroupsTaggingAPIAPIMockRecorder) GetResourcesPages(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResourcesPages", reflect.TypeOf((*MockResourceGroupsTaggingAPIAPI)(nil).GetResourcesPages), arg0, arg1, arg2)
}
