---
# E2E test scenario using local dev images and manifests built from the source tree for following providers:
# - cluster-api
# - bootstrap kubeadm
# - control-plane kubeadm
# - aws

# To run tests, run the following from the root of this repository.
# `AWS_REGION=eu-west-1 make e2e GINKGO_ARGS=-stream E2E_ARGS=-skip-cloudformation-deletion`
# The -stream flag will make Ginkgo print results to the screen in real-time.
# -skip-cloudformation-deletion reduces the time taken to set up AWS CloudFormation prior to cluster start.

# AWS credentials must be present for running tests
# For more details, run `go run ./cmd/clusterawsadm bootstrap credentials`

images:
  - name: gcr.io/k8s-staging-cluster-api/cluster-api-controller:v0.3.10
    loadBehavior: tryLoad
  - name: gcr.io/k8s-staging-cluster-api/kubeadm-bootstrap-controller:v0.3.10
    loadBehavior: tryLoad
  - name: gcr.io/k8s-staging-cluster-api/kubeadm-control-plane-controller:v0.3.10
    loadBehavior: tryLoad
  # Use local dev images built source tree;
  - name: gcr.io/k8s-staging-cluster-api/capa-manager:e2e
    loadBehavior: mustLoad
  - name: quay.io/jetstack/cert-manager-cainjector:v0.16.1
    loadBehavior: tryLoad
  - name: quay.io/jetstack/cert-manager-webhook:v0.16.1
    loadBehavior: tryLoad
  - name: quay.io/jetstack/cert-manager-controller:v0.16.1
    loadBehavior: tryLoad

providers:

  - name: cluster-api
    type: CoreProvider
    versions:
      - name: v0.3.10
        # Use manifest from source files
        value: "https://github.com/kubernetes-sigs/cluster-api/releases/download/v0.3.10/core-components.yaml"
        type: "url"
        replacements:
          - old: "imagePullPolicy: Always"
            new: "imagePullPolicy: IfNotPresent"
          - old: "--enable-leader-election"
            new: "--enable-leader-election=false"
          - old: --metrics-addr=127.0.0.1:8080
            new: --metrics-addr=:8080

  - name: kubeadm
    type: BootstrapProvider
    versions:
      - name: v0.3.10
        # Use manifest from source files
        value: "https://github.com/kubernetes-sigs/cluster-api/releases/download/v0.3.10/bootstrap-components.yaml"
        type: "url"
        replacements:
          - old: "imagePullPolicy: Always"
            new: "imagePullPolicy: IfNotPresent"
          - old: "--enable-leader-election"
            new: "--enable-leader-election=false"
          - old: --metrics-addr=127.0.0.1:8080
            new: --metrics-addr=:8080

  - name: kubeadm
    type: ControlPlaneProvider
    versions:
      - name: v0.3.10
        # Use manifest from source files
        value: "https://github.com/kubernetes-sigs/cluster-api/releases/download/v0.3.10/control-plane-components.yaml"
        type: "url"
        replacements:
          - old: "imagePullPolicy: Always"
            new: "imagePullPolicy: IfNotPresent"
          - old: "--enable-leader-election"
            new: "--enable-leader-election=false"
          - old: --metrics-addr=127.0.0.1:8080
            new: --metrics-addr=:8080

  - name: aws
    type: InfrastructureProvider
    versions:
      - name: v0.5.0
        # Use manifest from source files
        value: ../../../config
        replacements:
          - old: "imagePullPolicy: Always"
            new: "imagePullPolicy: IfNotPresent"
          - old: "--enable-leader-election"
            new: "--enable-leader-election=false"
          - old: --metrics-addr=127.0.0.1:8080
            new: --metrics-addr=:8080
          - old: gcr.io/k8s-staging-cluster-api/cluster-api-aws-controller-amd64:dev
            new: gcr.io/k8s-staging-cluster-api/capa-manager:e2e
          - old: gcr.io/k8s-staging-cluster-api-aws/cluster-api-aws-controller:latest
            new: gcr.io/k8s-staging-cluster-api/capa-manager:e2e
    files:
      # Add a cluster template
      - sourcePath: "./infrastructure-aws/cluster-template.yaml"
      - sourcePath: "./infrastructure-aws/cluster-template-ssm.yaml"
        targetName: "cluster-template-ssm.yaml"
      - sourcePath: "./infrastructure-aws/cluster-template-multi-az.yaml"
        targetName: "cluster-template-multi-az.yaml"
      - sourcePath: "./infrastructure-aws/cluster-template-limit-az.yaml"
        targetName: "cluster-template-limit-az.yaml"
      - sourcePath: "./infrastructure-aws/cluster-template-spot-instances.yaml"
        targetName: "cluster-template-spot-instances.yaml"

variables:
  KUBERNETES_VERSION: "v1.19.1"
  CNI: "./data/cni/calico.yaml"
  EXP_CLUSTER_RESOURCE_SET: "true"
  AWS_CONTROL_PLANE_MACHINE_TYPE: t3.large
  AWS_NODE_MACHINE_TYPE: t3.large
  AWS_SSH_KEY_NAME: "cluster-api-provider-aws-sigs-k8s-io"
  CONFORMANCE_CI_ARTIFACTS_KUBERNETES_VERSION: "v1.19.1"
  CONFORMANCE_WORKER_MACHINE_COUNT: "5"
  CONFORMANCE_CONTROL_PLANE_MACHINE_COUNT: "1"

intervals:
  default/wait-cluster: ["20m", "10s"]
  default/wait-control-plane: ["10m", "10s"]
  default/wait-worker-nodes: ["10m", "10s"]
  conformance/wait-control-plane: ["30m", "10s"]
  conformance/wait-worker-nodes: ["30m", "10s"]
  default/wait-controllers: ["3m", "10s"]
  default/wait-delete-cluster: ["20m", "10s"]
  default/wait-machine-upgrade: ["20m", "10s"]
  default/wait-machine-status: ["20m", "10s"]
  default/wait-infra-subnets: ["5m", "30s"]
