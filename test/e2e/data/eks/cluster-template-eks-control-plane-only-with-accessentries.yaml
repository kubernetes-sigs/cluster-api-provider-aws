---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: "${CLUSTER_NAME}"
spec:
  clusterNetwork:
    pods:
      cidrBlocks: ["192.168.0.0/16"]
  infrastructureRef:
    kind: AWSManagedControlPlane
    apiVersion: controlplane.cluster.x-k8s.io/v1beta2
    name: "${CLUSTER_NAME}-control-plane"
  controlPlaneRef:
    kind: AWSManagedControlPlane
    apiVersion: controlplane.cluster.x-k8s.io/v1beta2
    name: "${CLUSTER_NAME}-control-plane"
---
kind: AWSManagedControlPlane
apiVersion: controlplane.cluster.x-k8s.io/v1beta2
metadata:
  name: "${CLUSTER_NAME}-control-plane"
spec:
  region: "${AWS_REGION}"
  sshKeyName: "${AWS_SSH_KEY_NAME}"
  version: "${KUBERNETES_VERSION}"
  accessConfig:
    authenticationMode: API
  accessEntries:
    - principalARN: "arn:aws:iam::123456789012:role/KubernetesAdmin"
      type: standard
      username: kubernetes-admin
      kubernetesGroups:
        - system:masters
      accessPolicies:
        - policyARN: "arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy"
          accessScope:
            type: cluster
    - principalARN: "arn:aws:iam::123456789012:role/DeveloperRole"
      type: standard
      username: developer
      kubernetesGroups:
        - developers
      accessPolicies:
        - policyARN: "arn:aws:eks::aws:cluster-access-policy/AmazonEKSViewPolicy"
          accessScope:
            type: namespace
            namespaces: ["default"]
  identityRef:
    kind: AWSClusterStaticIdentity
    name: e2e-account
