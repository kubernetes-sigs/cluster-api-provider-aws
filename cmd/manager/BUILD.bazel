# Copyright 2019 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@io_bazel_rules_docker//go:image.bzl", "go_image")
load("@io_bazel_rules_docker//contrib:push-all.bzl", "docker_push")
load("@io_bazel_rules_docker//container:container.bzl", "container_bundle")
load("//build:stateful_set_patch.bzl", "stateful_set_patch")

go_library(
    name = "go_default_library",
    srcs = ["main.go"],
    importpath = "sigs.k8s.io/cluster-api-provider-aws/cmd/manager",
    visibility = ["//visibility:private"],
    deps = [
        "//pkg/apis:go_default_library",
        "//pkg/cloud/aws/actuators/cluster:go_default_library",
        "//pkg/cloud/aws/actuators/machine:go_default_library",
        "//pkg/record:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/core/v1:go_default_library",
        "//vendor/k8s.io/klog:go_default_library",
        "//vendor/sigs.k8s.io/cluster-api/pkg/apis:go_default_library",
        "//vendor/sigs.k8s.io/cluster-api/pkg/apis/cluster/common:go_default_library",
        "//vendor/sigs.k8s.io/cluster-api/pkg/client/clientset_generated/clientset:go_default_library",
        "//vendor/sigs.k8s.io/cluster-api/pkg/controller/cluster:go_default_library",
        "//vendor/sigs.k8s.io/cluster-api/pkg/controller/machine:go_default_library",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/client/config:go_default_library",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/manager:go_default_library",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/runtime/signals:go_default_library",
    ],
)

go_binary(
    name = "manager",
    embed = [":go_default_library"],
    pure = "on",
    visibility = ["//visibility:public"],
)

go_image(
    name = "manager-amd64",
    embed = [":go_default_library"],
    goarch = "amd64",
    goos = "linux",
    pure = "on",
    visibility = ["//visibility:public"],
)

tags = [
    "{GIT_VERSION}",
    "$(MANAGER_IMAGE_TAG)",
]

images = {
    "{registry}/{name}:{tag}".format(
        registry = "$(REGISTRY)",
        name = "$(MANAGER_IMAGE_NAME)",
        tag = tag,
    ): ":manager-amd64"
    for tag in tags
}

container_bundle(
    name = "manager-image",
    images = images,
    tags = ["manual"],
    visibility = ["//visibility:public"],
)

docker_push(
    name = "manager-push",
    bundle = "manager-image",
    tags = ["manual"],
)

stateful_set_patch(
    name = "manager-version-patch",
    pull_policy = "$(PULL_POLICY)",
    registry = "$(REGISTRY)",
    tags = ["generated"],
    visibility = ["//visibility:public"],
)
