
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.9
  creationTimestamp: null
  name: awsmachinetemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AWSMachineTemplate
    listKind: AWSMachineTemplateList
    plural: awsmachinetemplates
    singular: awsmachinetemplate
  scope: Namespaced
  versions:
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: AWSMachineTemplate is the Schema for the awsmachinetemplates API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AWSMachineTemplateSpec defines the desired state of AWSMachineTemplate
            properties:
              template:
                description: AWSMachineTemplateResource describes the data needed to create am AWSMachine from a template
                properties:
                  spec:
                    description: Spec is the specification of the desired behavior of the machine.
                    properties:
                      additionalSecurityGroups:
                        description: AdditionalSecurityGroups is an array of references to security groups that should be applied to the instance. These security groups would be set in addition to any security groups defined at the cluster level or in the actuator.
                        items:
                          description: AWSResourceReference is a reference to a specific AWS resource by ID, ARN, or filters. Only one of ID, ARN or Filters may be specified. Specifying more than one will result in a validation error.
                          properties:
                            arn:
                              description: ARN of resource
                              type: string
                            filters:
                              description: 'Filters is a set of key/value pairs used to identify a resource They are applied according to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                              items:
                                description: Filter is a filter used to identify an AWS resource
                                properties:
                                  name:
                                    description: Name of the filter. Filter names are case-sensitive.
                                    type: string
                                  values:
                                    description: Values includes one or more filter values. Filter values are case-sensitive.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - name
                                - values
                                type: object
                              type: array
                            id:
                              description: ID of resource
                              type: string
                          type: object
                        type: array
                      additionalTags:
                        additionalProperties:
                          type: string
                        description: AdditionalTags is an optional set of tags to add to an instance, in addition to the ones added by default by the AWS provider. If both the AWSCluster and the AWSMachine specify the same tag name with different values, the AWSMachine's value takes precedence.
                        type: object
                      ami:
                        description: AMI is the reference to the AMI from which to create the machine instance.
                        properties:
                          arn:
                            description: ARN of resource
                            type: string
                          filters:
                            description: 'Filters is a set of key/value pairs used to identify a resource They are applied according to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                            items:
                              description: Filter is a filter used to identify an AWS resource
                              properties:
                                name:
                                  description: Name of the filter. Filter names are case-sensitive.
                                  type: string
                                values:
                                  description: Values includes one or more filter values. Filter values are case-sensitive.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - name
                              - values
                              type: object
                            type: array
                          id:
                            description: ID of resource
                            type: string
                        type: object
                      availabilityZone:
                        description: AvailabilityZone is references the AWS availability zone to use for this instance. If multiple subnets are matched for the availability zone, the first one return is picked.
                        type: string
                      cloudInit:
                        description: CloudInit defines options related to the bootstrapping systems where CloudInit is used.
                        properties:
                          enableSecureSecretsManager:
                            description: enableSecureSecretsManager, when set to true will use AWS Secrets Manager to ensure userdata privacy. A cloud-init boothook shell script is prepended to download the userdata from Secrets Manager and additionally delete the secret.
                            type: boolean
                          secretCount:
                            description: SecretCount is the number of secrets used to form the complete secret
                            format: int32
                            type: integer
                          secretPrefix:
                            description: SecretPrefix is the prefix for the secret name. This is stored temporarily, and deleted when the machine registers as a node against the workload cluster.
                            type: string
                        type: object
                      iamInstanceProfile:
                        description: IAMInstanceProfile is a name of an IAM instance profile to assign to the instance
                        type: string
                      imageLookupOrg:
                        description: ImageLookupOrg is the AWS Organization ID to use for image lookup if AMI is not set.
                        type: string
                      instanceType:
                        description: 'InstanceType is the type of instance to create. Example: m4.xlarge'
                        type: string
                      networkInterfaces:
                        description: NetworkInterfaces is a list of ENIs to associate with the instance. A maximum of 2 may be specified.
                        items:
                          type: string
                        maxItems: 2
                        type: array
                      providerID:
                        description: ProviderID is the unique identifier as specified by the cloud provider.
                        type: string
                      publicIP:
                        description: 'PublicIP specifies whether the instance should get a public IP. Precedence for this setting is as follows: 1. This field if set 2. Cluster/flavor setting 3. Subnet default'
                        type: boolean
                      rootDeviceSize:
                        description: RootDeviceSize is the size of the root volume in gigabytes(GB).
                        format: int64
                        type: integer
                      sshKeyName:
                        description: SSHKeyName is the name of the ssh key to attach to the instance.
                        type: string
                      subnet:
                        description: Subnet is a reference to the subnet to use for this instance. If not specified, the cluster subnet will be used.
                        properties:
                          arn:
                            description: ARN of resource
                            type: string
                          filters:
                            description: 'Filters is a set of key/value pairs used to identify a resource They are applied according to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                            items:
                              description: Filter is a filter used to identify an AWS resource
                              properties:
                                name:
                                  description: Name of the filter. Filter names are case-sensitive.
                                  type: string
                                values:
                                  description: Values includes one or more filter values. Filter values are case-sensitive.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - name
                              - values
                              type: object
                            type: array
                          id:
                            description: ID of resource
                            type: string
                        type: object
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: false
  - name: v1alpha3
    schema:
      openAPIV3Schema:
        description: AWSMachineTemplate is the Schema for the awsmachinetemplates API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AWSMachineTemplateSpec defines the desired state of AWSMachineTemplate
            properties:
              template:
                description: AWSMachineTemplateResource describes the data needed to create am AWSMachine from a template
                properties:
                  spec:
                    description: Spec is the specification of the desired behavior of the machine.
                    properties:
                      additionalSecurityGroups:
                        description: AdditionalSecurityGroups is an array of references to security groups that should be applied to the instance. These security groups would be set in addition to any security groups defined at the cluster level or in the actuator.
                        items:
                          description: AWSResourceReference is a reference to a specific AWS resource by ID, ARN, or filters. Only one of ID, ARN or Filters may be specified. Specifying more than one will result in a validation error.
                          properties:
                            arn:
                              description: ARN of resource
                              type: string
                            filters:
                              description: 'Filters is a set of key/value pairs used to identify a resource They are applied according to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                              items:
                                description: Filter is a filter used to identify an AWS resource
                                properties:
                                  name:
                                    description: Name of the filter. Filter names are case-sensitive.
                                    type: string
                                  values:
                                    description: Values includes one or more filter values. Filter values are case-sensitive.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - name
                                - values
                                type: object
                              type: array
                            id:
                              description: ID of resource
                              type: string
                          type: object
                        type: array
                      additionalTags:
                        additionalProperties:
                          type: string
                        description: AdditionalTags is an optional set of tags to add to an instance, in addition to the ones added by default by the AWS provider. If both the AWSCluster and the AWSMachine specify the same tag name with different values, the AWSMachine's value takes precedence.
                        type: object
                      ami:
                        description: AMI is the reference to the AMI from which to create the machine instance.
                        properties:
                          arn:
                            description: ARN of resource
                            type: string
                          filters:
                            description: 'Filters is a set of key/value pairs used to identify a resource They are applied according to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                            items:
                              description: Filter is a filter used to identify an AWS resource
                              properties:
                                name:
                                  description: Name of the filter. Filter names are case-sensitive.
                                  type: string
                                values:
                                  description: Values includes one or more filter values. Filter values are case-sensitive.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - name
                              - values
                              type: object
                            type: array
                          id:
                            description: ID of resource
                            type: string
                        type: object
                      cloudInit:
                        description: CloudInit defines options related to the bootstrapping systems where CloudInit is used.
                        properties:
                          insecureSkipSecretsManager:
                            description: InsecureSkipSecretsManager, when set to true will not use AWS Secrets Manager or AWS Systems Manager Parameter Store to ensure privacy of userdata. By default, a cloud-init boothook shell script is prepended to download the userdata from Secrets Manager and additionally delete the secret.
                            type: boolean
                          secretCount:
                            description: SecretCount is the number of secrets used to form the complete secret
                            format: int32
                            type: integer
                          secretPrefix:
                            description: SecretPrefix is the prefix for the secret name. This is stored temporarily, and deleted when the machine registers as a node against the workload cluster.
                            type: string
                          secureSecretsBackend:
                            default: secrets-manager
                            description: SecureSecretsBackend, when set to parameter-store will utilize the AWS Systems Manager Parameter Storage to distribute secrets. By default or with the value of secrets-manager, will use AWS Secrets Manager instead.
                            enum:
                            - secrets-manager
                            - ssm-parameter-store
                            type: string
                        type: object
                      failureDomain:
                        description: FailureDomain is the failure domain unique identifier this Machine should be attached to, as defined in Cluster API. For this infrastructure provider, the ID is equivalent to an AWS Availability Zone. If multiple subnets are matched for the availability zone, the first one returned is picked.
                        type: string
                      iamInstanceProfile:
                        description: IAMInstanceProfile is a name of an IAM instance profile to assign to the instance
                        type: string
                      imageLookupBaseOS:
                        description: ImageLookupBaseOS is the name of the base operating system to use for image lookup the AMI is not set.
                        type: string
                      imageLookupFormat:
                        description: 'ImageLookupFormat is the AMI naming format to look up the image for this machine It will be ignored if an explicit AMI is set. Supports substitutions for {{.BaseOS}} and {{.K8sVersion}} with the base OS and kubernetes version, respectively. The BaseOS will be the value in ImageLookupBaseOS or ubuntu (the default), and the kubernetes version as defined by the packages produced by kubernetes/release without v as a prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example, the default image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-* will end up searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-* for a Machine that is targeting kubernetes v1.18.0 and the ubuntu base OS. See also: https://golang.org/pkg/text/template/'
                        type: string
                      imageLookupOrg:
                        description: ImageLookupOrg is the AWS Organization ID to use for image lookup if AMI is not set.
                        type: string
                      instanceType:
                        description: 'InstanceType is the type of instance to create. Example: m4.xlarge'
                        type: string
                      networkInterfaces:
                        description: NetworkInterfaces is a list of ENIs to associate with the instance. A maximum of 2 may be specified.
                        items:
                          type: string
                        maxItems: 2
                        type: array
                      nonRootVolumes:
                        description: Configuration options for the non root storage volumes.
                        items:
                          description: Volume encapsulates the configuration options for the storage device
                          properties:
                            deviceName:
                              description: Device name
                              type: string
                            encrypted:
                              description: Encrypted is whether the volume should be encrypted or not.
                              type: boolean
                            encryptionKey:
                              description: EncryptionKey is the KMS key to use to encrypt the volume. Can be either a KMS key ID or ARN. If Encrypted is set and this is omitted, the default AWS key will be used. The key must already exist and be accessible by the controller.
                              type: string
                            iops:
                              description: IOPS is the number of IOPS requested for the disk. Not applicable to all types.
                              format: int64
                              type: integer
                            size:
                              description: Size specifies size (in Gi) of the storage device. Must be greater than the image snapshot size or 8 (whichever is greater).
                              format: int64
                              minimum: 8
                              type: integer
                            type:
                              description: Type is the type of the volume (e.g. gp2, io1, etc...).
                              type: string
                          required:
                          - size
                          type: object
                        type: array
                      providerID:
                        description: ProviderID is the unique identifier as specified by the cloud provider.
                        type: string
                      publicIP:
                        description: 'PublicIP specifies whether the instance should get a public IP. Precedence for this setting is as follows: 1. This field if set 2. Cluster/flavor setting 3. Subnet default'
                        type: boolean
                      rootVolume:
                        description: RootVolume encapsulates the configuration options for the root volume
                        properties:
                          deviceName:
                            description: Device name
                            type: string
                          encrypted:
                            description: Encrypted is whether the volume should be encrypted or not.
                            type: boolean
                          encryptionKey:
                            description: EncryptionKey is the KMS key to use to encrypt the volume. Can be either a KMS key ID or ARN. If Encrypted is set and this is omitted, the default AWS key will be used. The key must already exist and be accessible by the controller.
                            type: string
                          iops:
                            description: IOPS is the number of IOPS requested for the disk. Not applicable to all types.
                            format: int64
                            type: integer
                          size:
                            description: Size specifies size (in Gi) of the storage device. Must be greater than the image snapshot size or 8 (whichever is greater).
                            format: int64
                            minimum: 8
                            type: integer
                          type:
                            description: Type is the type of the volume (e.g. gp2, io1, etc...).
                            type: string
                        required:
                        - size
                        type: object
                      spotMarketOptions:
                        description: SpotMarketOptions allows users to configure instances to be run using AWS Spot instances.
                        properties:
                          maxPrice:
                            description: MaxPrice defines the maximum price the user is willing to pay for Spot VM instances
                            type: string
                        type: object
                      sshKeyName:
                        description: SSHKeyName is the name of the ssh key to attach to the instance. Valid values are empty string (do not use SSH keys), a valid SSH key name, or omitted (use the default SSH key name)
                        type: string
                      subnet:
                        description: Subnet is a reference to the subnet to use for this instance. If not specified, the cluster subnet will be used.
                        properties:
                          arn:
                            description: ARN of resource
                            type: string
                          filters:
                            description: 'Filters is a set of key/value pairs used to identify a resource They are applied according to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                            items:
                              description: Filter is a filter used to identify an AWS resource
                              properties:
                                name:
                                  description: Name of the filter. Filter names are case-sensitive.
                                  type: string
                                values:
                                  description: Values includes one or more filter values. Filter values are case-sensitive.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - name
                              - values
                              type: object
                            type: array
                          id:
                            description: ID of resource
                            type: string
                        type: object
                      tenancy:
                        description: Tenancy indicates if instance should run on shared or single-tenant hardware.
                        enum:
                        - default
                        - dedicated
                        - host
                        type: string
                      uncompressedUserData:
                        description: UncompressedUserData specify whether the user data is gzip-compressed before it is sent to ec2 instance. cloud-init has built-in support for gzip-compressed user data user data stored in aws secret manager is always gzip-compressed.
                        type: boolean
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
