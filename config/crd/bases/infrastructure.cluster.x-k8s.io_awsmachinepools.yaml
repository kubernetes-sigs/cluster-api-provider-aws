---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: awsmachinepools.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AWSMachinePool
    listKind: AWSMachinePoolList
    plural: awsmachinepools
    shortNames:
    - awsmp
    singular: awsmachinepool
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Machine ready status
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: Machine ready status
      jsonPath: .status.replicas
      name: Replicas
      type: integer
    - description: Minimum instanes in ASG
      jsonPath: .spec.minSize
      name: MinSize
      type: integer
    - description: Maximum instanes in ASG
      jsonPath: .spec.maxSize
      name: MaxSize
      type: integer
    - description: Launch Template ID
      jsonPath: .status.launchTemplateID
      name: LaunchTemplate ID
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: AWSMachinePool is the Schema for the awsmachinepools API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AWSMachinePoolSpec defines the desired state of AWSMachinePool.
            properties:
              additionalTags:
                additionalProperties:
                  type: string
                description: |-
                  AdditionalTags is an optional set of tags to add to an instance, in addition to the ones added by default by the
                  AWS provider.
                type: object
              availabilityZones:
                description: AvailabilityZones is an array of availability zones instances
                  can run in
                items:
                  type: string
                type: array
              awsLaunchTemplate:
                description: AWSLaunchTemplate specifies the launch template and version
                  to use when an instance is launched.
                properties:
                  additionalSecurityGroups:
                    description: |-
                      AdditionalSecurityGroups is an array of references to security groups that should be applied to the
                      instances. These security groups would be set in addition to any security groups defined
                      at the cluster level or in the actuator.
                    items:
                      description: |-
                        AWSResourceReference is a reference to a specific AWS resource by ID or filters.
                        Only one of ID or Filters may be specified. Specifying more than one will result in
                        a validation error.
                      properties:
                        filters:
                          description: |-
                            Filters is a set of key/value pairs used to identify a resource
                            They are applied according to the rules defined by the AWS API:
                            https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html
                          items:
                            description: Filter is a filter used to identify an AWS
                              resource.
                            properties:
                              name:
                                description: Name of the filter. Filter names are
                                  case-sensitive.
                                type: string
                              values:
                                description: Values includes one or more filter values.
                                  Filter values are case-sensitive.
                                items:
                                  type: string
                                type: array
                            required:
                            - name
                            - values
                            type: object
                          type: array
                        id:
                          description: ID of resource
                          type: string
                      type: object
                    type: array
                  ami:
                    description: AMI is the reference to the AMI from which to create
                      the machine instance.
                    properties:
                      eksLookupType:
                        description: EKSOptimizedLookupType If specified, will look
                          up an EKS Optimized image in SSM Parameter store
                        enum:
                        - AmazonLinux
                        - AmazonLinuxGPU
                        type: string
                      id:
                        description: ID of resource
                        type: string
                    type: object
                  iamInstanceProfile:
                    description: |-
                      The name or the Amazon Resource Name (ARN) of the instance profile associated
                      with the IAM role for the instance. The instance profile contains the IAM
                      role.
                    type: string
                  imageLookupBaseOS:
                    description: |-
                      ImageLookupBaseOS is the name of the base operating system to use for
                      image lookup the AMI is not set.
                    type: string
                  imageLookupFormat:
                    description: |-
                      ImageLookupFormat is the AMI naming format to look up the image for this
                      machine It will be ignored if an explicit AMI is set. Supports
                      substitutions for {{.BaseOS}} and {{.K8sVersion}} with the base OS and
                      kubernetes version, respectively. The BaseOS will be the value in
                      ImageLookupBaseOS or ubuntu (the default), and the kubernetes version as
                      defined by the packages produced by kubernetes/release without v as a
                      prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example, the default
                      image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-* will end up
                      searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-* for a
                      Machine that is targeting kubernetes v1.18.0 and the ubuntu base OS. See
                      also: https://golang.org/pkg/text/template/
                    type: string
                  imageLookupOrg:
                    description: ImageLookupOrg is the AWS Organization ID to use
                      for image lookup if AMI is not set.
                    type: string
                  instanceType:
                    description: 'InstanceType is the type of instance to create.
                      Example: m4.xlarge'
                    type: string
                  name:
                    description: The name of the launch template.
                    type: string
                  rootVolume:
                    description: RootVolume encapsulates the configuration options
                      for the root volume
                    properties:
                      deviceName:
                        description: Device name
                        type: string
                      encrypted:
                        description: Encrypted is whether the volume should be encrypted
                          or not.
                        type: boolean
                      encryptionKey:
                        description: |-
                          EncryptionKey is the KMS key to use to encrypt the volume. Can be either a KMS key ID or ARN.
                          If Encrypted is set and this is omitted, the default AWS key will be used.
                          The key must already exist and be accessible by the controller.
                        type: string
                      iops:
                        description: IOPS is the number of IOPS requested for the
                          disk. Not applicable to all types.
                        format: int64
                        type: integer
                      size:
                        description: |-
                          Size specifies size (in Gi) of the storage device.
                          Must be greater than the image snapshot size or 8 (whichever is greater).
                        format: int64
                        minimum: 8
                        type: integer
                      throughput:
                        description: Throughput to provision in MiB/s supported for
                          the volume type. Not applicable to all types.
                        format: int64
                        type: integer
                      type:
                        description: Type is the type of the volume (e.g. gp2, io1,
                          etc...).
                        type: string
                    required:
                    - size
                    type: object
                  spotMarketOptions:
                    description: SpotMarketOptions are options for configuring AWSMachinePool
                      instances to be run using AWS Spot instances.
                    properties:
                      maxPrice:
                        description: MaxPrice defines the maximum price the user is
                          willing to pay for Spot VM instances
                        type: string
                    type: object
                  sshKeyName:
                    description: |-
                      SSHKeyName is the name of the ssh key to attach to the instance. Valid values are empty string
                      (do not use SSH keys), a valid SSH key name, or omitted (use the default SSH key name)
                    type: string
                  versionNumber:
                    description: |-
                      VersionNumber is the version of the launch template that is applied.
                      Typically a new version is created when at least one of the following happens:
                      1) A new launch template spec is applied.
                      2) One or more parameters in an existing template is changed.
                      3) A new AMI is discovered.
                    format: int64
                    type: integer
                type: object
              capacityRebalance:
                description: Enable or disable the capacity rebalance autoscaling
                  group feature
                type: boolean
              defaultCoolDown:
                description: |-
                  The amount of time, in seconds, after a scaling activity completes before another scaling activity can start.
                  If no value is supplied by user a default value of 300 seconds is set
                type: string
              maxSize:
                default: 1
                description: MaxSize defines the maximum size of the group.
                format: int32
                minimum: 1
                type: integer
              minSize:
                default: 1
                description: MinSize defines the minimum size of the group.
                format: int32
                minimum: 0
                type: integer
              mixedInstancesPolicy:
                description: MixedInstancesPolicy describes how multiple instance
                  types will be used by the ASG.
                properties:
                  instancesDistribution:
                    description: InstancesDistribution to configure distribution of
                      On-Demand Instances and Spot Instances.
                    properties:
                      onDemandAllocationStrategy:
                        default: prioritized
                        description: OnDemandAllocationStrategy indicates how to allocate
                          instance types to fulfill On-Demand capacity.
                        enum:
                        - prioritized
                        type: string
                      onDemandBaseCapacity:
                        default: 0
                        format: int64
                        type: integer
                      onDemandPercentageAboveBaseCapacity:
                        default: 100
                        format: int64
                        type: integer
                      spotAllocationStrategy:
                        default: lowest-price
                        description: SpotAllocationStrategy indicates how to allocate
                          instances across Spot Instance pools.
                        enum:
                        - lowest-price
                        - capacity-optimized
                        type: string
                    type: object
                  overrides:
                    items:
                      description: |-
                        Overrides are used to override the instance type specified by the launch template with multiple
                        instance types that can be used to launch On-Demand Instances and Spot Instances.
                      properties:
                        instanceType:
                          type: string
                      required:
                      - instanceType
                      type: object
                    type: array
                type: object
              providerID:
                description: ProviderID is the ARN of the associated ASG
                type: string
              providerIDList:
                description: |-
                  ProviderIDList are the identification IDs of machine instances provided by the provider.
                  This field must match the provider IDs as seen on the node objects corresponding to a machine pool's machine instances.
                items:
                  type: string
                type: array
              refreshPreferences:
                description: RefreshPreferences describes set of preferences associated
                  with the instance refresh request.
                properties:
                  instanceWarmup:
                    description: |-
                      The number of seconds until a newly launched instance is configured and ready
                      to use. During this time, the next replacement will not be initiated.
                      The default is to use the value for the health check grace period defined for the group.
                    format: int64
                    type: integer
                  minHealthyPercentage:
                    description: |-
                      The amount of capacity as a percentage in ASG that must remain healthy
                      during an instance refresh. The default is 90.
                    format: int64
                    type: integer
                  strategy:
                    description: |-
                      The strategy to use for the instance refresh. The only valid value is Rolling.
                      A rolling update is an update that is applied to all instances in an Auto
                      Scaling group until all instances have been updated.
                    type: string
                type: object
              subnets:
                description: Subnets is an array of subnet configurations
                items:
                  description: |-
                    AWSResourceReference is a reference to a specific AWS resource by ID or filters.
                    Only one of ID or Filters may be specified. Specifying more than one will result in
                    a validation error.
                  properties:
                    filters:
                      description: |-
                        Filters is a set of key/value pairs used to identify a resource
                        They are applied according to the rules defined by the AWS API:
                        https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html
                      items:
                        description: Filter is a filter used to identify an AWS resource.
                        properties:
                          name:
                            description: Name of the filter. Filter names are case-sensitive.
                            type: string
                          values:
                            description: Values includes one or more filter values.
                              Filter values are case-sensitive.
                            items:
                              type: string
                            type: array
                        required:
                        - name
                        - values
                        type: object
                      type: array
                    id:
                      description: ID of resource
                      type: string
                  type: object
                type: array
            required:
            - awsLaunchTemplate
            - maxSize
            - minSize
            type: object
          status:
            description: AWSMachinePoolStatus defines the observed state of AWSMachinePool.
            properties:
              asgStatus:
                description: ASGStatus is a status string returned by the autoscaling
                  API.
                type: string
              conditions:
                description: Conditions defines current service state of the AWSMachinePool.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: |-
                  FailureMessage will be set in the event that there is a terminal problem
                  reconciling the Machine and will contain a more verbose string suitable
                  for logging and human consumption.


                  This field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over
                  time (like service outages), but instead indicate that something is
                  fundamentally wrong with the Machine's spec or the configuration of
                  the controller, and that manual intervention is required. Examples
                  of terminal errors would be invalid combinations of settings in the
                  spec, values that are unsupported by the controller, or the
                  responsible controller itself being critically misconfigured.


                  Any transient errors that occur during the reconciliation of Machines
                  can be added as events to the Machine object and/or logged in the
                  controller's output.
                type: string
              failureReason:
                description: |-
                  FailureReason will be set in the event that there is a terminal problem
                  reconciling the Machine and will contain a succinct value suitable
                  for machine interpretation.


                  This field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over
                  time (like service outages), but instead indicate that something is
                  fundamentally wrong with the Machine's spec or the configuration of
                  the controller, and that manual intervention is required. Examples
                  of terminal errors would be invalid combinations of settings in the
                  spec, values that are unsupported by the controller, or the
                  responsible controller itself being critically misconfigured.


                  Any transient errors that occur during the reconciliation of Machines
                  can be added as events to the Machine object and/or logged in the
                  controller's output.
                type: string
              instances:
                description: Instances contains the status for each instance in the
                  pool
                items:
                  description: AWSMachinePoolInstanceStatus defines the status of
                    the AWSMachinePoolInstance.
                  properties:
                    instanceID:
                      description: InstanceID is the identification of the Machine
                        Instance within ASG
                      type: string
                    version:
                      description: Version defines the Kubernetes version for the
                        Machine Instance
                      type: string
                  type: object
                type: array
              launchTemplateID:
                description: The ID of the launch template
                type: string
              launchTemplateVersion:
                description: The version of the launch template
                type: string
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
              replicas:
                description: Replicas is the most recently observed number of replicas
                format: int32
                type: integer
            type: object
        type: object
    served: false
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: Machine ready status
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: Machine ready status
      jsonPath: .status.replicas
      name: Replicas
      type: integer
    - description: Minimum instanes in ASG
      jsonPath: .spec.minSize
      name: MinSize
      type: integer
    - description: Maximum instanes in ASG
      jsonPath: .spec.maxSize
      name: MaxSize
      type: integer
    - description: Launch Template ID
      jsonPath: .status.launchTemplateID
      name: LaunchTemplate ID
      type: string
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: AWSMachinePool is the Schema for the awsmachinepools API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AWSMachinePoolSpec defines the desired state of AWSMachinePool.
            properties:
              additionalTags:
                additionalProperties:
                  type: string
                description: |-
                  AdditionalTags is an optional set of tags to add to an instance, in addition to the ones added by default by the
                  AWS provider.
                type: object
              availabilityZoneSubnetType:
                description: AvailabilityZoneSubnetType specifies which type of subnets
                  to use when an availability zone is specified.
                enum:
                - public
                - private
                - all
                type: string
              availabilityZones:
                description: AvailabilityZones is an array of availability zones instances
                  can run in
                items:
                  type: string
                type: array
              awsLaunchTemplate:
                description: AWSLaunchTemplate specifies the launch template and version
                  to use when an instance is launched.
                properties:
                  additionalSecurityGroups:
                    description: |-
                      AdditionalSecurityGroups is an array of references to security groups that should be applied to the
                      instances. These security groups would be set in addition to any security groups defined
                      at the cluster level or in the actuator.
                    items:
                      description: |-
                        AWSResourceReference is a reference to a specific AWS resource by ID or filters.
                        Only one of ID or Filters may be specified. Specifying more than one will result in
                        a validation error.
                      properties:
                        filters:
                          description: |-
                            Filters is a set of key/value pairs used to identify a resource
                            They are applied according to the rules defined by the AWS API:
                            https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html
                          items:
                            description: Filter is a filter used to identify an AWS
                              resource.
                            properties:
                              name:
                                description: Name of the filter. Filter names are
                                  case-sensitive.
                                type: string
                              values:
                                description: Values includes one or more filter values.
                                  Filter values are case-sensitive.
                                items:
                                  type: string
                                type: array
                            required:
                            - name
                            - values
                            type: object
                          type: array
                        id:
                          description: ID of resource
                          type: string
                      type: object
                    type: array
                  ami:
                    description: AMI is the reference to the AMI from which to create
                      the machine instance.
                    properties:
                      eksLookupType:
                        description: EKSOptimizedLookupType If specified, will look
                          up an EKS Optimized image in SSM Parameter store
                        enum:
                        - AmazonLinux
                        - AmazonLinuxGPU
                        type: string
                      id:
                        description: ID of resource
                        type: string
                    type: object
                  iamInstanceProfile:
                    description: |-
                      The name or the Amazon Resource Name (ARN) of the instance profile associated
                      with the IAM role for the instance. The instance profile contains the IAM
                      role.
                    type: string
                  imageLookupBaseOS:
                    description: |-
                      ImageLookupBaseOS is the name of the base operating system to use for
                      image lookup the AMI is not set.
                    type: string
                  imageLookupFormat:
                    description: |-
                      ImageLookupFormat is the AMI naming format to look up the image for this
                      machine It will be ignored if an explicit AMI is set. Supports
                      substitutions for {{.BaseOS}} and {{.K8sVersion}} with the base OS and
                      kubernetes version, respectively. The BaseOS will be the value in
                      ImageLookupBaseOS or ubuntu (the default), and the kubernetes version as
                      defined by the packages produced by kubernetes/release without v as a
                      prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example, the default
                      image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-* will end up
                      searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-* for a
                      Machine that is targeting kubernetes v1.18.0 and the ubuntu base OS. See
                      also: https://golang.org/pkg/text/template/
                    type: string
                  imageLookupOrg:
                    description: ImageLookupOrg is the AWS Organization ID to use
                      for image lookup if AMI is not set.
                    type: string
                  instanceMetadataOptions:
                    description: InstanceMetadataOptions defines the behavior for
                      applying metadata to instances.
                    properties:
                      httpEndpoint:
                        default: enabled
                        description: |-
                          Enables or disables the HTTP metadata endpoint on your instances.


                          If you specify a value of disabled, you cannot access your instance metadata.


                          Default: enabled
                        enum:
                        - enabled
                        - disabled
                        type: string
                      httpPutResponseHopLimit:
                        default: 1
                        description: |-
                          The desired HTTP PUT response hop limit for instance metadata requests. The
                          larger the number, the further instance metadata requests can travel.


                          Default: 1
                        format: int64
                        maximum: 64
                        minimum: 1
                        type: integer
                      httpTokens:
                        default: optional
                        description: |-
                          The state of token usage for your instance metadata requests.


                          If the state is optional, you can choose to retrieve instance metadata with
                          or without a session token on your request. If you retrieve the IAM role
                          credentials without a token, the version 1.0 role credentials are returned.
                          If you retrieve the IAM role credentials using a valid session token, the
                          version 2.0 role credentials are returned.


                          If the state is required, you must send a session token with any instance
                          metadata retrieval requests. In this state, retrieving the IAM role credentials
                          always returns the version 2.0 credentials; the version 1.0 credentials are
                          not available.


                          Default: optional
                        enum:
                        - optional
                        - required
                        type: string
                      instanceMetadataTags:
                        default: disabled
                        description: |-
                          Set to enabled to allow access to instance tags from the instance metadata.
                          Set to disabled to turn off access to instance tags from the instance metadata.
                          For more information, see Work with instance tags using the instance metadata
                          (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#work-with-tags-in-IMDS).


                          Default: disabled
                        enum:
                        - enabled
                        - disabled
                        type: string
                    type: object
                  instanceType:
                    description: 'InstanceType is the type of instance to create.
                      Example: m4.xlarge'
                    type: string
                  name:
                    description: The name of the launch template.
                    type: string
                  privateDnsName:
                    description: PrivateDNSName is the options for the instance hostname.
                    properties:
                      enableResourceNameDnsAAAARecord:
                        description: EnableResourceNameDNSAAAARecord indicates whether
                          to respond to DNS queries for instance hostnames with DNS
                          AAAA records.
                        type: boolean
                      enableResourceNameDnsARecord:
                        description: EnableResourceNameDNSARecord indicates whether
                          to respond to DNS queries for instance hostnames with DNS
                          A records.
                        type: boolean
                      hostnameType:
                        description: The type of hostname to assign to an instance.
                        enum:
                        - ip-name
                        - resource-name
                        type: string
                    type: object
                  rootVolume:
                    description: RootVolume encapsulates the configuration options
                      for the root volume
                    properties:
                      deviceName:
                        description: Device name
                        type: string
                      encrypted:
                        description: Encrypted is whether the volume should be encrypted
                          or not.
                        type: boolean
                      encryptionKey:
                        description: |-
                          EncryptionKey is the KMS key to use to encrypt the volume. Can be either a KMS key ID or ARN.
                          If Encrypted is set and this is omitted, the default AWS key will be used.
                          The key must already exist and be accessible by the controller.
                        type: string
                      iops:
                        description: IOPS is the number of IOPS requested for the
                          disk. Not applicable to all types.
                        format: int64
                        type: integer
                      size:
                        description: |-
                          Size specifies size (in Gi) of the storage device.
                          Must be greater than the image snapshot size or 8 (whichever is greater).
                        format: int64
                        minimum: 8
                        type: integer
                      throughput:
                        description: Throughput to provision in MiB/s supported for
                          the volume type. Not applicable to all types.
                        format: int64
                        type: integer
                      type:
                        description: Type is the type of the volume (e.g. gp2, io1,
                          etc...).
                        type: string
                    required:
                    - size
                    type: object
                  spotMarketOptions:
                    description: SpotMarketOptions are options for configuring AWSMachinePool
                      instances to be run using AWS Spot instances.
                    properties:
                      maxPrice:
                        description: MaxPrice defines the maximum price the user is
                          willing to pay for Spot VM instances
                        type: string
                    type: object
                  sshKeyName:
                    description: |-
                      SSHKeyName is the name of the ssh key to attach to the instance. Valid values are empty string
                      (do not use SSH keys), a valid SSH key name, or omitted (use the default SSH key name)
                    type: string
                  versionNumber:
                    description: |-
                      VersionNumber is the version of the launch template that is applied.
                      Typically a new version is created when at least one of the following happens:
                      1) A new launch template spec is applied.
                      2) One or more parameters in an existing template is changed.
                      3) A new AMI is discovered.
                    format: int64
                    type: integer
                type: object
              capacityRebalance:
                description: Enable or disable the capacity rebalance autoscaling
                  group feature
                type: boolean
              defaultCoolDown:
                description: |-
                  The amount of time, in seconds, after a scaling activity completes before another scaling activity can start.
                  If no value is supplied by user a default value of 300 seconds is set
                type: string
              defaultInstanceWarmup:
                description: |-
                  The amount of time, in seconds, until a new instance is considered to
                  have finished initializing and resource consumption to become stable
                  after it enters the InService state.
                  If no value is supplied by user a default value of 300 seconds is set
                type: string
              maxSize:
                default: 1
                description: MaxSize defines the maximum size of the group.
                format: int32
                minimum: 1
                type: integer
              minSize:
                default: 1
                description: MinSize defines the minimum size of the group.
                format: int32
                minimum: 0
                type: integer
              mixedInstancesPolicy:
                description: MixedInstancesPolicy describes how multiple instance
                  types will be used by the ASG.
                properties:
                  instancesDistribution:
                    description: InstancesDistribution to configure distribution of
                      On-Demand Instances and Spot Instances.
                    properties:
                      onDemandAllocationStrategy:
                        default: prioritized
                        description: OnDemandAllocationStrategy indicates how to allocate
                          instance types to fulfill On-Demand capacity.
                        enum:
                        - prioritized
                        - lowest-price
                        type: string
                      onDemandBaseCapacity:
                        default: 0
                        format: int64
                        type: integer
                      onDemandPercentageAboveBaseCapacity:
                        default: 100
                        format: int64
                        type: integer
                      spotAllocationStrategy:
                        default: lowest-price
                        description: SpotAllocationStrategy indicates how to allocate
                          instances across Spot Instance pools.
                        enum:
                        - lowest-price
                        - capacity-optimized
                        - capacity-optimized-prioritized
                        - price-capacity-optimized
                        type: string
                    type: object
                  overrides:
                    items:
                      description: |-
                        Overrides are used to override the instance type specified by the launch template with multiple
                        instance types that can be used to launch On-Demand Instances and Spot Instances.
                      properties:
                        instanceType:
                          type: string
                      required:
                      - instanceType
                      type: object
                    type: array
                type: object
              providerID:
                description: ProviderID is the ARN of the associated ASG
                type: string
              providerIDList:
                description: |-
                  ProviderIDList are the identification IDs of machine instances provided by the provider.
                  This field must match the provider IDs as seen on the node objects corresponding to a machine pool's machine instances.
                items:
                  type: string
                type: array
              refreshPreferences:
                description: RefreshPreferences describes set of preferences associated
                  with the instance refresh request.
                properties:
                  disable:
                    description: |-
                      Disable, if true, disables instance refresh from triggering when new launch templates are detected.
                      This is useful in scenarios where ASG nodes are externally managed.
                    type: boolean
                  instanceWarmup:
                    description: |-
                      The number of seconds until a newly launched instance is configured and ready
                      to use. During this time, the next replacement will not be initiated.
                      The default is to use the value for the health check grace period defined for the group.
                    format: int64
                    type: integer
                  minHealthyPercentage:
                    description: |-
                      The amount of capacity as a percentage in ASG that must remain healthy
                      during an instance refresh. The default is 90.
                    format: int64
                    type: integer
                  strategy:
                    description: |-
                      The strategy to use for the instance refresh. The only valid value is Rolling.
                      A rolling update is an update that is applied to all instances in an Auto
                      Scaling group until all instances have been updated.
                    type: string
                type: object
              subnets:
                description: Subnets is an array of subnet configurations
                items:
                  description: |-
                    AWSResourceReference is a reference to a specific AWS resource by ID or filters.
                    Only one of ID or Filters may be specified. Specifying more than one will result in
                    a validation error.
                  properties:
                    filters:
                      description: |-
                        Filters is a set of key/value pairs used to identify a resource
                        They are applied according to the rules defined by the AWS API:
                        https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html
                      items:
                        description: Filter is a filter used to identify an AWS resource.
                        properties:
                          name:
                            description: Name of the filter. Filter names are case-sensitive.
                            type: string
                          values:
                            description: Values includes one or more filter values.
                              Filter values are case-sensitive.
                            items:
                              type: string
                            type: array
                        required:
                        - name
                        - values
                        type: object
                      type: array
                    id:
                      description: ID of resource
                      type: string
                  type: object
                type: array
              suspendProcesses:
                description: |-
                  SuspendProcesses defines a list of processes to suspend for the given ASG. This is constantly reconciled.
                  If a process is removed from this list it will automatically be resumed.
                properties:
                  all:
                    type: boolean
                  processes:
                    description: Processes defines the processes which can be enabled
                      or disabled individually.
                    properties:
                      addToLoadBalancer:
                        type: boolean
                      alarmNotification:
                        type: boolean
                      azRebalance:
                        type: boolean
                      healthCheck:
                        type: boolean
                      instanceRefresh:
                        type: boolean
                      launch:
                        type: boolean
                      replaceUnhealthy:
                        type: boolean
                      scheduledActions:
                        type: boolean
                      terminate:
                        type: boolean
                    type: object
                type: object
            required:
            - awsLaunchTemplate
            - maxSize
            - minSize
            type: object
          status:
            description: AWSMachinePoolStatus defines the observed state of AWSMachinePool.
            properties:
              asgStatus:
                description: ASGStatus is a status string returned by the autoscaling
                  API.
                type: string
              conditions:
                description: Conditions defines current service state of the AWSMachinePool.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: |-
                  FailureMessage will be set in the event that there is a terminal problem
                  reconciling the Machine and will contain a more verbose string suitable
                  for logging and human consumption.


                  This field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over
                  time (like service outages), but instead indicate that something is
                  fundamentally wrong with the Machine's spec or the configuration of
                  the controller, and that manual intervention is required. Examples
                  of terminal errors would be invalid combinations of settings in the
                  spec, values that are unsupported by the controller, or the
                  responsible controller itself being critically misconfigured.


                  Any transient errors that occur during the reconciliation of Machines
                  can be added as events to the Machine object and/or logged in the
                  controller's output.
                type: string
              failureReason:
                description: |-
                  FailureReason will be set in the event that there is a terminal problem
                  reconciling the Machine and will contain a succinct value suitable
                  for machine interpretation.


                  This field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over
                  time (like service outages), but instead indicate that something is
                  fundamentally wrong with the Machine's spec or the configuration of
                  the controller, and that manual intervention is required. Examples
                  of terminal errors would be invalid combinations of settings in the
                  spec, values that are unsupported by the controller, or the
                  responsible controller itself being critically misconfigured.


                  Any transient errors that occur during the reconciliation of Machines
                  can be added as events to the Machine object and/or logged in the
                  controller's output.
                type: string
              instances:
                description: Instances contains the status for each instance in the
                  pool
                items:
                  description: AWSMachinePoolInstanceStatus defines the status of
                    the AWSMachinePoolInstance.
                  properties:
                    instanceID:
                      description: InstanceID is the identification of the Machine
                        Instance within ASG
                      type: string
                    version:
                      description: Version defines the Kubernetes version for the
                        Machine Instance
                      type: string
                  type: object
                type: array
              launchTemplateID:
                description: The ID of the launch template
                type: string
              launchTemplateVersion:
                description: The version of the launch template
                type: string
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
              replicas:
                description: Replicas is the most recently observed number of replicas
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
