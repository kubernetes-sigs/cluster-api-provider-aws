---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.1
  name: rosacontrolplanes.controlplane.cluster.x-k8s.io
spec:
  group: controlplane.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: ROSAControlPlane
    listKind: ROSAControlPlaneList
    plural: rosacontrolplanes
    shortNames:
    - rosacp
    singular: rosacontrolplane
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster to which this RosaControl belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: Control plane infrastructure is ready for worker nodes
      jsonPath: .status.ready
      name: Ready
      type: string
    name: v1beta2
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              accountID:
                description: 'TODO: these are to satisfy ocm sdk. Explore how to drop
                  them.'
                type: string
              availabilityZones:
                description: AWS AvailabilityZones of the worker nodes should match
                  the AvailabilityZones of the Subnets.
                items:
                  type: string
                type: array
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              creatorARN:
                type: string
              installerRoleARN:
                type: string
              machineCIDR:
                description: Block of IP addresses used by OpenShift while installing
                  the cluster, for example "10.0.0.0/16".
                type: string
              oidcID:
                description: The ID of the OpenID Connect Provider.
                type: string
              region:
                description: The AWS Region the cluster lives in.
                type: string
              rolesRef:
                description: AWS IAM roles used to perform credential requests by
                  the openshift operators.
                properties:
                  controlPlaneOperatorARN:
                    description: "ControlPlaneOperatorARN  is an ARN value referencing
                      a role appropriate for the Control Plane Operator. \n The following
                      is an example of a valid policy document: \n { \"Version\":
                      \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Action\":
                      [ \"ec2:CreateVpcEndpoint\", \"ec2:DescribeVpcEndpoints\", \"ec2:ModifyVpcEndpoint\",
                      \"ec2:DeleteVpcEndpoints\", \"ec2:CreateTags\", \"route53:ListHostedZones\",
                      \"ec2:CreateSecurityGroup\", \"ec2:AuthorizeSecurityGroupIngress\",
                      \"ec2:AuthorizeSecurityGroupEgress\", \"ec2:DeleteSecurityGroup\",
                      \"ec2:RevokeSecurityGroupIngress\", \"ec2:RevokeSecurityGroupEgress\",
                      \"ec2:DescribeSecurityGroups\", \"ec2:DescribeVpcs\", ], \"Resource\":
                      \"*\" }, { \"Effect\": \"Allow\", \"Action\": [ \"route53:ChangeResourceRecordSets\",
                      \"route53:ListResourceRecordSets\" ], \"Resource\": \"arn:aws:route53:::%s\"
                      } ] }"
                    type: string
                  imageRegistryARN:
                    description: "ImageRegistryARN is an ARN value referencing a role
                      appropriate for the Image Registry Operator. \n The following
                      is an example of a valid policy document: \n { \"Version\":
                      \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Action\":
                      [ \"s3:CreateBucket\", \"s3:DeleteBucket\", \"s3:PutBucketTagging\",
                      \"s3:GetBucketTagging\", \"s3:PutBucketPublicAccessBlock\",
                      \"s3:GetBucketPublicAccessBlock\", \"s3:PutEncryptionConfiguration\",
                      \"s3:GetEncryptionConfiguration\", \"s3:PutLifecycleConfiguration\",
                      \"s3:GetLifecycleConfiguration\", \"s3:GetBucketLocation\",
                      \"s3:ListBucket\", \"s3:GetObject\", \"s3:PutObject\", \"s3:DeleteObject\",
                      \"s3:ListBucketMultipartUploads\", \"s3:AbortMultipartUpload\",
                      \"s3:ListMultipartUploadParts\" ], \"Resource\": \"*\" } ] }"
                    type: string
                  ingressARN:
                    description: "The referenced role must have a trust relationship
                      that allows it to be assumed via web identity. https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html.
                      Example: { \"Version\": \"2012-10-17\", \"Statement\": [ { \"Effect\":
                      \"Allow\", \"Principal\": { \"Federated\": \"{{ .ProviderARN
                      }}\" }, \"Action\": \"sts:AssumeRoleWithWebIdentity\", \"Condition\":
                      { \"StringEquals\": { \"{{ .ProviderName }}:sub\": {{ .ServiceAccounts
                      }} } } } ] } \n IngressARN is an ARN value referencing a role
                      appropriate for the Ingress Operator. \n The following is an
                      example of a valid policy document: \n { \"Version\": \"2012-10-17\",
                      \"Statement\": [ { \"Effect\": \"Allow\", \"Action\": [ \"elasticloadbalancing:DescribeLoadBalancers\",
                      \"tag:GetResources\", \"route53:ListHostedZones\" ], \"Resource\":
                      \"*\" }, { \"Effect\": \"Allow\", \"Action\": [ \"route53:ChangeResourceRecordSets\"
                      ], \"Resource\": [ \"arn:aws:route53:::PUBLIC_ZONE_ID\", \"arn:aws:route53:::PRIVATE_ZONE_ID\"
                      ] } ] }"
                    type: string
                  kmsProviderARN:
                    type: string
                  kubeCloudControllerARN:
                    description: "KubeCloudControllerARN is an ARN value referencing
                      a role appropriate for the KCM/KCC. Source: https://cloud-provider-aws.sigs.k8s.io/prerequisites/#iam-policies
                      \n The following is an example of a valid policy document: \n
                      { \"Version\": \"2012-10-17\", \"Statement\": [ { \"Action\":
                      [ \"autoscaling:DescribeAutoScalingGroups\", \"autoscaling:DescribeLaunchConfigurations\",
                      \"autoscaling:DescribeTags\", \"ec2:DescribeAvailabilityZones\",
                      \"ec2:DescribeInstances\", \"ec2:DescribeImages\", \"ec2:DescribeRegions\",
                      \"ec2:DescribeRouteTables\", \"ec2:DescribeSecurityGroups\",
                      \"ec2:DescribeSubnets\", \"ec2:DescribeVolumes\", \"ec2:CreateSecurityGroup\",
                      \"ec2:CreateTags\", \"ec2:CreateVolume\", \"ec2:ModifyInstanceAttribute\",
                      \"ec2:ModifyVolume\", \"ec2:AttachVolume\", \"ec2:AuthorizeSecurityGroupIngress\",
                      \"ec2:CreateRoute\", \"ec2:DeleteRoute\", \"ec2:DeleteSecurityGroup\",
                      \"ec2:DeleteVolume\", \"ec2:DetachVolume\", \"ec2:RevokeSecurityGroupIngress\",
                      \"ec2:DescribeVpcs\", \"elasticloadbalancing:AddTags\", \"elasticloadbalancing:AttachLoadBalancerToSubnets\",
                      \"elasticloadbalancing:ApplySecurityGroupsToLoadBalancer\",
                      \"elasticloadbalancing:CreateLoadBalancer\", \"elasticloadbalancing:CreateLoadBalancerPolicy\",
                      \"elasticloadbalancing:CreateLoadBalancerListeners\", \"elasticloadbalancing:ConfigureHealthCheck\",
                      \"elasticloadbalancing:DeleteLoadBalancer\", \"elasticloadbalancing:DeleteLoadBalancerListeners\",
                      \"elasticloadbalancing:DescribeLoadBalancers\", \"elasticloadbalancing:DescribeLoadBalancerAttributes\",
                      \"elasticloadbalancing:DetachLoadBalancerFromSubnets\", \"elasticloadbalancing:DeregisterInstancesFromLoadBalancer\",
                      \"elasticloadbalancing:ModifyLoadBalancerAttributes\", \"elasticloadbalancing:RegisterInstancesWithLoadBalancer\",
                      \"elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer\",
                      \"elasticloadbalancing:AddTags\", \"elasticloadbalancing:CreateListener\",
                      \"elasticloadbalancing:CreateTargetGroup\", \"elasticloadbalancing:DeleteListener\",
                      \"elasticloadbalancing:DeleteTargetGroup\", \"elasticloadbalancing:DeregisterTargets\",
                      \"elasticloadbalancing:DescribeListeners\", \"elasticloadbalancing:DescribeLoadBalancerPolicies\",
                      \"elasticloadbalancing:DescribeTargetGroups\", \"elasticloadbalancing:DescribeTargetHealth\",
                      \"elasticloadbalancing:ModifyListener\", \"elasticloadbalancing:ModifyTargetGroup\",
                      \"elasticloadbalancing:RegisterTargets\", \"elasticloadbalancing:SetLoadBalancerPoliciesOfListener\",
                      \"iam:CreateServiceLinkedRole\", \"kms:DescribeKey\" ], \"Resource\":
                      [ \"*\" ], \"Effect\": \"Allow\" } ] }"
                    type: string
                  networkARN:
                    description: "NetworkARN is an ARN value referencing a role appropriate
                      for the Network Operator. \n The following is an example of
                      a valid policy document: \n { \"Version\": \"2012-10-17\", \"Statement\":
                      [ { \"Effect\": \"Allow\", \"Action\": [ \"ec2:DescribeInstances\",
                      \"ec2:DescribeInstanceStatus\", \"ec2:DescribeInstanceTypes\",
                      \"ec2:UnassignPrivateIpAddresses\", \"ec2:AssignPrivateIpAddresses\",
                      \"ec2:UnassignIpv6Addresses\", \"ec2:AssignIpv6Addresses\",
                      \"ec2:DescribeSubnets\", \"ec2:DescribeNetworkInterfaces\" ],
                      \"Resource\": \"*\" } ] }"
                    type: string
                  nodePoolManagementARN:
                    description: "NodePoolManagementARN is an ARN value referencing
                      a role appropriate for the CAPI Controller. \n The following
                      is an example of a valid policy document: \n { \"Version\":
                      \"2012-10-17\", \"Statement\": [ { \"Action\": [ \"ec2:AssociateRouteTable\",
                      \"ec2:AttachInternetGateway\", \"ec2:AuthorizeSecurityGroupIngress\",
                      \"ec2:CreateInternetGateway\", \"ec2:CreateNatGateway\", \"ec2:CreateRoute\",
                      \"ec2:CreateRouteTable\", \"ec2:CreateSecurityGroup\", \"ec2:CreateSubnet\",
                      \"ec2:CreateTags\", \"ec2:DeleteInternetGateway\", \"ec2:DeleteNatGateway\",
                      \"ec2:DeleteRouteTable\", \"ec2:DeleteSecurityGroup\", \"ec2:DeleteSubnet\",
                      \"ec2:DeleteTags\", \"ec2:DescribeAccountAttributes\", \"ec2:DescribeAddresses\",
                      \"ec2:DescribeAvailabilityZones\", \"ec2:DescribeImages\", \"ec2:DescribeInstances\",
                      \"ec2:DescribeInternetGateways\", \"ec2:DescribeNatGateways\",
                      \"ec2:DescribeNetworkInterfaces\", \"ec2:DescribeNetworkInterfaceAttribute\",
                      \"ec2:DescribeRouteTables\", \"ec2:DescribeSecurityGroups\",
                      \"ec2:DescribeSubnets\", \"ec2:DescribeVpcs\", \"ec2:DescribeVpcAttribute\",
                      \"ec2:DescribeVolumes\", \"ec2:DetachInternetGateway\", \"ec2:DisassociateRouteTable\",
                      \"ec2:DisassociateAddress\", \"ec2:ModifyInstanceAttribute\",
                      \"ec2:ModifyNetworkInterfaceAttribute\", \"ec2:ModifySubnetAttribute\",
                      \"ec2:RevokeSecurityGroupIngress\", \"ec2:RunInstances\", \"ec2:TerminateInstances\",
                      \"tag:GetResources\", \"ec2:CreateLaunchTemplate\", \"ec2:CreateLaunchTemplateVersion\",
                      \"ec2:DescribeLaunchTemplates\", \"ec2:DescribeLaunchTemplateVersions\",
                      \"ec2:DeleteLaunchTemplate\", \"ec2:DeleteLaunchTemplateVersions\"
                      ], \"Resource\": [ \"*\" ], \"Effect\": \"Allow\" }, { \"Condition\":
                      { \"StringLike\": { \"iam:AWSServiceName\": \"elasticloadbalancing.amazonaws.com\"
                      } }, \"Action\": [ \"iam:CreateServiceLinkedRole\" ], \"Resource\":
                      [ \"arn:*:iam::*:role/aws-service-role/elasticloadbalancing.amazonaws.com/AWSServiceRoleForElasticLoadBalancing\"
                      ], \"Effect\": \"Allow\" }, { \"Action\": [ \"iam:PassRole\"
                      ], \"Resource\": [ \"arn:*:iam::*:role/*-worker-role\" ], \"Effect\":
                      \"Allow\" }, { \"Effect\": \"Allow\", \"Action\": [ \"kms:Decrypt\",
                      \"kms:ReEncrypt\", \"kms:GenerateDataKeyWithoutPlainText\",
                      \"kms:DescribeKey\" ], \"Resource\": \"*\" }, { \"Effect\":
                      \"Allow\", \"Action\": [ \"kms:CreateGrant\" ], \"Resource\":
                      \"*\", \"Condition\": { \"Bool\": { \"kms:GrantIsForAWSResource\":
                      true } } } ] }"
                    type: string
                  storageARN:
                    description: "StorageARN is an ARN value referencing a role appropriate
                      for the Storage Operator. \n The following is an example of
                      a valid policy document: \n { \"Version\": \"2012-10-17\", \"Statement\":
                      [ { \"Effect\": \"Allow\", \"Action\": [ \"ec2:AttachVolume\",
                      \"ec2:CreateSnapshot\", \"ec2:CreateTags\", \"ec2:CreateVolume\",
                      \"ec2:DeleteSnapshot\", \"ec2:DeleteTags\", \"ec2:DeleteVolume\",
                      \"ec2:DescribeInstances\", \"ec2:DescribeSnapshots\", \"ec2:DescribeTags\",
                      \"ec2:DescribeVolumes\", \"ec2:DescribeVolumesModifications\",
                      \"ec2:DetachVolume\", \"ec2:ModifyVolume\" ], \"Resource\":
                      \"*\" } ] }"
                    type: string
                required:
                - controlPlaneOperatorARN
                - imageRegistryARN
                - ingressARN
                - kmsProviderARN
                - kubeCloudControllerARN
                - networkARN
                - nodePoolManagementARN
                - storageARN
                type: object
              subnets:
                description: The Subnet IDs to use when installing the cluster. SubnetIDs
                  should come in pairs; two per availability zone, one private and
                  one public.
                items:
                  type: string
                type: array
              supportRoleARN:
                type: string
              version:
                description: Openshift version, for example "openshift-v4.12.15".
                type: string
            required:
            - accountID
            - availabilityZones
            - creatorARN
            - installerRoleARN
            - machineCIDR
            - oidcID
            - region
            - rolesRef
            - subnets
            - supportRoleARN
            - version
            type: object
          status:
            properties:
              conditions:
                description: Conditions specifies the cpnditions for the managed control
                  plane
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              externalManagedControlPlane:
                default: true
                description: ExternalManagedControlPlane indicates to cluster-api
                  that the control plane is managed by an external service such as
                  AKS, EKS, GKE, etc.
                type: boolean
              failureMessage:
                description: ErrorMessage indicates that there is a terminal problem
                  reconciling the state, and will be set to a descriptive error message.
                type: string
              initialized:
                description: Initialized denotes whether or not the control plane
                  has the uploaded kubernetes config-map.
                type: boolean
              ready:
                default: false
                description: Ready denotes that the AWSManagedControlPlane API Server
                  is ready to receive requests and that the VPC infra is ready.
                type: boolean
            required:
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
