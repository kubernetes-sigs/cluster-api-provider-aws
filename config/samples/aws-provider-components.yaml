apiVersion: v1
kind: Namespace
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: aws-provider-system
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: awsclusterproviderconfigs.awsprovider.k8s.io
spec:
  group: awsprovider.k8s.io
  names:
    kind: AWSClusterProviderConfig
    plural: awsclusterproviderconfigs
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          type: object
        region:
          type: string
        sshKeyName:
          type: string
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: awsclusterproviderstatuses.awsprovider.k8s.io
spec:
  group: awsprovider.k8s.io
  names:
    kind: AWSClusterProviderStatus
    plural: awsclusterproviderstatuses
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          type: string
        bastion:
          properties:
            ebsOptimized:
              type: boolean
            enaSupport:
              type: boolean
            iamProfile:
              type: string
            id:
              type: string
            imageId:
              type: string
            instanceState:
              type: string
            keyName:
              type: string
            privateIp:
              type: string
            publicIp:
              type: string
            securityGroupIds:
              items:
                type: string
              type: array
            subnetId:
              type: string
            tags:
              type: object
            type:
              type: string
            userData:
              type: string
          required:
          - id
          type: object
        kind:
          type: string
        metadata:
          type: object
        network:
          properties:
            apiServerElb:
              properties:
                dnsName:
                  type: string
                healthChecks:
                  properties:
                    healthyThreshold:
                      format: int64
                      type: integer
                    interval:
                      format: int64
                      type: integer
                    target:
                      type: string
                    timeout:
                      format: int64
                      type: integer
                    unhealthyThreshold:
                      format: int64
                      type: integer
                  required:
                  - target
                  - interval
                  - timeout
                  - healthyThreshold
                  - unhealthyThreshold
                  type: object
                listeners:
                  items:
                    properties:
                      instancePort:
                        format: int64
                        type: integer
                      instanceProtocol:
                        type: string
                      port:
                        format: int64
                        type: integer
                      protocol:
                        type: string
                    required:
                    - protocol
                    - port
                    - instanceProtocol
                    - instancePort
                    type: object
                  type: array
                name:
                  type: string
                scheme:
                  type: string
                securityGroupIds:
                  items:
                    type: string
                  type: array
                subnetIds:
                  items:
                    type: string
                  type: array
                tags:
                  type: object
              type: object
            internetGatewayId:
              type: string
            securityGroups:
              type: object
            subnets:
              items:
                properties:
                  availabilityZone:
                    type: string
                  cidrBlock:
                    type: string
                  id:
                    type: string
                  natGatewayId:
                    type: string
                  public:
                    type: boolean
                  routeTableId:
                    type: string
                  vpcId:
                    type: string
                required:
                - id
                - vpcId
                - availabilityZone
                - cidrBlock
                - public
                - routeTableId
                - natGatewayId
                type: object
              type: array
            vpc:
              properties:
                cidrBlock:
                  type: string
                id:
                  type: string
              required:
              - id
              - cidrBlock
              type: object
          type: object
        region:
          type: string
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: awsmachineproviderconfigs.awsprovider.k8s.io
spec:
  group: awsprovider.k8s.io
  names:
    kind: AWSMachineProviderConfig
    plural: awsmachineproviderconfigs
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        additionalSecurityGroups:
          items:
            properties:
              arn:
                type: string
              filters:
                items:
                  properties:
                    name:
                      type: string
                    values:
                      items:
                        type: string
                      type: array
                  required:
                  - name
                  - values
                  type: object
                type: array
              id:
                type: string
            type: object
          type: array
        additionalTags:
          type: object
        ami:
          properties:
            arn:
              type: string
            filters:
              items:
                properties:
                  name:
                    type: string
                  values:
                    items:
                      type: string
                    type: array
                required:
                - name
                - values
                type: object
              type: array
            id:
              type: string
          type: object
        apiVersion:
          type: string
        iamInstanceProfile:
          type: string
        instanceType:
          type: string
        keyName:
          type: string
        kind:
          type: string
        metadata:
          type: object
        publicIP:
          type: boolean
        subnet:
          properties:
            arn:
              type: string
            filters:
              items:
                properties:
                  name:
                    type: string
                  values:
                    items:
                      type: string
                    type: array
                required:
                - name
                - values
                type: object
              type: array
            id:
              type: string
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: awsmachineproviderstatuses.awsprovider.k8s.io
spec:
  group: awsprovider.k8s.io
  names:
    kind: AWSMachineProviderStatus
    plural: awsmachineproviderstatuses
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          type: string
        conditions:
          items:
            properties:
              lastProbeTime:
                format: date-time
                type: string
              lastTransitionTime:
                format: date-time
                type: string
              message:
                type: string
              reason:
                type: string
              status:
                type: string
              type:
                type: string
            required:
            - type
            - status
            - lastProbeTime
            - lastTransitionTime
            - reason
            - message
            type: object
          type: array
        instanceID:
          type: string
        instanceState:
          type: string
        kind:
          type: string
        metadata:
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: aws-provider-manager-role
rules:
- apiGroups:
  - awsprovider.k8s.io
  resources:
  - awsclusterproviderconfigs
  - awsclusterproviderstatuses
  - awsmachineproviderconfigs
  - awsmachineproviderstatuses
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - cluster.k8s.io
  resources:
  - clusters
  - clusters/status
  - machines
  - machines/status
  - machinedeployments
  - machinedeployments/status
  - machinesets
  - machinesets/status
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  - events
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: aws-provider-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aws-provider-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: aws-provider-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
  name: aws-provider-controller-manager-service
  namespace: aws-provider-system
spec:
  ports:
  - port: 443
  selector:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
  name: aws-provider-controller-manager
  namespace: aws-provider-system
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
      controller-tools.k8s.io: "1.0"
  serviceName: aws-provider-controller-manager-service
  template:
    metadata:
      labels:
        control-plane: controller-manager
        controller-tools.k8s.io: "1.0"
    spec:
      containers:
      - args:
        - -logtostderr=true
        - -stderrthreshold=INFO
        command:
        - /root/manager
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: SET_BY_PATCH
        name: manager
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
        volumeMounts:
        - mountPath: /etc/kubernetes
          name: config
        - mountPath: /etc/ssl/certs
          name: certs
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoExecute
        key: node.alpha.kubernetes.io/notReady
        operator: Exists
      - effect: NoExecute
        key: node.alpha.kubernetes.io/unreachable
        operator: Exists
      volumes:
      - hostPath:
          path: /etc/kubernetes
        name: config
      - hostPath:
          path: /etc/ssl/certs
        name: certs
