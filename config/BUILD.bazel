# Copyright 2019 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("//build:controller_gen.bzl", "controller_gen")

controller_gen(
    name = "config",
    api = [
        {
            "group": "awsprovider.k8s.io",
            "version": "v1alpha1",
            "types": [
                "AWSClusterProviderSpec",
                "AWSClusterProviderStatus",
                "AWSMachineProviderSpec",
                "AWSMachineProviderStatus",
            ],
        },
    ],
    importpath = "sigs.k8s.io/cluster-api-provider-aws",
    visibility = ["//visibility:public"],
)

genrule(
    name = "aws-provider-yaml",
    srcs = [
        "//config/default:kustomization.yaml",
        "//config/default:rbac_role_binding_patch.yaml",
        "//config/manager:manager.yaml",
        "//cmd/clusterctl/examples/aws:out/aws_manager_image_patch.yaml",
        "//cmd/clusterctl/examples/aws:test-credentials",
        "config",
        ":credential_file",
        "//:WORKSPACE",
    ],
    outs = ["aws_provider.yaml"],
    cmd = """install -D $(location :credential_file) $(@D)/../cmd/clusterctl/examples/aws/out/credentials && \\
             CONFIG_SRCDIR={root_dir}/config && \\
             cp -R $$CONFIG_SRCDIR/default $(@D)/default && \\
             cp -R $$CONFIG_SRCDIR/manager $(@D)/manager && \\
             {kustomize} build $(@D)/default > $@
    """.format(
        kustomize = "$(location @io_k8s_sigs_kustomize//:kustomize)",
        root_dir = "$$(dirname $(location //:WORKSPACE))",
    ),
    tools = ["@io_k8s_sigs_kustomize//:kustomize"],
    visibility = ["//visibility:public"],
)

genrule(
    name = "credential_file",
    outs = ["credentials"],
    visibility = ["//visibility:public"],
    cmd = " && ".join([
        "touch $@",
        "export AWS_ACCESS_KEY_ID=$$(grep ^AWS_ACCESS_KEY_ID bazel-out/volatile-status.txt | cut -f2 -d\" \")",
        "export AWS_SECRET_ACCESS_KEY=$$(grep ^AWS_SECRET_ACCESS_KEY bazel-out/volatile-status.txt | cut -f2 -d\" \")",
        "echo '[default]' >> $@",
        "echo aws_access_key_id = $$AWS_ACCESS_KEY_ID >> $@",
        "echo aws_secret_access_key = $$AWS_SECRET_ACCESS_KEY >> $@",
    ]),
    stamp = 1,
)
