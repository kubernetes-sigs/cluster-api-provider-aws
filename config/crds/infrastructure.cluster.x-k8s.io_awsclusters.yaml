
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: awsclusters.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: AWSCluster
    plural: awsclusters
  scope: ""
  validation:
    openAPIV3Schema:
      description: AWSCluster is the Schema for the awsclusters API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: AWSClusterSpec defines the desired state of AWSCluster
          properties:
            additionalUserDataFiles:
              description: AdditionalUserDataFiles specifies extra files to be passed
                to all Machines' user_data upon creation.
              items:
                description: Files defines the input for generating write_files in
                  cloud-init.
                properties:
                  content:
                    description: Content is the actual content of the file.
                    type: string
                  owner:
                    description: Owner specifies the ownership of the file, e.g. "root:root".
                    type: string
                  path:
                    description: Path specifies the full path on disk where to store
                      the file.
                    type: string
                  permissions:
                    description: Permissions specifies the permissions to assign to
                      the file, e.g. "0640".
                    type: string
                required:
                - content
                - owner
                - path
                - permissions
                type: object
              type: array
            caKeyPair:
              description: CAKeyPair is the key pair for ca certs.
              properties:
                cert:
                  format: byte
                  type: string
                key:
                  format: byte
                  type: string
              type: object
            etcdCAKeyPair:
              description: EtcdCAKeyPair is the key pair for etcd.
              properties:
                cert:
                  format: byte
                  type: string
                key:
                  format: byte
                  type: string
              type: object
            frontProxyCAKeyPair:
              description: FrontProxyCAKeyPair is the key pair for FrontProxyKeyPair.
              properties:
                cert:
                  format: byte
                  type: string
                key:
                  format: byte
                  type: string
              type: object
            networkSpec:
              description: NetworkSpec encapsulates all things related to AWS network.
              properties:
                subnets:
                  description: Subnets configuration.
                  items:
                    description: SubnetSpec configures an AWS Subnet.
                    properties:
                      availabilityZone:
                        description: AvailabilityZone defines the availability zone
                          to use for this subnet in the cluster's region.
                        type: string
                      cidrBlock:
                        description: CidrBlock is the CIDR block to be used when the
                          provider creates a managed VPC.
                        type: string
                      id:
                        description: ID defines a unique identifier to reference this
                          resource.
                        type: string
                      isPublic:
                        description: IsPublic defines the subnet as a public subnet.
                          A subnet is public when it is associated with a route table
                          that has a route to an internet gateway.
                        type: boolean
                      natGatewayId:
                        description: NatGatewayID is the NAT gateway id associated
                          with the subnet. Ignored unless the subnet is managed by
                          the provider, in which case this is set on the public subnet
                          where the NAT gateway resides. It is then used to determine
                          routes for private subnets in the same AZ as the public
                          subnet.
                        type: string
                      routeTableId:
                        description: RouteTableID is the routing table id associated
                          with the subnet.
                        type: string
                      tags:
                        additionalProperties:
                          type: string
                        description: Tags is a collection of tags describing the resource.
                        type: object
                    type: object
                  type: array
                vpc:
                  description: VPC configuration.
                  properties:
                    cidrBlock:
                      description: CidrBlock is the CIDR block to be used when the
                        provider creates a managed VPC. Defaults to 10.0.0.0/16.
                      type: string
                    id:
                      description: ID is the vpc-id of the VPC this provider should
                        use to create resources.
                      type: string
                    internetGatewayId:
                      description: InternetGatewayID is the id of the internet gateway
                        associated with the VPC.
                      type: string
                    tags:
                      additionalProperties:
                        type: string
                      description: Tags is a collection of tags describing the resource.
                      type: object
                  type: object
              type: object
            region:
              description: The AWS Region the cluster lives in.
              type: string
            saKeyPair:
              description: SAKeyPair is the service account key pair.
              properties:
                cert:
                  format: byte
                  type: string
                key:
                  format: byte
                  type: string
              type: object
            sshKeyName:
              description: SSHKeyName is the name of the ssh key to attach to the
                bastion host.
              type: string
          type: object
        status:
          description: AWSClusterStatus defines the observed state of AWSCluster
          properties:
            bastion:
              description: Instance describes an AWS instance.
              properties:
                ebsOptimized:
                  description: Indicates whether the instance is optimized for Amazon
                    EBS I/O.
                  type: boolean
                enaSupport:
                  description: Specifies whether enhanced networking with ENA is enabled.
                  type: boolean
                iamProfile:
                  description: The name of the IAM instance profile associated with
                    the instance, if applicable.
                  type: string
                id:
                  type: string
                imageId:
                  description: The ID of the AMI used to launch the instance.
                  type: string
                instanceState:
                  description: The current state of the instance.
                  type: string
                keyName:
                  description: The name of the SSH key pair.
                  type: string
                privateIp:
                  description: The private IPv4 address assigned to the instance.
                  type: string
                publicIp:
                  description: The public IPv4 address assigned to the instance, if
                    applicable.
                  type: string
                rootDeviceSize:
                  description: Specifies size (in Gi) of the root storage device
                  format: int64
                  type: integer
                securityGroupIds:
                  description: SecurityGroupIDs are one or more security group IDs
                    this instance belongs to.
                  items:
                    type: string
                  type: array
                subnetId:
                  description: The ID of the subnet of the instance.
                  type: string
                tags:
                  additionalProperties:
                    type: string
                  description: The tags associated with the instance.
                  type: object
                type:
                  description: The instance type.
                  type: string
                userData:
                  description: UserData is the raw data script passed to the instance
                    which is run upon bootstrap. This field must not be base64 encoded
                    and should only be used when running a new instance.
                  type: string
              required:
              - id
              type: object
            network:
              description: Network encapsulates AWS networking resources.
              properties:
                apiServerElb:
                  description: APIServerELB is the Kubernetes api server classic load
                    balancer.
                  properties:
                    attributes:
                      description: Attributes defines extra attributes associated
                        with the load balancer.
                      properties:
                        idleTimeout:
                          description: IdleTimeout is time that the connection is
                            allowed to be idle (no data has been sent over the connection)
                            before it is closed by the load balancer.
                          format: int64
                          type: integer
                      type: object
                    dnsName:
                      description: DNSName is the dns name of the load balancer.
                      type: string
                    healthChecks:
                      description: HealthCheck is the classic elb health check associated
                        with the load balancer.
                      properties:
                        healthyThreshold:
                          format: int64
                          type: integer
                        interval:
                          description: A Duration represents the elapsed time between
                            two instants as an int64 nanosecond count. The representation
                            limits the largest representable duration to approximately
                            290 years.
                          format: int64
                          type: integer
                        target:
                          type: string
                        timeout:
                          description: A Duration represents the elapsed time between
                            two instants as an int64 nanosecond count. The representation
                            limits the largest representable duration to approximately
                            290 years.
                          format: int64
                          type: integer
                        unhealthyThreshold:
                          format: int64
                          type: integer
                      required:
                      - healthyThreshold
                      - interval
                      - target
                      - timeout
                      - unhealthyThreshold
                      type: object
                    listeners:
                      description: Listeners is an array of classic elb listeners
                        associated with the load balancer. There must be at least
                        one.
                      items:
                        description: ClassicELBListener defines an AWS classic load
                          balancer listener.
                        properties:
                          instancePort:
                            format: int64
                            type: integer
                          instanceProtocol:
                            description: ClassicELBProtocol defines listener protocols
                              for a classic load balancer.
                            type: string
                          port:
                            format: int64
                            type: integer
                          protocol:
                            description: ClassicELBProtocol defines listener protocols
                              for a classic load balancer.
                            type: string
                        required:
                        - instancePort
                        - instanceProtocol
                        - port
                        - protocol
                        type: object
                      type: array
                    name:
                      description: The name of the load balancer. It must be unique
                        within the set of load balancers defined in the region. It
                        also serves as identifier.
                      type: string
                    scheme:
                      description: Scheme is the load balancer scheme, either internet-facing
                        or private.
                      type: string
                    securityGroupIds:
                      description: SecurityGroupIDs is an array of security groups
                        assigned to the load balancer.
                      items:
                        type: string
                      type: array
                    subnetIds:
                      description: SubnetIDs is an array of subnets in the VPC attached
                        to the load balancer.
                      items:
                        type: string
                      type: array
                    tags:
                      additionalProperties:
                        type: string
                      description: Tags is a map of tags associated with the load
                        balancer.
                      type: object
                  type: object
                securityGroups:
                  additionalProperties:
                    description: SecurityGroup defines an AWS security group.
                    properties:
                      id:
                        description: ID is a unique identifier.
                        type: string
                      ingressRule:
                        description: IngressRules is the inbound rules associated
                          with the security group.
                        items:
                          description: IngressRule defines an AWS ingress rule for
                            security groups.
                          properties:
                            cidrBlocks:
                              description: List of CIDR blocks to allow access from.
                                Cannot be specified with SourceSecurityGroupID.
                              items:
                                type: string
                              type: array
                            description:
                              type: string
                            fromPort:
                              format: int64
                              type: integer
                            protocol:
                              description: SecurityGroupProtocol defines the protocol
                                type for a security group rule.
                              type: string
                            sourceSecurityGroupIds:
                              description: The security group id to allow access from.
                                Cannot be specified with CidrBlocks.
                              items:
                                type: string
                              type: array
                            toPort:
                              format: int64
                              type: integer
                          required:
                          - cidrBlocks
                          - description
                          - fromPort
                          - protocol
                          - sourceSecurityGroupIds
                          - toPort
                          type: object
                        type: array
                      name:
                        description: Name is the security group name.
                        type: string
                      tags:
                        additionalProperties:
                          type: string
                        description: Tags is a map of tags associated with the security
                          group.
                        type: object
                    required:
                    - id
                    - ingressRule
                    - name
                    type: object
                  description: SecurityGroups is a map from the role/kind of the security
                    group to its unique name, if any.
                  type: object
              type: object
          type: object
      type: object
  versions:
  - name: v1alpha2
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
