
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: awsclusterproviderspecs.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: AWSClusterProviderSpec
    plural: awsclusterproviderspecs
  scope: ""
  validation:
    openAPIV3Schema:
      description: AWSClusterProviderSpec is the providerConfig for AWS in the cluster
        object
      properties:
        additionalUserDataFiles:
          description: AdditionalUserDataFiles specifies extra files to be passed
            to all Machines' user_data upon creation.
          items:
            description: Files defines the input for generating write_files in cloud-init.
            properties:
              content:
                description: Content is the actual content of the file.
                type: string
              owner:
                description: Owner specifies the ownership of the file, e.g. "root:root".
                type: string
              path:
                description: Path specifies the full path on disk where to store the
                  file.
                type: string
              permissions:
                description: Permissions specifies the permissions to assign to the
                  file, e.g. "0640".
                type: string
            required:
            - content
            - owner
            - path
            - permissions
            type: object
          type: array
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        caKeyPair:
          description: CAKeyPair is the key pair for ca certs.
          properties:
            cert:
              format: byte
              type: string
            key:
              format: byte
              type: string
          type: object
        etcdCAKeyPair:
          description: EtcdCAKeyPair is the key pair for etcd.
          properties:
            cert:
              format: byte
              type: string
            key:
              format: byte
              type: string
          type: object
        frontProxyCAKeyPair:
          description: FrontProxyCAKeyPair is the key pair for FrontProxyKeyPair.
          properties:
            cert:
              format: byte
              type: string
            key:
              format: byte
              type: string
          type: object
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        networkSpec:
          description: NetworkSpec encapsulates all things related to AWS network.
          properties:
            subnets:
              description: Subnets configuration.
              items:
                description: SubnetSpec configures an AWS Subnet.
                properties:
                  availabilityZone:
                    description: AvailabilityZone defines the availability zone to
                      use for this subnet in the cluster's region.
                    type: string
                  cidrBlock:
                    description: CidrBlock is the CIDR block to be used when the provider
                      creates a managed VPC.
                    type: string
                  id:
                    description: ID defines a unique identifier to reference this
                      resource.
                    type: string
                  isPublic:
                    description: IsPublic defines the subnet as a public subnet. A
                      subnet is public when it is associated with a route table that
                      has a route to an internet gateway.
                    type: boolean
                  natGatewayId:
                    description: NatGatewayID is the NAT gateway id associated with
                      the subnet. Ignored unless the subnet is managed by the provider,
                      in which case this is set on the public subnet where the NAT
                      gateway resides. It is then used to determine routes for private
                      subnets in the same AZ as the public subnet.
                    type: string
                  routeTableId:
                    description: RouteTableID is the routing table id associated with
                      the subnet.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Tags is a collection of tags describing the resource.
                    type: object
                type: object
              type: array
            vpc:
              description: VPC configuration.
              properties:
                cidrBlock:
                  description: CidrBlock is the CIDR block to be used when the provider
                    creates a managed VPC. Defaults to 10.0.0.0/16.
                  type: string
                id:
                  description: ID is the vpc-id of the VPC this provider should use
                    to create resources.
                  type: string
                internetGatewayId:
                  description: InternetGatewayID is the id of the internet gateway
                    associated with the VPC.
                  type: string
                tags:
                  additionalProperties:
                    type: string
                  description: Tags is a collection of tags describing the resource.
                  type: object
              type: object
          type: object
        region:
          description: The AWS Region the cluster lives in.
          type: string
        saKeyPair:
          description: SAKeyPair is the service account key pair.
          properties:
            cert:
              format: byte
              type: string
            key:
              format: byte
              type: string
          type: object
        sshKeyName:
          description: SSHKeyName is the name of the ssh key to attach to the bastion
            host.
          type: string
      type: object
  versions:
  - name: v1alpha2
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
