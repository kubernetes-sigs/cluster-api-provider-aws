apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capa-serving-cert
    controller-gen.kubebuilder.io/version: v0.2.9
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
    cluster.x-k8s.io/v1alpha3: v1alpha3
  name: awsclusters.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capa-webhook-service
          namespace: capi-webhook-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AWSCluster
    listKind: AWSClusterList
    plural: awsclusters
    singular: awscluster
  scope: Namespaced
  versions:
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: AWSCluster is the Schema for the awsclusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AWSClusterSpec defines the desired state of AWSCluster
            properties:
              additionalTags:
                additionalProperties:
                  type: string
                description: AdditionalTags is an optional set of tags to add to AWS
                  resources managed by the AWS provider, in addition to the ones added
                  by default.
                type: object
              controlPlaneLoadBalancer:
                description: ControlPlaneLoadBalancer is optional configuration for
                  customizing control plane behavior
                properties:
                  scheme:
                    description: Scheme sets the scheme of the load balancer (defaults
                      to Internet-facing)
                    type: string
                type: object
              disableBastionHost:
                description: DisableBastionHost is an optional configuration field
                  to prevent the creation of a bastion host instance.
                type: boolean
              networkSpec:
                description: NetworkSpec encapsulates all things related to AWS network.
                properties:
                  subnets:
                    description: Subnets configuration.
                    items:
                      description: SubnetSpec configures an AWS Subnet.
                      properties:
                        availabilityZone:
                          description: AvailabilityZone defines the availability zone
                            to use for this subnet in the cluster's region.
                          type: string
                        cidrBlock:
                          description: CidrBlock is the CIDR block to be used when
                            the provider creates a managed VPC.
                          type: string
                        id:
                          description: ID defines a unique identifier to reference
                            this resource.
                          type: string
                        isPublic:
                          description: IsPublic defines the subnet as a public subnet.
                            A subnet is public when it is associated with a route
                            table that has a route to an internet gateway.
                          type: boolean
                        natGatewayId:
                          description: NatGatewayID is the NAT gateway id associated
                            with the subnet. Ignored unless the subnet is managed
                            by the provider, in which case this is set on the public
                            subnet where the NAT gateway resides. It is then used
                            to determine routes for private subnets in the same AZ
                            as the public subnet.
                          type: string
                        routeTableId:
                          description: RouteTableID is the routing table id associated
                            with the subnet.
                          type: string
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags is a collection of tags describing the
                            resource.
                          type: object
                      type: object
                    type: array
                  vpc:
                    description: VPC configuration.
                    properties:
                      cidrBlock:
                        description: CidrBlock is the CIDR block to be used when the
                          provider creates a managed VPC. Defaults to 10.0.0.0/16.
                        type: string
                      id:
                        description: ID is the vpc-id of the VPC this provider should
                          use to create resources.
                        type: string
                      internetGatewayId:
                        description: InternetGatewayID is the id of the internet gateway
                          associated with the VPC.
                        type: string
                      tags:
                        additionalProperties:
                          type: string
                        description: Tags is a collection of tags describing the resource.
                        type: object
                    type: object
                type: object
              region:
                description: The AWS Region the cluster lives in.
                type: string
              sshKeyName:
                description: SSHKeyName is the name of the ssh key to attach to the
                  bastion host.
                type: string
            type: object
          status:
            description: AWSClusterStatus defines the observed state of AWSCluster
            properties:
              apiEndpoints:
                description: APIEndpoints represents the endpoints to communicate
                  with the control plane.
                items:
                  description: APIEndpoint represents a reachable Kubernetes API endpoint.
                  properties:
                    host:
                      description: The hostname on which the API server is serving.
                      type: string
                    port:
                      description: The port on which the API server is serving.
                      type: integer
                  required:
                  - host
                  - port
                  type: object
                type: array
              bastion:
                description: Instance describes an AWS instance.
                properties:
                  addresses:
                    description: Addresses contains the AWS instance associated addresses.
                    items:
                      description: MachineAddress contains information for the node's
                        address.
                      properties:
                        address:
                          description: The machine address.
                          type: string
                        type:
                          description: Machine address type, one of Hostname, ExternalIP
                            or InternalIP.
                          type: string
                      required:
                      - address
                      - type
                      type: object
                    type: array
                  ebsOptimized:
                    description: Indicates whether the instance is optimized for Amazon
                      EBS I/O.
                    type: boolean
                  enaSupport:
                    description: Specifies whether enhanced networking with ENA is
                      enabled.
                    type: boolean
                  iamProfile:
                    description: The name of the IAM instance profile associated with
                      the instance, if applicable.
                    type: string
                  id:
                    type: string
                  imageId:
                    description: The ID of the AMI used to launch the instance.
                    type: string
                  instanceState:
                    description: The current state of the instance.
                    type: string
                  networkInterfaces:
                    description: Specifies ENIs attached to instance
                    items:
                      type: string
                    type: array
                  privateIp:
                    description: The private IPv4 address assigned to the instance.
                    type: string
                  publicIp:
                    description: The public IPv4 address assigned to the instance,
                      if applicable.
                    type: string
                  rootDeviceSize:
                    description: Specifies size (in Gi) of the root storage device
                    format: int64
                    type: integer
                  securityGroupIds:
                    description: SecurityGroupIDs are one or more security group IDs
                      this instance belongs to.
                    items:
                      type: string
                    type: array
                  sshKeyName:
                    description: The name of the SSH key pair.
                    type: string
                  subnetId:
                    description: The ID of the subnet of the instance.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: The tags associated with the instance.
                    type: object
                  type:
                    description: The instance type.
                    type: string
                  userData:
                    description: UserData is the raw data script passed to the instance
                      which is run upon bootstrap. This field must not be base64 encoded
                      and should only be used when running a new instance.
                    type: string
                required:
                - id
                type: object
              network:
                description: Network encapsulates AWS networking resources.
                properties:
                  apiServerElb:
                    description: APIServerELB is the Kubernetes api server classic
                      load balancer.
                    properties:
                      attributes:
                        description: Attributes defines extra attributes associated
                          with the load balancer.
                        properties:
                          idleTimeout:
                            description: IdleTimeout is time that the connection is
                              allowed to be idle (no data has been sent over the connection)
                              before it is closed by the load balancer.
                            format: int64
                            type: integer
                        type: object
                      dnsName:
                        description: DNSName is the dns name of the load balancer.
                        type: string
                      healthChecks:
                        description: HealthCheck is the classic elb health check associated
                          with the load balancer.
                        properties:
                          healthyThreshold:
                            format: int64
                            type: integer
                          interval:
                            description: A Duration represents the elapsed time between
                              two instants as an int64 nanosecond count. The representation
                              limits the largest representable duration to approximately
                              290 years.
                            format: int64
                            type: integer
                          target:
                            type: string
                          timeout:
                            description: A Duration represents the elapsed time between
                              two instants as an int64 nanosecond count. The representation
                              limits the largest representable duration to approximately
                              290 years.
                            format: int64
                            type: integer
                          unhealthyThreshold:
                            format: int64
                            type: integer
                        required:
                        - healthyThreshold
                        - interval
                        - target
                        - timeout
                        - unhealthyThreshold
                        type: object
                      listeners:
                        description: Listeners is an array of classic elb listeners
                          associated with the load balancer. There must be at least
                          one.
                        items:
                          description: ClassicELBListener defines an AWS classic load
                            balancer listener.
                          properties:
                            instancePort:
                              format: int64
                              type: integer
                            instanceProtocol:
                              description: ClassicELBProtocol defines listener protocols
                                for a classic load balancer.
                              type: string
                            port:
                              format: int64
                              type: integer
                            protocol:
                              description: ClassicELBProtocol defines listener protocols
                                for a classic load balancer.
                              type: string
                          required:
                          - instancePort
                          - instanceProtocol
                          - port
                          - protocol
                          type: object
                        type: array
                      name:
                        description: The name of the load balancer. It must be unique
                          within the set of load balancers defined in the region.
                          It also serves as identifier.
                        type: string
                      scheme:
                        description: Scheme is the load balancer scheme, either internet-facing
                          or private.
                        type: string
                      securityGroupIds:
                        description: SecurityGroupIDs is an array of security groups
                          assigned to the load balancer.
                        items:
                          type: string
                        type: array
                      subnetIds:
                        description: SubnetIDs is an array of subnets in the VPC attached
                          to the load balancer.
                        items:
                          type: string
                        type: array
                      tags:
                        additionalProperties:
                          type: string
                        description: Tags is a map of tags associated with the load
                          balancer.
                        type: object
                    type: object
                  securityGroups:
                    additionalProperties:
                      description: SecurityGroup defines an AWS security group.
                      properties:
                        id:
                          description: ID is a unique identifier.
                          type: string
                        ingressRule:
                          description: IngressRules is the inbound rules associated
                            with the security group.
                          items:
                            description: IngressRule defines an AWS ingress rule for
                              security groups.
                            properties:
                              cidrBlocks:
                                description: List of CIDR blocks to allow access from.
                                  Cannot be specified with SourceSecurityGroupID.
                                items:
                                  type: string
                                type: array
                              description:
                                type: string
                              fromPort:
                                format: int64
                                type: integer
                              protocol:
                                description: SecurityGroupProtocol defines the protocol
                                  type for a security group rule.
                                type: string
                              sourceSecurityGroupIds:
                                description: The security group id to allow access
                                  from. Cannot be specified with CidrBlocks.
                                items:
                                  type: string
                                type: array
                              toPort:
                                format: int64
                                type: integer
                            required:
                            - description
                            - fromPort
                            - protocol
                            - toPort
                            type: object
                          type: array
                        name:
                          description: Name is the security group name.
                          type: string
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags is a map of tags associated with the security
                            group.
                          type: object
                      required:
                      - id
                      - name
                      type: object
                    description: SecurityGroups is a map from the role/kind of the
                      security group to its unique name, if any.
                    type: object
                type: object
              ready:
                type: boolean
            required:
            - ready
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: Cluster to which this AWSCluster belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: Cluster infrastructure is ready for EC2 instances
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: AWS VPC the cluster is using
      jsonPath: .spec.networkSpec.vpc.id
      name: VPC
      type: string
    - description: API Endpoint
      jsonPath: .status.apiEndpoints[0]
      name: Endpoint
      priority: 1
      type: string
    - description: Bastion IP address for breakglass access
      jsonPath: .status.bastion.publicIp
      name: Bastion IP
      type: string
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: AWSCluster is the Schema for the awsclusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AWSClusterSpec defines the desired state of AWSCluster
            properties:
              additionalTags:
                additionalProperties:
                  type: string
                description: AdditionalTags is an optional set of tags to add to AWS
                  resources managed by the AWS provider, in addition to the ones added
                  by default.
                type: object
              bastion:
                description: Bastion contains options to configure the bastion host.
                properties:
                  allowedCIDRBlocks:
                    description: AllowedCIDRBlocks is a list of CIDR blocks allowed
                      to access the bastion host. They are set as ingress rules for
                      the Bastion host's Security Group (defaults to 0.0.0.0/0).
                    items:
                      type: string
                    type: array
                  ami:
                    description: AMI will use the specified AMI to boot the bastion.
                      If not specified, the AMI will default to one picked out in
                      public space.
                    type: string
                  disableIngressRules:
                    description: DisableIngressRules will ensure there are no Ingress
                      rules in the bastion host's security group. Requires AllowedCIDRBlocks
                      to be empty.
                    type: boolean
                  enabled:
                    description: Enabled allows this provider to create a bastion
                      host instance with a public ip to access the VPC private network.
                    type: boolean
                  instanceType:
                    description: InstanceType will use the specified instance type
                      for the bastion. If not specified, Cluster API Provider AWS
                      will use t3.micro for all regions except us-east-1, where t2.micro
                      will be the default.
                    type: string
                type: object
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              controlPlaneLoadBalancer:
                description: ControlPlaneLoadBalancer is optional configuration for
                  customizing control plane behavior.
                properties:
                  crossZoneLoadBalancing:
                    description: "CrossZoneLoadBalancing enables the classic ELB cross
                      availability zone balancing. \n With cross-zone load balancing,
                      each load balancer node for your Classic Load Balancer distributes
                      requests evenly across the registered instances in all enabled
                      Availability Zones. If cross-zone load balancing is disabled,
                      each load balancer node distributes requests evenly across the
                      registered instances in its Availability Zone only. \n Defaults
                      to false."
                    type: boolean
                  scheme:
                    description: Scheme sets the scheme of the load balancer (defaults
                      to Internet-facing)
                    type: string
                type: object
              imageLookupBaseOS:
                description: ImageLookupBaseOS is the name of the base operating system
                  used to look up machine images when a machine does not specify an
                  AMI. When set, this will be used for all cluster machines unless
                  a machine specifies a different ImageLookupBaseOS.
                type: string
              imageLookupFormat:
                description: 'ImageLookupFormat is the AMI naming format to look up
                  machine images when a machine does not specify an AMI. When set,
                  this will be used for all cluster machines unless a machine specifies
                  a different ImageLookupOrg. Supports substitutions for {{.BaseOS}}
                  and {{.K8sVersion}} with the base OS and kubernetes version, respectively.
                  The BaseOS will be the value in ImageLookupBaseOS or ubuntu (the
                  default), and the kubernetes version as defined by the packages
                  produced by kubernetes/release without v as a prefix: 1.13.0, 1.12.5-mybuild.1,
                  or 1.17.3. For example, the default image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-*
                  will end up searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-*
                  for a Machine that is targeting kubernetes v1.18.0 and the ubuntu
                  base OS. See also: https://golang.org/pkg/text/template/'
                type: string
              imageLookupOrg:
                description: ImageLookupOrg is the AWS Organization ID to look up
                  machine images when a machine does not specify an AMI. When set,
                  this will be used for all cluster machines unless a machine specifies
                  a different ImageLookupOrg.
                type: string
              networkSpec:
                description: NetworkSpec encapsulates all things related to AWS network.
                properties:
                  cni:
                    description: CNI configuration
                    properties:
                      cniIngressRules:
                        description: CNIIngressRules specify rules to apply to control
                          plane and worker node security groups. The source for the
                          rule will be set to control plane and worker security group
                          IDs.
                        items:
                          description: CNIIngressRule defines an AWS ingress rule
                            for CNI requirements.
                          properties:
                            description:
                              type: string
                            fromPort:
                              format: int64
                              type: integer
                            protocol:
                              description: SecurityGroupProtocol defines the protocol
                                type for a security group rule.
                              type: string
                            toPort:
                              format: int64
                              type: integer
                          required:
                          - description
                          - fromPort
                          - protocol
                          - toPort
                          type: object
                        type: array
                    type: object
                  subnets:
                    description: Subnets configuration.
                    items:
                      description: SubnetSpec configures an AWS Subnet.
                      properties:
                        availabilityZone:
                          description: AvailabilityZone defines the availability zone
                            to use for this subnet in the cluster's region.
                          type: string
                        cidrBlock:
                          description: CidrBlock is the CIDR block to be used when
                            the provider creates a managed VPC.
                          type: string
                        id:
                          description: ID defines a unique identifier to reference
                            this resource.
                          type: string
                        isPublic:
                          description: IsPublic defines the subnet as a public subnet.
                            A subnet is public when it is associated with a route
                            table that has a route to an internet gateway.
                          type: boolean
                        natGatewayId:
                          description: NatGatewayID is the NAT gateway id associated
                            with the subnet. Ignored unless the subnet is managed
                            by the provider, in which case this is set on the public
                            subnet where the NAT gateway resides. It is then used
                            to determine routes for private subnets in the same AZ
                            as the public subnet.
                          type: string
                        routeTableId:
                          description: RouteTableID is the routing table id associated
                            with the subnet.
                          type: string
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags is a collection of tags describing the
                            resource.
                          type: object
                      type: object
                    type: array
                  vpc:
                    description: VPC configuration.
                    properties:
                      availabilityZoneSelection:
                        default: Ordered
                        description: 'AvailabilityZoneSelection specifies how AZs
                          should be selected if there are more AZs in a region than
                          specified by AvailabilityZoneUsageLimit. There are 2 selection
                          schemes: Ordered - selects based on alphabetical order Random
                          - selects AZs randomly in a region Defaults to Ordered'
                        enum:
                        - Ordered
                        - Random
                        type: string
                      availabilityZoneUsageLimit:
                        default: 3
                        description: AvailabilityZoneUsageLimit specifies the maximum
                          number of availability zones (AZ) that should be used in
                          a region when automatically creating subnets. If a region
                          has more than this number of AZs then this number of AZs
                          will be picked randomly when creating default subnets. Defaults
                          to 3
                        minimum: 1
                        type: integer
                      cidrBlock:
                        description: CidrBlock is the CIDR block to be used when the
                          provider creates a managed VPC. Defaults to 10.0.0.0/16.
                        type: string
                      id:
                        description: ID is the vpc-id of the VPC this provider should
                          use to create resources.
                        type: string
                      internetGatewayId:
                        description: InternetGatewayID is the id of the internet gateway
                          associated with the VPC.
                        type: string
                      tags:
                        additionalProperties:
                          type: string
                        description: Tags is a collection of tags describing the resource.
                        type: object
                    type: object
                type: object
              region:
                description: The AWS Region the cluster lives in.
                type: string
              sshKeyName:
                description: SSHKeyName is the name of the ssh key to attach to the
                  bastion host. Valid values are empty string (do not use SSH keys),
                  a valid SSH key name, or omitted (use the default SSH key name)
                type: string
            type: object
          status:
            description: AWSClusterStatus defines the observed state of AWSCluster
            properties:
              bastion:
                description: Instance describes an AWS instance.
                properties:
                  addresses:
                    description: Addresses contains the AWS instance associated addresses.
                    items:
                      description: MachineAddress contains information for the node's
                        address.
                      properties:
                        address:
                          description: The machine address.
                          type: string
                        type:
                          description: Machine address type, one of Hostname, ExternalIP
                            or InternalIP.
                          type: string
                      required:
                      - address
                      - type
                      type: object
                    type: array
                  availabilityZone:
                    description: Availability zone of instance
                    type: string
                  ebsOptimized:
                    description: Indicates whether the instance is optimized for Amazon
                      EBS I/O.
                    type: boolean
                  enaSupport:
                    description: Specifies whether enhanced networking with ENA is
                      enabled.
                    type: boolean
                  iamProfile:
                    description: The name of the IAM instance profile associated with
                      the instance, if applicable.
                    type: string
                  id:
                    type: string
                  imageId:
                    description: The ID of the AMI used to launch the instance.
                    type: string
                  instanceState:
                    description: The current state of the instance.
                    type: string
                  networkInterfaces:
                    description: Specifies ENIs attached to instance
                    items:
                      type: string
                    type: array
                  nonRootVolumes:
                    description: Configuration options for the non root storage volumes.
                    items:
                      description: Volume encapsulates the configuration options for
                        the root volume
                      properties:
                        deviceName:
                          description: Device name
                          type: string
                        encrypted:
                          description: Encrypted is whether the volume should be encrypted
                            or not.
                          type: boolean
                        encryptionKey:
                          description: EncryptionKey is the KMS key to use to encrypt
                            the volume. Can be either a KMS key ID or ARN. If Encrypted
                            is set and this is omitted, the default AWS key will be
                            used. The key must already exist and be accessible by
                            the controller.
                          type: string
                        iops:
                          description: IOPS is the number of IOPS requested for the
                            disk. Not applicable to all types.
                          format: int64
                          type: integer
                        size:
                          description: Size specifies size (in Gi) of the root storage
                            device. Must be greater than the image root snapshot size
                            or 8 (whichever is greater).
                          format: int64
                          minimum: 8
                          type: integer
                        type:
                          description: Type is the type of the root volume (e.g. gp2,
                            io1, etc...).
                          type: string
                      required:
                      - size
                      type: object
                    type: array
                  privateIp:
                    description: The private IPv4 address assigned to the instance.
                    type: string
                  publicIp:
                    description: The public IPv4 address assigned to the instance,
                      if applicable.
                    type: string
                  rootVolume:
                    description: Configuration options for the root storage volume.
                    properties:
                      deviceName:
                        description: Device name
                        type: string
                      encrypted:
                        description: Encrypted is whether the volume should be encrypted
                          or not.
                        type: boolean
                      encryptionKey:
                        description: EncryptionKey is the KMS key to use to encrypt
                          the volume. Can be either a KMS key ID or ARN. If Encrypted
                          is set and this is omitted, the default AWS key will be
                          used. The key must already exist and be accessible by the
                          controller.
                        type: string
                      iops:
                        description: IOPS is the number of IOPS requested for the
                          disk. Not applicable to all types.
                        format: int64
                        type: integer
                      size:
                        description: Size specifies size (in Gi) of the root storage
                          device. Must be greater than the image root snapshot size
                          or 8 (whichever is greater).
                        format: int64
                        minimum: 8
                        type: integer
                      type:
                        description: Type is the type of the root volume (e.g. gp2,
                          io1, etc...).
                        type: string
                    required:
                    - size
                    type: object
                  securityGroupIds:
                    description: SecurityGroupIDs are one or more security group IDs
                      this instance belongs to.
                    items:
                      type: string
                    type: array
                  spotMarketOptions:
                    description: SpotMarketOptions option for configuring instances
                      to be run using AWS Spot instances.
                    properties:
                      maxPrice:
                        description: MaxPrice defines the maximum price the user is
                          willing to pay for Spot VM instances
                        type: string
                    type: object
                  sshKeyName:
                    description: The name of the SSH key pair.
                    type: string
                  subnetId:
                    description: The ID of the subnet of the instance.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: The tags associated with the instance.
                    type: object
                  type:
                    description: The instance type.
                    type: string
                  userData:
                    description: UserData is the raw data script passed to the instance
                      which is run upon bootstrap. This field must not be base64 encoded
                      and should only be used when running a new instance.
                    type: string
                required:
                - id
                type: object
              conditions:
                description: Conditions provide observations of the operational state
                  of a Cluster API resource.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              failureDomains:
                additionalProperties:
                  description: FailureDomainSpec is the Schema for Cluster API failure
                    domains. It allows controllers to understand how many failure
                    domains a cluster can optionally span across.
                  properties:
                    attributes:
                      additionalProperties:
                        type: string
                      description: Attributes is a free form map of attributes an
                        infrastructure provider might use or require.
                      type: object
                    controlPlane:
                      description: ControlPlane determines if this failure domain
                        is suitable for use by control plane machines.
                      type: boolean
                  type: object
                description: FailureDomains is a slice of FailureDomains.
                type: object
              network:
                description: Network encapsulates AWS networking resources.
                properties:
                  apiServerElb:
                    description: APIServerELB is the Kubernetes api server classic
                      load balancer.
                    properties:
                      attributes:
                        description: Attributes defines extra attributes associated
                          with the load balancer.
                        properties:
                          crossZoneLoadBalancing:
                            description: CrossZoneLoadBalancing enables the classic
                              load balancer load balancing.
                            type: boolean
                          idleTimeout:
                            description: IdleTimeout is time that the connection is
                              allowed to be idle (no data has been sent over the connection)
                              before it is closed by the load balancer.
                            format: int64
                            type: integer
                        type: object
                      availabilityZones:
                        description: AvailabilityZones is an array of availability
                          zones in the VPC attached to the load balancer.
                        items:
                          type: string
                        type: array
                      dnsName:
                        description: DNSName is the dns name of the load balancer.
                        type: string
                      healthChecks:
                        description: HealthCheck is the classic elb health check associated
                          with the load balancer.
                        properties:
                          healthyThreshold:
                            format: int64
                            type: integer
                          interval:
                            description: A Duration represents the elapsed time between
                              two instants as an int64 nanosecond count. The representation
                              limits the largest representable duration to approximately
                              290 years.
                            format: int64
                            type: integer
                          target:
                            type: string
                          timeout:
                            description: A Duration represents the elapsed time between
                              two instants as an int64 nanosecond count. The representation
                              limits the largest representable duration to approximately
                              290 years.
                            format: int64
                            type: integer
                          unhealthyThreshold:
                            format: int64
                            type: integer
                        required:
                        - healthyThreshold
                        - interval
                        - target
                        - timeout
                        - unhealthyThreshold
                        type: object
                      listeners:
                        description: Listeners is an array of classic elb listeners
                          associated with the load balancer. There must be at least
                          one.
                        items:
                          description: ClassicELBListener defines an AWS classic load
                            balancer listener.
                          properties:
                            instancePort:
                              format: int64
                              type: integer
                            instanceProtocol:
                              description: ClassicELBProtocol defines listener protocols
                                for a classic load balancer.
                              type: string
                            port:
                              format: int64
                              type: integer
                            protocol:
                              description: ClassicELBProtocol defines listener protocols
                                for a classic load balancer.
                              type: string
                          required:
                          - instancePort
                          - instanceProtocol
                          - port
                          - protocol
                          type: object
                        type: array
                      name:
                        description: The name of the load balancer. It must be unique
                          within the set of load balancers defined in the region.
                          It also serves as identifier.
                        type: string
                      scheme:
                        description: Scheme is the load balancer scheme, either internet-facing
                          or private.
                        type: string
                      securityGroupIds:
                        description: SecurityGroupIDs is an array of security groups
                          assigned to the load balancer.
                        items:
                          type: string
                        type: array
                      subnetIds:
                        description: SubnetIDs is an array of subnets in the VPC attached
                          to the load balancer.
                        items:
                          type: string
                        type: array
                      tags:
                        additionalProperties:
                          type: string
                        description: Tags is a map of tags associated with the load
                          balancer.
                        type: object
                    type: object
                  securityGroups:
                    additionalProperties:
                      description: SecurityGroup defines an AWS security group.
                      properties:
                        id:
                          description: ID is a unique identifier.
                          type: string
                        ingressRule:
                          description: IngressRules is the inbound rules associated
                            with the security group.
                          items:
                            description: IngressRule defines an AWS ingress rule for
                              security groups.
                            properties:
                              cidrBlocks:
                                description: List of CIDR blocks to allow access from.
                                  Cannot be specified with SourceSecurityGroupID.
                                items:
                                  type: string
                                type: array
                              description:
                                type: string
                              fromPort:
                                format: int64
                                type: integer
                              protocol:
                                description: SecurityGroupProtocol defines the protocol
                                  type for a security group rule.
                                type: string
                              sourceSecurityGroupIds:
                                description: The security group id to allow access
                                  from. Cannot be specified with CidrBlocks.
                                items:
                                  type: string
                                type: array
                              toPort:
                                format: int64
                                type: integer
                            required:
                            - description
                            - fromPort
                            - protocol
                            - toPort
                            type: object
                          type: array
                        name:
                          description: Name is the security group name.
                          type: string
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags is a map of tags associated with the security
                            group.
                          type: object
                      required:
                      - id
                      - name
                      type: object
                    description: SecurityGroups is a map from the role/kind of the
                      security group to its unique name, if any.
                    type: object
                type: object
              ready:
                default: false
                type: boolean
            required:
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capa-serving-cert
    controller-gen.kubebuilder.io/version: v0.2.9
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
    cluster.x-k8s.io/v1alpha3: v1alpha3
  name: awsmachines.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capa-webhook-service
          namespace: capi-webhook-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AWSMachine
    listKind: AWSMachineList
    plural: awsmachines
    singular: awsmachine
  scope: Namespaced
  versions:
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: AWSMachine is the Schema for the awsmachines API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AWSMachineSpec defines the desired state of AWSMachine
            properties:
              additionalSecurityGroups:
                description: AdditionalSecurityGroups is an array of references to
                  security groups that should be applied to the instance. These security
                  groups would be set in addition to any security groups defined at
                  the cluster level or in the actuator.
                items:
                  description: AWSResourceReference is a reference to a specific AWS
                    resource by ID, ARN, or filters. Only one of ID, ARN or Filters
                    may be specified. Specifying more than one will result in a validation
                    error.
                  properties:
                    arn:
                      description: ARN of resource
                      type: string
                    filters:
                      description: 'Filters is a set of key/value pairs used to identify
                        a resource They are applied according to the rules defined
                        by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                      items:
                        description: Filter is a filter used to identify an AWS resource
                        properties:
                          name:
                            description: Name of the filter. Filter names are case-sensitive.
                            type: string
                          values:
                            description: Values includes one or more filter values.
                              Filter values are case-sensitive.
                            items:
                              type: string
                            type: array
                        required:
                        - name
                        - values
                        type: object
                      type: array
                    id:
                      description: ID of resource
                      type: string
                  type: object
                type: array
              additionalTags:
                additionalProperties:
                  type: string
                description: AdditionalTags is an optional set of tags to add to an
                  instance, in addition to the ones added by default by the AWS provider.
                  If both the AWSCluster and the AWSMachine specify the same tag name
                  with different values, the AWSMachine's value takes precedence.
                type: object
              ami:
                description: AMI is the reference to the AMI from which to create
                  the machine instance.
                properties:
                  arn:
                    description: ARN of resource
                    type: string
                  filters:
                    description: 'Filters is a set of key/value pairs used to identify
                      a resource They are applied according to the rules defined by
                      the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                    items:
                      description: Filter is a filter used to identify an AWS resource
                      properties:
                        name:
                          description: Name of the filter. Filter names are case-sensitive.
                          type: string
                        values:
                          description: Values includes one or more filter values.
                            Filter values are case-sensitive.
                          items:
                            type: string
                          type: array
                      required:
                      - name
                      - values
                      type: object
                    type: array
                  id:
                    description: ID of resource
                    type: string
                type: object
              availabilityZone:
                description: AvailabilityZone is references the AWS availability zone
                  to use for this instance. If multiple subnets are matched for the
                  availability zone, the first one return is picked.
                type: string
              cloudInit:
                description: CloudInit defines options related to the bootstrapping
                  systems where CloudInit is used.
                properties:
                  enableSecureSecretsManager:
                    description: enableSecureSecretsManager, when set to true will
                      use AWS Secrets Manager to ensure userdata privacy. A cloud-init
                      boothook shell script is prepended to download the userdata
                      from Secrets Manager and additionally delete the secret.
                    type: boolean
                  secretCount:
                    description: SecretCount is the number of secrets used to form
                      the complete secret
                    format: int32
                    type: integer
                  secretPrefix:
                    description: SecretPrefix is the prefix for the secret name. This
                      is stored temporarily, and deleted when the machine registers
                      as a node against the workload cluster.
                    type: string
                type: object
              iamInstanceProfile:
                description: IAMInstanceProfile is a name of an IAM instance profile
                  to assign to the instance
                type: string
              imageLookupOrg:
                description: ImageLookupOrg is the AWS Organization ID to use for
                  image lookup if AMI is not set.
                type: string
              instanceType:
                description: 'InstanceType is the type of instance to create. Example:
                  m4.xlarge'
                type: string
              networkInterfaces:
                description: NetworkInterfaces is a list of ENIs to associate with
                  the instance. A maximum of 2 may be specified.
                items:
                  type: string
                maxItems: 2
                type: array
              providerID:
                description: ProviderID is the unique identifier as specified by the
                  cloud provider.
                type: string
              publicIP:
                description: 'PublicIP specifies whether the instance should get a
                  public IP. Precedence for this setting is as follows: 1. This field
                  if set 2. Cluster/flavor setting 3. Subnet default'
                type: boolean
              rootDeviceSize:
                description: RootDeviceSize is the size of the root volume in gigabytes(GB).
                format: int64
                type: integer
              sshKeyName:
                description: SSHKeyName is the name of the ssh key to attach to the
                  instance.
                type: string
              subnet:
                description: Subnet is a reference to the subnet to use for this instance.
                  If not specified, the cluster subnet will be used.
                properties:
                  arn:
                    description: ARN of resource
                    type: string
                  filters:
                    description: 'Filters is a set of key/value pairs used to identify
                      a resource They are applied according to the rules defined by
                      the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                    items:
                      description: Filter is a filter used to identify an AWS resource
                      properties:
                        name:
                          description: Name of the filter. Filter names are case-sensitive.
                          type: string
                        values:
                          description: Values includes one or more filter values.
                            Filter values are case-sensitive.
                          items:
                            type: string
                          type: array
                      required:
                      - name
                      - values
                      type: object
                    type: array
                  id:
                    description: ID of resource
                    type: string
                type: object
            type: object
          status:
            description: AWSMachineStatus defines the observed state of AWSMachine
            properties:
              addresses:
                description: Addresses contains the AWS instance associated addresses.
                items:
                  description: MachineAddress contains information for the node's
                    address.
                  properties:
                    address:
                      description: The machine address.
                      type: string
                    type:
                      description: Machine address type, one of Hostname, ExternalIP
                        or InternalIP.
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              errorMessage:
                description: "ErrorMessage will be set in the event that there is
                  a terminal problem reconciling the Machine and will contain a more
                  verbose string suitable for logging and human consumption. \n This
                  field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over time (like
                  service outages), but instead indicate that something is fundamentally
                  wrong with the Machine's spec or the configuration of the controller,
                  and that manual intervention is required. Examples of terminal errors
                  would be invalid combinations of settings in the spec, values that
                  are unsupported by the controller, or the responsible controller
                  itself being critically misconfigured. \n Any transient errors that
                  occur during the reconciliation of Machines can be added as events
                  to the Machine object and/or logged in the controller's output."
                type: string
              errorReason:
                description: "ErrorReason will be set in the event that there is a
                  terminal problem reconciling the Machine and will contain a succinct
                  value suitable for machine interpretation. \n This field should
                  not be set for transitive errors that a controller faces that are
                  expected to be fixed automatically over time (like service outages),
                  but instead indicate that something is fundamentally wrong with
                  the Machine's spec or the configuration of the controller, and that
                  manual intervention is required. Examples of terminal errors would
                  be invalid combinations of settings in the spec, values that are
                  unsupported by the controller, or the responsible controller itself
                  being critically misconfigured. \n Any transient errors that occur
                  during the reconciliation of Machines can be added as events to
                  the Machine object and/or logged in the controller's output."
                type: string
              instanceState:
                description: InstanceState is the state of the AWS instance for this
                  machine.
                type: string
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: Cluster to which this AWSMachine belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: EC2 instance state
      jsonPath: .status.instanceState
      name: State
      type: string
    - description: Machine ready status
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: EC2 instance ID
      jsonPath: .spec.providerID
      name: InstanceID
      type: string
    - description: Machine object which owns with this AWSMachine
      jsonPath: .metadata.ownerReferences[?(@.kind=="Machine")].name
      name: Machine
      type: string
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: AWSMachine is the Schema for the awsmachines API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AWSMachineSpec defines the desired state of AWSMachine
            properties:
              additionalSecurityGroups:
                description: AdditionalSecurityGroups is an array of references to
                  security groups that should be applied to the instance. These security
                  groups would be set in addition to any security groups defined at
                  the cluster level or in the actuator.
                items:
                  description: AWSResourceReference is a reference to a specific AWS
                    resource by ID, ARN, or filters. Only one of ID, ARN or Filters
                    may be specified. Specifying more than one will result in a validation
                    error.
                  properties:
                    arn:
                      description: ARN of resource
                      type: string
                    filters:
                      description: 'Filters is a set of key/value pairs used to identify
                        a resource They are applied according to the rules defined
                        by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                      items:
                        description: Filter is a filter used to identify an AWS resource
                        properties:
                          name:
                            description: Name of the filter. Filter names are case-sensitive.
                            type: string
                          values:
                            description: Values includes one or more filter values.
                              Filter values are case-sensitive.
                            items:
                              type: string
                            type: array
                        required:
                        - name
                        - values
                        type: object
                      type: array
                    id:
                      description: ID of resource
                      type: string
                  type: object
                type: array
              additionalTags:
                additionalProperties:
                  type: string
                description: AdditionalTags is an optional set of tags to add to an
                  instance, in addition to the ones added by default by the AWS provider.
                  If both the AWSCluster and the AWSMachine specify the same tag name
                  with different values, the AWSMachine's value takes precedence.
                type: object
              ami:
                description: AMI is the reference to the AMI from which to create
                  the machine instance.
                properties:
                  arn:
                    description: ARN of resource
                    type: string
                  filters:
                    description: 'Filters is a set of key/value pairs used to identify
                      a resource They are applied according to the rules defined by
                      the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                    items:
                      description: Filter is a filter used to identify an AWS resource
                      properties:
                        name:
                          description: Name of the filter. Filter names are case-sensitive.
                          type: string
                        values:
                          description: Values includes one or more filter values.
                            Filter values are case-sensitive.
                          items:
                            type: string
                          type: array
                      required:
                      - name
                      - values
                      type: object
                    type: array
                  id:
                    description: ID of resource
                    type: string
                type: object
              cloudInit:
                description: CloudInit defines options related to the bootstrapping
                  systems where CloudInit is used.
                properties:
                  insecureSkipSecretsManager:
                    description: InsecureSkipSecretsManager, when set to true will
                      not use AWS Secrets Manager to ensure privacy of userdata. By
                      default, a cloud-init boothook shell script is prepended to
                      download the userdata from Secrets Manager and additionally
                      delete the secret.
                    type: boolean
                  secretCount:
                    description: SecretCount is the number of secrets used to form
                      the complete secret
                    format: int32
                    type: integer
                  secretPrefix:
                    description: SecretPrefix is the prefix for the secret name. This
                      is stored temporarily, and deleted when the machine registers
                      as a node against the workload cluster.
                    type: string
                type: object
              failureDomain:
                description: FailureDomain is the failure domain unique identifier
                  this Machine should be attached to, as defined in Cluster API. For
                  this infrastructure provider, the ID is equivalent to an AWS Availability
                  Zone. If multiple subnets are matched for the availability zone,
                  the first one returned is picked.
                type: string
              iamInstanceProfile:
                description: IAMInstanceProfile is a name of an IAM instance profile
                  to assign to the instance
                type: string
              imageLookupBaseOS:
                description: ImageLookupBaseOS is the name of the base operating system
                  to use for image lookup the AMI is not set.
                type: string
              imageLookupFormat:
                description: 'ImageLookupFormat is the AMI naming format to look up
                  the image for this machine It will be ignored if an explicit AMI
                  is set. Supports substitutions for {{.BaseOS}} and {{.K8sVersion}}
                  with the base OS and kubernetes version, respectively. The BaseOS
                  will be the value in ImageLookupBaseOS or ubuntu (the default),
                  and the kubernetes version as defined by the packages produced by
                  kubernetes/release without v as a prefix: 1.13.0, 1.12.5-mybuild.1,
                  or 1.17.3. For example, the default image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-*
                  will end up searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-*
                  for a Machine that is targeting kubernetes v1.18.0 and the ubuntu
                  base OS. See also: https://golang.org/pkg/text/template/'
                type: string
              imageLookupOrg:
                description: ImageLookupOrg is the AWS Organization ID to use for
                  image lookup if AMI is not set.
                type: string
              instanceType:
                description: 'InstanceType is the type of instance to create. Example:
                  m4.xlarge'
                type: string
              networkInterfaces:
                description: NetworkInterfaces is a list of ENIs to associate with
                  the instance. A maximum of 2 may be specified.
                items:
                  type: string
                maxItems: 2
                type: array
              nonRootVolumes:
                description: Configuration options for the non root storage volumes.
                items:
                  description: Volume encapsulates the configuration options for the
                    root volume
                  properties:
                    deviceName:
                      description: Device name
                      type: string
                    encrypted:
                      description: Encrypted is whether the volume should be encrypted
                        or not.
                      type: boolean
                    encryptionKey:
                      description: EncryptionKey is the KMS key to use to encrypt
                        the volume. Can be either a KMS key ID or ARN. If Encrypted
                        is set and this is omitted, the default AWS key will be used.
                        The key must already exist and be accessible by the controller.
                      type: string
                    iops:
                      description: IOPS is the number of IOPS requested for the disk.
                        Not applicable to all types.
                      format: int64
                      type: integer
                    size:
                      description: Size specifies size (in Gi) of the root storage
                        device. Must be greater than the image root snapshot size
                        or 8 (whichever is greater).
                      format: int64
                      minimum: 8
                      type: integer
                    type:
                      description: Type is the type of the root volume (e.g. gp2,
                        io1, etc...).
                      type: string
                  required:
                  - size
                  type: object
                type: array
              providerID:
                description: ProviderID is the unique identifier as specified by the
                  cloud provider.
                type: string
              publicIP:
                description: 'PublicIP specifies whether the instance should get a
                  public IP. Precedence for this setting is as follows: 1. This field
                  if set 2. Cluster/flavor setting 3. Subnet default'
                type: boolean
              rootVolume:
                description: RootVolume encapsulates the configuration options for
                  the root volume
                properties:
                  deviceName:
                    description: Device name
                    type: string
                  encrypted:
                    description: Encrypted is whether the volume should be encrypted
                      or not.
                    type: boolean
                  encryptionKey:
                    description: EncryptionKey is the KMS key to use to encrypt the
                      volume. Can be either a KMS key ID or ARN. If Encrypted is set
                      and this is omitted, the default AWS key will be used. The key
                      must already exist and be accessible by the controller.
                    type: string
                  iops:
                    description: IOPS is the number of IOPS requested for the disk.
                      Not applicable to all types.
                    format: int64
                    type: integer
                  size:
                    description: Size specifies size (in Gi) of the root storage device.
                      Must be greater than the image root snapshot size or 8 (whichever
                      is greater).
                    format: int64
                    minimum: 8
                    type: integer
                  type:
                    description: Type is the type of the root volume (e.g. gp2, io1,
                      etc...).
                    type: string
                required:
                - size
                type: object
              spotMarketOptions:
                description: SpotMarketOptions allows users to configure instances
                  to be run using AWS Spot instances.
                properties:
                  maxPrice:
                    description: MaxPrice defines the maximum price the user is willing
                      to pay for Spot VM instances
                    type: string
                type: object
              sshKeyName:
                description: SSHKeyName is the name of the ssh key to attach to the
                  instance. Valid values are empty string (do not use SSH keys), a
                  valid SSH key name, or omitted (use the default SSH key name)
                type: string
              subnet:
                description: Subnet is a reference to the subnet to use for this instance.
                  If not specified, the cluster subnet will be used.
                properties:
                  arn:
                    description: ARN of resource
                    type: string
                  filters:
                    description: 'Filters is a set of key/value pairs used to identify
                      a resource They are applied according to the rules defined by
                      the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                    items:
                      description: Filter is a filter used to identify an AWS resource
                      properties:
                        name:
                          description: Name of the filter. Filter names are case-sensitive.
                          type: string
                        values:
                          description: Values includes one or more filter values.
                            Filter values are case-sensitive.
                          items:
                            type: string
                          type: array
                      required:
                      - name
                      - values
                      type: object
                    type: array
                  id:
                    description: ID of resource
                    type: string
                type: object
              uncompressedUserData:
                description: UncompressedUserData specify whether the user data is
                  gzip-compressed before it is sent to ec2 instance. cloud-init has
                  built-in support for gzip-compressed user data user data stored
                  in aws secret manager is always gzip-compressed.
                type: boolean
            type: object
          status:
            description: AWSMachineStatus defines the observed state of AWSMachine
            properties:
              addresses:
                description: Addresses contains the AWS instance associated addresses.
                items:
                  description: MachineAddress contains information for the node's
                    address.
                  properties:
                    address:
                      description: The machine address.
                      type: string
                    type:
                      description: Machine address type, one of Hostname, ExternalIP
                        or InternalIP.
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              conditions:
                description: Conditions defines current service state of the AWSMachine.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: "FailureMessage will be set in the event that there is
                  a terminal problem reconciling the Machine and will contain a more
                  verbose string suitable for logging and human consumption. \n This
                  field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over time (like
                  service outages), but instead indicate that something is fundamentally
                  wrong with the Machine's spec or the configuration of the controller,
                  and that manual intervention is required. Examples of terminal errors
                  would be invalid combinations of settings in the spec, values that
                  are unsupported by the controller, or the responsible controller
                  itself being critically misconfigured. \n Any transient errors that
                  occur during the reconciliation of Machines can be added as events
                  to the Machine object and/or logged in the controller's output."
                type: string
              failureReason:
                description: "FailureReason will be set in the event that there is
                  a terminal problem reconciling the Machine and will contain a succinct
                  value suitable for machine interpretation. \n This field should
                  not be set for transitive errors that a controller faces that are
                  expected to be fixed automatically over time (like service outages),
                  but instead indicate that something is fundamentally wrong with
                  the Machine's spec or the configuration of the controller, and that
                  manual intervention is required. Examples of terminal errors would
                  be invalid combinations of settings in the spec, values that are
                  unsupported by the controller, or the responsible controller itself
                  being critically misconfigured. \n Any transient errors that occur
                  during the reconciliation of Machines can be added as events to
                  the Machine object and/or logged in the controller's output."
                type: string
              instanceState:
                description: InstanceState is the state of the AWS instance for this
                  machine.
                type: string
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capa-serving-cert
    controller-gen.kubebuilder.io/version: v0.2.9
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
    cluster.x-k8s.io/v1alpha3: v1alpha3
  name: awsmachinetemplates.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capa-webhook-service
          namespace: capi-webhook-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AWSMachineTemplate
    listKind: AWSMachineTemplateList
    plural: awsmachinetemplates
    singular: awsmachinetemplate
  scope: Namespaced
  versions:
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: AWSMachineTemplate is the Schema for the awsmachinetemplates
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AWSMachineTemplateSpec defines the desired state of AWSMachineTemplate
            properties:
              template:
                description: AWSMachineTemplateResource describes the data needed
                  to create am AWSMachine from a template
                properties:
                  spec:
                    description: Spec is the specification of the desired behavior
                      of the machine.
                    properties:
                      additionalSecurityGroups:
                        description: AdditionalSecurityGroups is an array of references
                          to security groups that should be applied to the instance.
                          These security groups would be set in addition to any security
                          groups defined at the cluster level or in the actuator.
                        items:
                          description: AWSResourceReference is a reference to a specific
                            AWS resource by ID, ARN, or filters. Only one of ID, ARN
                            or Filters may be specified. Specifying more than one
                            will result in a validation error.
                          properties:
                            arn:
                              description: ARN of resource
                              type: string
                            filters:
                              description: 'Filters is a set of key/value pairs used
                                to identify a resource They are applied according
                                to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                              items:
                                description: Filter is a filter used to identify an
                                  AWS resource
                                properties:
                                  name:
                                    description: Name of the filter. Filter names
                                      are case-sensitive.
                                    type: string
                                  values:
                                    description: Values includes one or more filter
                                      values. Filter values are case-sensitive.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - name
                                - values
                                type: object
                              type: array
                            id:
                              description: ID of resource
                              type: string
                          type: object
                        type: array
                      additionalTags:
                        additionalProperties:
                          type: string
                        description: AdditionalTags is an optional set of tags to
                          add to an instance, in addition to the ones added by default
                          by the AWS provider. If both the AWSCluster and the AWSMachine
                          specify the same tag name with different values, the AWSMachine's
                          value takes precedence.
                        type: object
                      ami:
                        description: AMI is the reference to the AMI from which to
                          create the machine instance.
                        properties:
                          arn:
                            description: ARN of resource
                            type: string
                          filters:
                            description: 'Filters is a set of key/value pairs used
                              to identify a resource They are applied according to
                              the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                            items:
                              description: Filter is a filter used to identify an
                                AWS resource
                              properties:
                                name:
                                  description: Name of the filter. Filter names are
                                    case-sensitive.
                                  type: string
                                values:
                                  description: Values includes one or more filter
                                    values. Filter values are case-sensitive.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - name
                              - values
                              type: object
                            type: array
                          id:
                            description: ID of resource
                            type: string
                        type: object
                      availabilityZone:
                        description: AvailabilityZone is references the AWS availability
                          zone to use for this instance. If multiple subnets are matched
                          for the availability zone, the first one return is picked.
                        type: string
                      cloudInit:
                        description: CloudInit defines options related to the bootstrapping
                          systems where CloudInit is used.
                        properties:
                          enableSecureSecretsManager:
                            description: enableSecureSecretsManager, when set to true
                              will use AWS Secrets Manager to ensure userdata privacy.
                              A cloud-init boothook shell script is prepended to download
                              the userdata from Secrets Manager and additionally delete
                              the secret.
                            type: boolean
                          secretCount:
                            description: SecretCount is the number of secrets used
                              to form the complete secret
                            format: int32
                            type: integer
                          secretPrefix:
                            description: SecretPrefix is the prefix for the secret
                              name. This is stored temporarily, and deleted when the
                              machine registers as a node against the workload cluster.
                            type: string
                        type: object
                      iamInstanceProfile:
                        description: IAMInstanceProfile is a name of an IAM instance
                          profile to assign to the instance
                        type: string
                      imageLookupOrg:
                        description: ImageLookupOrg is the AWS Organization ID to
                          use for image lookup if AMI is not set.
                        type: string
                      instanceType:
                        description: 'InstanceType is the type of instance to create.
                          Example: m4.xlarge'
                        type: string
                      networkInterfaces:
                        description: NetworkInterfaces is a list of ENIs to associate
                          with the instance. A maximum of 2 may be specified.
                        items:
                          type: string
                        maxItems: 2
                        type: array
                      providerID:
                        description: ProviderID is the unique identifier as specified
                          by the cloud provider.
                        type: string
                      publicIP:
                        description: 'PublicIP specifies whether the instance should
                          get a public IP. Precedence for this setting is as follows:
                          1. This field if set 2. Cluster/flavor setting 3. Subnet
                          default'
                        type: boolean
                      rootDeviceSize:
                        description: RootDeviceSize is the size of the root volume
                          in gigabytes(GB).
                        format: int64
                        type: integer
                      sshKeyName:
                        description: SSHKeyName is the name of the ssh key to attach
                          to the instance.
                        type: string
                      subnet:
                        description: Subnet is a reference to the subnet to use for
                          this instance. If not specified, the cluster subnet will
                          be used.
                        properties:
                          arn:
                            description: ARN of resource
                            type: string
                          filters:
                            description: 'Filters is a set of key/value pairs used
                              to identify a resource They are applied according to
                              the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                            items:
                              description: Filter is a filter used to identify an
                                AWS resource
                              properties:
                                name:
                                  description: Name of the filter. Filter names are
                                    case-sensitive.
                                  type: string
                                values:
                                  description: Values includes one or more filter
                                    values. Filter values are case-sensitive.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - name
                              - values
                              type: object
                            type: array
                          id:
                            description: ID of resource
                            type: string
                        type: object
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: false
  - name: v1alpha3
    schema:
      openAPIV3Schema:
        description: AWSMachineTemplate is the Schema for the awsmachinetemplates
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AWSMachineTemplateSpec defines the desired state of AWSMachineTemplate
            properties:
              template:
                description: AWSMachineTemplateResource describes the data needed
                  to create am AWSMachine from a template
                properties:
                  spec:
                    description: Spec is the specification of the desired behavior
                      of the machine.
                    properties:
                      additionalSecurityGroups:
                        description: AdditionalSecurityGroups is an array of references
                          to security groups that should be applied to the instance.
                          These security groups would be set in addition to any security
                          groups defined at the cluster level or in the actuator.
                        items:
                          description: AWSResourceReference is a reference to a specific
                            AWS resource by ID, ARN, or filters. Only one of ID, ARN
                            or Filters may be specified. Specifying more than one
                            will result in a validation error.
                          properties:
                            arn:
                              description: ARN of resource
                              type: string
                            filters:
                              description: 'Filters is a set of key/value pairs used
                                to identify a resource They are applied according
                                to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                              items:
                                description: Filter is a filter used to identify an
                                  AWS resource
                                properties:
                                  name:
                                    description: Name of the filter. Filter names
                                      are case-sensitive.
                                    type: string
                                  values:
                                    description: Values includes one or more filter
                                      values. Filter values are case-sensitive.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - name
                                - values
                                type: object
                              type: array
                            id:
                              description: ID of resource
                              type: string
                          type: object
                        type: array
                      additionalTags:
                        additionalProperties:
                          type: string
                        description: AdditionalTags is an optional set of tags to
                          add to an instance, in addition to the ones added by default
                          by the AWS provider. If both the AWSCluster and the AWSMachine
                          specify the same tag name with different values, the AWSMachine's
                          value takes precedence.
                        type: object
                      ami:
                        description: AMI is the reference to the AMI from which to
                          create the machine instance.
                        properties:
                          arn:
                            description: ARN of resource
                            type: string
                          filters:
                            description: 'Filters is a set of key/value pairs used
                              to identify a resource They are applied according to
                              the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                            items:
                              description: Filter is a filter used to identify an
                                AWS resource
                              properties:
                                name:
                                  description: Name of the filter. Filter names are
                                    case-sensitive.
                                  type: string
                                values:
                                  description: Values includes one or more filter
                                    values. Filter values are case-sensitive.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - name
                              - values
                              type: object
                            type: array
                          id:
                            description: ID of resource
                            type: string
                        type: object
                      cloudInit:
                        description: CloudInit defines options related to the bootstrapping
                          systems where CloudInit is used.
                        properties:
                          insecureSkipSecretsManager:
                            description: InsecureSkipSecretsManager, when set to true
                              will not use AWS Secrets Manager to ensure privacy of
                              userdata. By default, a cloud-init boothook shell script
                              is prepended to download the userdata from Secrets Manager
                              and additionally delete the secret.
                            type: boolean
                          secretCount:
                            description: SecretCount is the number of secrets used
                              to form the complete secret
                            format: int32
                            type: integer
                          secretPrefix:
                            description: SecretPrefix is the prefix for the secret
                              name. This is stored temporarily, and deleted when the
                              machine registers as a node against the workload cluster.
                            type: string
                        type: object
                      failureDomain:
                        description: FailureDomain is the failure domain unique identifier
                          this Machine should be attached to, as defined in Cluster
                          API. For this infrastructure provider, the ID is equivalent
                          to an AWS Availability Zone. If multiple subnets are matched
                          for the availability zone, the first one returned is picked.
                        type: string
                      iamInstanceProfile:
                        description: IAMInstanceProfile is a name of an IAM instance
                          profile to assign to the instance
                        type: string
                      imageLookupBaseOS:
                        description: ImageLookupBaseOS is the name of the base operating
                          system to use for image lookup the AMI is not set.
                        type: string
                      imageLookupFormat:
                        description: 'ImageLookupFormat is the AMI naming format to
                          look up the image for this machine It will be ignored if
                          an explicit AMI is set. Supports substitutions for {{.BaseOS}}
                          and {{.K8sVersion}} with the base OS and kubernetes version,
                          respectively. The BaseOS will be the value in ImageLookupBaseOS
                          or ubuntu (the default), and the kubernetes version as defined
                          by the packages produced by kubernetes/release without v
                          as a prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example,
                          the default image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-*
                          will end up searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-*
                          for a Machine that is targeting kubernetes v1.18.0 and the
                          ubuntu base OS. See also: https://golang.org/pkg/text/template/'
                        type: string
                      imageLookupOrg:
                        description: ImageLookupOrg is the AWS Organization ID to
                          use for image lookup if AMI is not set.
                        type: string
                      instanceType:
                        description: 'InstanceType is the type of instance to create.
                          Example: m4.xlarge'
                        type: string
                      networkInterfaces:
                        description: NetworkInterfaces is a list of ENIs to associate
                          with the instance. A maximum of 2 may be specified.
                        items:
                          type: string
                        maxItems: 2
                        type: array
                      nonRootVolumes:
                        description: Configuration options for the non root storage
                          volumes.
                        items:
                          description: Volume encapsulates the configuration options
                            for the root volume
                          properties:
                            deviceName:
                              description: Device name
                              type: string
                            encrypted:
                              description: Encrypted is whether the volume should
                                be encrypted or not.
                              type: boolean
                            encryptionKey:
                              description: EncryptionKey is the KMS key to use to
                                encrypt the volume. Can be either a KMS key ID or
                                ARN. If Encrypted is set and this is omitted, the
                                default AWS key will be used. The key must already
                                exist and be accessible by the controller.
                              type: string
                            iops:
                              description: IOPS is the number of IOPS requested for
                                the disk. Not applicable to all types.
                              format: int64
                              type: integer
                            size:
                              description: Size specifies size (in Gi) of the root
                                storage device. Must be greater than the image root
                                snapshot size or 8 (whichever is greater).
                              format: int64
                              minimum: 8
                              type: integer
                            type:
                              description: Type is the type of the root volume (e.g.
                                gp2, io1, etc...).
                              type: string
                          required:
                          - size
                          type: object
                        type: array
                      providerID:
                        description: ProviderID is the unique identifier as specified
                          by the cloud provider.
                        type: string
                      publicIP:
                        description: 'PublicIP specifies whether the instance should
                          get a public IP. Precedence for this setting is as follows:
                          1. This field if set 2. Cluster/flavor setting 3. Subnet
                          default'
                        type: boolean
                      rootVolume:
                        description: RootVolume encapsulates the configuration options
                          for the root volume
                        properties:
                          deviceName:
                            description: Device name
                            type: string
                          encrypted:
                            description: Encrypted is whether the volume should be
                              encrypted or not.
                            type: boolean
                          encryptionKey:
                            description: EncryptionKey is the KMS key to use to encrypt
                              the volume. Can be either a KMS key ID or ARN. If Encrypted
                              is set and this is omitted, the default AWS key will
                              be used. The key must already exist and be accessible
                              by the controller.
                            type: string
                          iops:
                            description: IOPS is the number of IOPS requested for
                              the disk. Not applicable to all types.
                            format: int64
                            type: integer
                          size:
                            description: Size specifies size (in Gi) of the root storage
                              device. Must be greater than the image root snapshot
                              size or 8 (whichever is greater).
                            format: int64
                            minimum: 8
                            type: integer
                          type:
                            description: Type is the type of the root volume (e.g.
                              gp2, io1, etc...).
                            type: string
                        required:
                        - size
                        type: object
                      spotMarketOptions:
                        description: SpotMarketOptions allows users to configure instances
                          to be run using AWS Spot instances.
                        properties:
                          maxPrice:
                            description: MaxPrice defines the maximum price the user
                              is willing to pay for Spot VM instances
                            type: string
                        type: object
                      sshKeyName:
                        description: SSHKeyName is the name of the ssh key to attach
                          to the instance. Valid values are empty string (do not use
                          SSH keys), a valid SSH key name, or omitted (use the default
                          SSH key name)
                        type: string
                      subnet:
                        description: Subnet is a reference to the subnet to use for
                          this instance. If not specified, the cluster subnet will
                          be used.
                        properties:
                          arn:
                            description: ARN of resource
                            type: string
                          filters:
                            description: 'Filters is a set of key/value pairs used
                              to identify a resource They are applied according to
                              the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                            items:
                              description: Filter is a filter used to identify an
                                AWS resource
                              properties:
                                name:
                                  description: Name of the filter. Filter names are
                                    case-sensitive.
                                  type: string
                                values:
                                  description: Values includes one or more filter
                                    values. Filter values are case-sensitive.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - name
                              - values
                              type: object
                            type: array
                          id:
                            description: ID of resource
                            type: string
                        type: object
                      uncompressedUserData:
                        description: UncompressedUserData specify whether the user
                          data is gzip-compressed before it is sent to ec2 instance.
                          cloud-init has built-in support for gzip-compressed user
                          data user data stored in aws secret manager is always gzip-compressed.
                        type: boolean
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.9
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
    cluster.x-k8s.io/v1alpha3: v1alpha3
  name: awsmanagedclusters.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AWSManagedCluster
    listKind: AWSManagedClusterList
    plural: awsmanagedclusters
    shortNames:
    - awsmc
    singular: awsmanagedcluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster to which this AWSManagedControl belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: Control plane infrastructure is ready for worker nodes
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: AWS VPC the control plane is using
      jsonPath: .spec.networkSpec.vpc.id
      name: VPC
      type: string
    - description: API Endpoint
      jsonPath: .spec.controlPlaneEndpoint.host
      name: Endpoint
      priority: 1
      type: string
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: AWSManagedCluster is the Schema for the awsmanagedclusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AWSManagedClusterSpec defines the desired state of AWSManagedCluster
            properties:
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
            type: object
          status:
            description: AWSManagedClusterStatus defines the observed state of AWSManagedCluster
            properties:
              failureDomains:
                additionalProperties:
                  description: FailureDomainSpec is the Schema for Cluster API failure
                    domains. It allows controllers to understand how many failure
                    domains a cluster can optionally span across.
                  properties:
                    attributes:
                      additionalProperties:
                        type: string
                      description: Attributes is a free form map of attributes an
                        infrastructure provider might use or require.
                      type: object
                    controlPlane:
                      description: ControlPlane determines if this failure domain
                        is suitable for use by control plane machines.
                      type: boolean
                  type: object
                description: FailureDomains specifies a list fo available availability
                  zones that can be used
                type: object
              ready:
                description: Ready is when the AWSManagedControlPlane has a API server
                  URL.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.9
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
    cluster.x-k8s.io/v1alpha3: v1alpha3
  name: awsmanagedcontrolplanes.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AWSManagedControlPlane
    listKind: AWSManagedControlPlaneList
    plural: awsmanagedcontrolplanes
    shortNames:
    - awsmcp
    singular: awsmanagedcontrolplane
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster to which this AWSManagedControl belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: Control plane infrastructure is ready for worker nodes
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: AWS VPC the control plane is using
      jsonPath: .spec.networkSpec.vpc.id
      name: VPC
      type: string
    - description: API Endpoint
      jsonPath: .spec.controlPlaneEndpoint.host
      name: Endpoint
      priority: 1
      type: string
    - description: Bastion IP address for breakglass access
      jsonPath: .status.bastion.publicIp
      name: Bastion IP
      type: string
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: AWSManagedControlPlane is the Schema for the awsmanagedcontrolplanes
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AWSManagedControlPlaneSpec defines the desired state of AWSManagedControlPlane
            properties:
              additionalTags:
                additionalProperties:
                  type: string
                description: AdditionalTags is an optional set of tags to add to AWS
                  resources managed by the AWS provider, in addition to the ones added
                  by default.
                type: object
              bastion:
                description: Bastion contains options to configure the bastion host.
                properties:
                  allowedCIDRBlocks:
                    description: AllowedCIDRBlocks is a list of CIDR blocks allowed
                      to access the bastion host. They are set as ingress rules for
                      the Bastion host's Security Group (defaults to 0.0.0.0/0).
                    items:
                      type: string
                    type: array
                  ami:
                    description: AMI will use the specified AMI to boot the bastion.
                      If not specified, the AMI will default to one picked out in
                      public space.
                    type: string
                  disableIngressRules:
                    description: DisableIngressRules will ensure there are no Ingress
                      rules in the bastion host's security group. Requires AllowedCIDRBlocks
                      to be empty.
                    type: boolean
                  enabled:
                    description: Enabled allows this provider to create a bastion
                      host instance with a public ip to access the VPC private network.
                    type: boolean
                  instanceType:
                    description: InstanceType will use the specified instance type
                      for the bastion. If not specified, Cluster API Provider AWS
                      will use t3.micro for all regions except us-east-1, where t2.micro
                      will be the default.
                    type: string
                type: object
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              eksClusterName:
                description: EKSClusterName allows you to specify the name of the
                  EKS cluster in AWS. If you don't specify a name then a default name
                  will be created based on the namespace and name of the managed control
                  plane.
                type: string
              encryptionConfig:
                description: EncryptionConfig specifies the encryption configuration
                  for the cluster
                properties:
                  provider:
                    description: Provider specifies the ARN or alias of the CMK (in
                      AWS KMS)
                    type: string
                  resources:
                    description: Resources specifies the resources to be encrypted
                    items:
                      type: string
                    type: array
                type: object
              endpointAccess:
                description: Endpoints specifies access to this cluster's control
                  plane endpoints
                properties:
                  private:
                    description: Private points VPC-internal control plane access
                      to the private endpoint
                    type: boolean
                  public:
                    description: Public controls whether control plane endpoints are
                      publicly accessible
                    type: boolean
                  publicCIDRs:
                    description: PublicCIDRs specifies which blocks can access the
                      public endpoint
                    items:
                      type: string
                    type: array
                type: object
              imageLookupBaseOS:
                description: ImageLookupBaseOS is the name of the base operating system
                  used to look up machine images when a machine does not specify an
                  AMI. When set, this will be used for all cluster machines unless
                  a machine specifies a different ImageLookupBaseOS.
                type: string
              imageLookupFormat:
                description: 'ImageLookupFormat is the AMI naming format to look up
                  machine images when a machine does not specify an AMI. When set,
                  this will be used for all cluster machines unless a machine specifies
                  a different ImageLookupOrg. Supports substitutions for {{.BaseOS}}
                  and {{.K8sVersion}} with the base OS and kubernetes version, respectively.
                  The BaseOS will be the value in ImageLookupBaseOS or ubuntu (the
                  default), and the kubernetes version as defined by the packages
                  produced by kubernetes/release without v as a prefix: 1.13.0, 1.12.5-mybuild.1,
                  or 1.17.3. For example, the default image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-*
                  will end up searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-*
                  for a Machine that is targeting kubernetes v1.18.0 and the ubuntu
                  base OS. See also: https://golang.org/pkg/text/template/'
                type: string
              imageLookupOrg:
                description: ImageLookupOrg is the AWS Organization ID to look up
                  machine images when a machine does not specify an AMI. When set,
                  this will be used for all cluster machines unless a machine specifies
                  a different ImageLookupOrg.
                type: string
              logging:
                description: Logging specifies which EKS Cluster logs should be enabled.
                  Entries for each of the enabled logs will be sent to CloudWatch
                properties:
                  apiServer:
                    default: false
                    description: APIServer indicates if the Kubernetes API Server
                      log (kube-apiserver) shoulkd be enabled
                    type: boolean
                  audit:
                    default: false
                    description: Audit indicates if the Kubernetes API audit log should
                      be enabled
                    type: boolean
                  authenticator:
                    default: false
                    description: Authenticator indicates if the iam authenticator
                      log should be enabled
                    type: boolean
                  controllerManager:
                    default: false
                    description: ControllerManager indicates if the controller manager
                      (kube-controller-manager) log should be enabled
                    type: boolean
                  scheduler:
                    default: false
                    description: Scheduler indicates if the Kubernetes scheduler (kube-scheduler)
                      log should be enabled
                    type: boolean
                required:
                - apiServer
                - audit
                - authenticator
                - controllerManager
                - scheduler
                type: object
              networkSpec:
                description: NetworkSpec encapsulates all things related to AWS network.
                properties:
                  cni:
                    description: CNI configuration
                    properties:
                      cniIngressRules:
                        description: CNIIngressRules specify rules to apply to control
                          plane and worker node security groups. The source for the
                          rule will be set to control plane and worker security group
                          IDs.
                        items:
                          description: CNIIngressRule defines an AWS ingress rule
                            for CNI requirements.
                          properties:
                            description:
                              type: string
                            fromPort:
                              format: int64
                              type: integer
                            protocol:
                              description: SecurityGroupProtocol defines the protocol
                                type for a security group rule.
                              type: string
                            toPort:
                              format: int64
                              type: integer
                          required:
                          - description
                          - fromPort
                          - protocol
                          - toPort
                          type: object
                        type: array
                    type: object
                  subnets:
                    description: Subnets configuration.
                    items:
                      description: SubnetSpec configures an AWS Subnet.
                      properties:
                        availabilityZone:
                          description: AvailabilityZone defines the availability zone
                            to use for this subnet in the cluster's region.
                          type: string
                        cidrBlock:
                          description: CidrBlock is the CIDR block to be used when
                            the provider creates a managed VPC.
                          type: string
                        id:
                          description: ID defines a unique identifier to reference
                            this resource.
                          type: string
                        isPublic:
                          description: IsPublic defines the subnet as a public subnet.
                            A subnet is public when it is associated with a route
                            table that has a route to an internet gateway.
                          type: boolean
                        natGatewayId:
                          description: NatGatewayID is the NAT gateway id associated
                            with the subnet. Ignored unless the subnet is managed
                            by the provider, in which case this is set on the public
                            subnet where the NAT gateway resides. It is then used
                            to determine routes for private subnets in the same AZ
                            as the public subnet.
                          type: string
                        routeTableId:
                          description: RouteTableID is the routing table id associated
                            with the subnet.
                          type: string
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags is a collection of tags describing the
                            resource.
                          type: object
                      type: object
                    type: array
                  vpc:
                    description: VPC configuration.
                    properties:
                      availabilityZoneSelection:
                        default: Ordered
                        description: 'AvailabilityZoneSelection specifies how AZs
                          should be selected if there are more AZs in a region than
                          specified by AvailabilityZoneUsageLimit. There are 2 selection
                          schemes: Ordered - selects based on alphabetical order Random
                          - selects AZs randomly in a region Defaults to Ordered'
                        enum:
                        - Ordered
                        - Random
                        type: string
                      availabilityZoneUsageLimit:
                        default: 3
                        description: AvailabilityZoneUsageLimit specifies the maximum
                          number of availability zones (AZ) that should be used in
                          a region when automatically creating subnets. If a region
                          has more than this number of AZs then this number of AZs
                          will be picked randomly when creating default subnets. Defaults
                          to 3
                        minimum: 1
                        type: integer
                      cidrBlock:
                        description: CidrBlock is the CIDR block to be used when the
                          provider creates a managed VPC. Defaults to 10.0.0.0/16.
                        type: string
                      id:
                        description: ID is the vpc-id of the VPC this provider should
                          use to create resources.
                        type: string
                      internetGatewayId:
                        description: InternetGatewayID is the id of the internet gateway
                          associated with the VPC.
                        type: string
                      tags:
                        additionalProperties:
                          type: string
                        description: Tags is a collection of tags describing the resource.
                        type: object
                    type: object
                type: object
              region:
                description: The AWS Region the cluster lives in.
                type: string
              roleAdditionalPolicies:
                description: RoleAdditionalPolicies allows you to attach additional
                  polices to the control plane role. You must enable the EKSAllowAddRoles
                  feature flag to incorporate these into the created role.
                items:
                  type: string
                type: array
              roleName:
                description: RoleName specifies the name of IAM role that gives EKS
                  permission to make API calls. If the role is pre-existing we will
                  treat it as unmanaged and not delete it on deletion. If the EKSEnableIAM
                  feature flag is true and no name is supplied then a role is created.
                minLength: 2
                type: string
              sshKeyName:
                description: SSHKeyName is the name of the ssh key to attach to the
                  bastion host. Valid values are empty string (do not use SSH keys),
                  a valid SSH key name, or omitted (use the default SSH key name)
                type: string
              tokenMethod:
                default: iam-authenticator
                description: TokenMethod is used to specify the method for obtaining
                  a client token for communicating with EKS iam-authenticator - obtains
                  a client token using iam-authentictor aws-cli - obtains a client
                  token using the AWS CLI Defaults to iam-authenticator
                enum:
                - iam-authenticator
                - aws-cli
                type: string
              version:
                description: Version defines the desired Kubernetes version. If no
                  version number is supplied then the latest version of Kubernetes
                  that EKS supports will be used.
                minLength: 2
                pattern: ^v(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.?$
                type: string
            type: object
          status:
            description: AWSManagedControlPlaneStatus defines the observed state of
              AWSManagedControlPlane
            properties:
              bastion:
                description: Bastion holds details of the instance that is used as
                  a bastion jump box
                properties:
                  addresses:
                    description: Addresses contains the AWS instance associated addresses.
                    items:
                      description: MachineAddress contains information for the node's
                        address.
                      properties:
                        address:
                          description: The machine address.
                          type: string
                        type:
                          description: Machine address type, one of Hostname, ExternalIP
                            or InternalIP.
                          type: string
                      required:
                      - address
                      - type
                      type: object
                    type: array
                  availabilityZone:
                    description: Availability zone of instance
                    type: string
                  ebsOptimized:
                    description: Indicates whether the instance is optimized for Amazon
                      EBS I/O.
                    type: boolean
                  enaSupport:
                    description: Specifies whether enhanced networking with ENA is
                      enabled.
                    type: boolean
                  iamProfile:
                    description: The name of the IAM instance profile associated with
                      the instance, if applicable.
                    type: string
                  id:
                    type: string
                  imageId:
                    description: The ID of the AMI used to launch the instance.
                    type: string
                  instanceState:
                    description: The current state of the instance.
                    type: string
                  networkInterfaces:
                    description: Specifies ENIs attached to instance
                    items:
                      type: string
                    type: array
                  nonRootVolumes:
                    description: Configuration options for the non root storage volumes.
                    items:
                      description: Volume encapsulates the configuration options for
                        the root volume
                      properties:
                        deviceName:
                          description: Device name
                          type: string
                        encrypted:
                          description: Encrypted is whether the volume should be encrypted
                            or not.
                          type: boolean
                        encryptionKey:
                          description: EncryptionKey is the KMS key to use to encrypt
                            the volume. Can be either a KMS key ID or ARN. If Encrypted
                            is set and this is omitted, the default AWS key will be
                            used. The key must already exist and be accessible by
                            the controller.
                          type: string
                        iops:
                          description: IOPS is the number of IOPS requested for the
                            disk. Not applicable to all types.
                          format: int64
                          type: integer
                        size:
                          description: Size specifies size (in Gi) of the root storage
                            device. Must be greater than the image root snapshot size
                            or 8 (whichever is greater).
                          format: int64
                          minimum: 8
                          type: integer
                        type:
                          description: Type is the type of the root volume (e.g. gp2,
                            io1, etc...).
                          type: string
                      required:
                      - size
                      type: object
                    type: array
                  privateIp:
                    description: The private IPv4 address assigned to the instance.
                    type: string
                  publicIp:
                    description: The public IPv4 address assigned to the instance,
                      if applicable.
                    type: string
                  rootVolume:
                    description: Configuration options for the root storage volume.
                    properties:
                      deviceName:
                        description: Device name
                        type: string
                      encrypted:
                        description: Encrypted is whether the volume should be encrypted
                          or not.
                        type: boolean
                      encryptionKey:
                        description: EncryptionKey is the KMS key to use to encrypt
                          the volume. Can be either a KMS key ID or ARN. If Encrypted
                          is set and this is omitted, the default AWS key will be
                          used. The key must already exist and be accessible by the
                          controller.
                        type: string
                      iops:
                        description: IOPS is the number of IOPS requested for the
                          disk. Not applicable to all types.
                        format: int64
                        type: integer
                      size:
                        description: Size specifies size (in Gi) of the root storage
                          device. Must be greater than the image root snapshot size
                          or 8 (whichever is greater).
                        format: int64
                        minimum: 8
                        type: integer
                      type:
                        description: Type is the type of the root volume (e.g. gp2,
                          io1, etc...).
                        type: string
                    required:
                    - size
                    type: object
                  securityGroupIds:
                    description: SecurityGroupIDs are one or more security group IDs
                      this instance belongs to.
                    items:
                      type: string
                    type: array
                  spotMarketOptions:
                    description: SpotMarketOptions option for configuring instances
                      to be run using AWS Spot instances.
                    properties:
                      maxPrice:
                        description: MaxPrice defines the maximum price the user is
                          willing to pay for Spot VM instances
                        type: string
                    type: object
                  sshKeyName:
                    description: The name of the SSH key pair.
                    type: string
                  subnetId:
                    description: The ID of the subnet of the instance.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: The tags associated with the instance.
                    type: object
                  type:
                    description: The instance type.
                    type: string
                  userData:
                    description: UserData is the raw data script passed to the instance
                      which is run upon bootstrap. This field must not be base64 encoded
                      and should only be used when running a new instance.
                    type: string
                required:
                - id
                type: object
              conditions:
                description: Conditions specifies the cpnditions for the managed control
                  plane
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              failureDomains:
                additionalProperties:
                  description: FailureDomainSpec is the Schema for Cluster API failure
                    domains. It allows controllers to understand how many failure
                    domains a cluster can optionally span across.
                  properties:
                    attributes:
                      additionalProperties:
                        type: string
                      description: Attributes is a free form map of attributes an
                        infrastructure provider might use or require.
                      type: object
                    controlPlane:
                      description: ControlPlane determines if this failure domain
                        is suitable for use by control plane machines.
                      type: boolean
                  type: object
                description: FailureDomains specifies a list fo available availability
                  zones that can be used
                type: object
              failureMessage:
                description: ErrorMessage indicates that there is a terminal problem
                  reconciling the state, and will be set to a descriptive error message.
                type: string
              initialized:
                description: Initialized denotes whether or not the control plane
                  has the uploaded kubernetes config-map.
                type: boolean
              network:
                description: Networks holds details about the AWS networking resources
                  used by the control plane
                properties:
                  apiServerElb:
                    description: APIServerELB is the Kubernetes api server classic
                      load balancer.
                    properties:
                      attributes:
                        description: Attributes defines extra attributes associated
                          with the load balancer.
                        properties:
                          crossZoneLoadBalancing:
                            description: CrossZoneLoadBalancing enables the classic
                              load balancer load balancing.
                            type: boolean
                          idleTimeout:
                            description: IdleTimeout is time that the connection is
                              allowed to be idle (no data has been sent over the connection)
                              before it is closed by the load balancer.
                            format: int64
                            type: integer
                        type: object
                      availabilityZones:
                        description: AvailabilityZones is an array of availability
                          zones in the VPC attached to the load balancer.
                        items:
                          type: string
                        type: array
                      dnsName:
                        description: DNSName is the dns name of the load balancer.
                        type: string
                      healthChecks:
                        description: HealthCheck is the classic elb health check associated
                          with the load balancer.
                        properties:
                          healthyThreshold:
                            format: int64
                            type: integer
                          interval:
                            description: A Duration represents the elapsed time between
                              two instants as an int64 nanosecond count. The representation
                              limits the largest representable duration to approximately
                              290 years.
                            format: int64
                            type: integer
                          target:
                            type: string
                          timeout:
                            description: A Duration represents the elapsed time between
                              two instants as an int64 nanosecond count. The representation
                              limits the largest representable duration to approximately
                              290 years.
                            format: int64
                            type: integer
                          unhealthyThreshold:
                            format: int64
                            type: integer
                        required:
                        - healthyThreshold
                        - interval
                        - target
                        - timeout
                        - unhealthyThreshold
                        type: object
                      listeners:
                        description: Listeners is an array of classic elb listeners
                          associated with the load balancer. There must be at least
                          one.
                        items:
                          description: ClassicELBListener defines an AWS classic load
                            balancer listener.
                          properties:
                            instancePort:
                              format: int64
                              type: integer
                            instanceProtocol:
                              description: ClassicELBProtocol defines listener protocols
                                for a classic load balancer.
                              type: string
                            port:
                              format: int64
                              type: integer
                            protocol:
                              description: ClassicELBProtocol defines listener protocols
                                for a classic load balancer.
                              type: string
                          required:
                          - instancePort
                          - instanceProtocol
                          - port
                          - protocol
                          type: object
                        type: array
                      name:
                        description: The name of the load balancer. It must be unique
                          within the set of load balancers defined in the region.
                          It also serves as identifier.
                        type: string
                      scheme:
                        description: Scheme is the load balancer scheme, either internet-facing
                          or private.
                        type: string
                      securityGroupIds:
                        description: SecurityGroupIDs is an array of security groups
                          assigned to the load balancer.
                        items:
                          type: string
                        type: array
                      subnetIds:
                        description: SubnetIDs is an array of subnets in the VPC attached
                          to the load balancer.
                        items:
                          type: string
                        type: array
                      tags:
                        additionalProperties:
                          type: string
                        description: Tags is a map of tags associated with the load
                          balancer.
                        type: object
                    type: object
                  securityGroups:
                    additionalProperties:
                      description: SecurityGroup defines an AWS security group.
                      properties:
                        id:
                          description: ID is a unique identifier.
                          type: string
                        ingressRule:
                          description: IngressRules is the inbound rules associated
                            with the security group.
                          items:
                            description: IngressRule defines an AWS ingress rule for
                              security groups.
                            properties:
                              cidrBlocks:
                                description: List of CIDR blocks to allow access from.
                                  Cannot be specified with SourceSecurityGroupID.
                                items:
                                  type: string
                                type: array
                              description:
                                type: string
                              fromPort:
                                format: int64
                                type: integer
                              protocol:
                                description: SecurityGroupProtocol defines the protocol
                                  type for a security group rule.
                                type: string
                              sourceSecurityGroupIds:
                                description: The security group id to allow access
                                  from. Cannot be specified with CidrBlocks.
                                items:
                                  type: string
                                type: array
                              toPort:
                                format: int64
                                type: integer
                            required:
                            - description
                            - fromPort
                            - protocol
                            - toPort
                            type: object
                          type: array
                        name:
                          description: Name is the security group name.
                          type: string
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags is a map of tags associated with the security
                            group.
                          type: object
                      required:
                      - id
                      - name
                      type: object
                    description: SecurityGroups is a map from the role/kind of the
                      security group to its unique name, if any.
                    type: object
                type: object
              ready:
                default: false
                description: Ready denotes that the AWSManagedControlPlane API Server
                  is ready to receive requests and that the VPC infra is ready.
                type: boolean
            required:
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capa-serving-cert
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
  name: capa-mutating-webhook-configuration
webhooks:
- clientConfig:
    caBundle: Cg==
    service:
      name: capa-webhook-service
      namespace: capi-webhook-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1alpha3-awscluster
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: default.awscluster.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha3
    operations:
    - CREATE
    - UPDATE
    resources:
    - awsclusters
  sideEffects: None
- clientConfig:
    caBundle: Cg==
    service:
      name: capa-webhook-service
      namespace: capi-webhook-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1alpha3-awsmanagedcontrolplane
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: default.awsmanagedcontrolplanes.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha3
    operations:
    - CREATE
    - UPDATE
    resources:
    - awsmanagedcontrolplanes
  sideEffects: None
---
apiVersion: v1
kind: Service
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
  name: capa-webhook-service
  namespace: capi-webhook-system
spec:
  ports:
  - port: 443
    targetPort: webhook-server
  selector:
    cluster.x-k8s.io/provider: infrastructure-aws
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
    control-plane: capa-controller-manager
  name: capa-controller-manager
  namespace: capi-webhook-system
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-aws
      control-plane: capa-controller-manager
  template:
    metadata:
      labels:
        cluster.x-k8s.io/provider: infrastructure-aws
        control-plane: capa-controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.4.1
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --webhook-port=9443
        - --feature-gates=EKS=${EXP_EKS:=false}
        image: gcr.io/k8s-staging-cluster-api-aws/cluster-api-aws-controller:latest
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: capa-webhook-service-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
  name: capa-serving-cert
  namespace: capi-webhook-system
spec:
  dnsNames:
  - capa-webhook-service.capi-webhook-system.svc
  - capa-webhook-service.capi-webhook-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: capa-selfsigned-issuer
  secretName: capa-webhook-service-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
  name: capa-selfsigned-issuer
  namespace: capi-webhook-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capa-serving-cert
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
  name: capa-validating-webhook-configuration
webhooks:
- clientConfig:
    caBundle: Cg==
    service:
      name: capa-webhook-service
      namespace: capi-webhook-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1alpha3-awscluster
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.awscluster.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha3
    operations:
    - CREATE
    - UPDATE
    resources:
    - awsclusters
  sideEffects: None
- clientConfig:
    caBundle: Cg==
    service:
      name: capa-webhook-service
      namespace: capi-webhook-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1alpha3-awsmachine
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.awsmachine.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha3
    operations:
    - CREATE
    - UPDATE
    resources:
    - awsmachines
  sideEffects: None
- clientConfig:
    caBundle: Cg==
    service:
      name: capa-webhook-service
      namespace: capi-webhook-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1alpha3-awsmachinetemplate
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.awsmachinetemplate.infrastructure.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha3
    operations:
    - CREATE
    - UPDATE
    resources:
    - awsmachinetemplates
  sideEffects: None
- clientConfig:
    caBundle: Cg==
    service:
      name: capa-webhook-service
      namespace: capi-webhook-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1alpha3-awsmanagedcontrolplane
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.awsmanagedcontrolplanes.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha3
    operations:
    - CREATE
    - UPDATE
    resources:
    - awsmanagedcontrolplanes
  sideEffects: None
