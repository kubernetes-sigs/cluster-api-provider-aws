// Copyright Â© 2018 The Kubernetes Authors.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by MockGen. DO NOT EDIT.
// Source: sigs.k8s.io/cluster-api-provider-aws/cloud/aws/services (interfaces: SSMInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockSSMInterface is a mock of SSMInterface interface
type MockSSMInterface struct {
	ctrl     *gomock.Controller
	recorder *MockSSMInterfaceMockRecorder
}

// MockSSMInterfaceMockRecorder is the mock recorder for MockSSMInterface
type MockSSMInterfaceMockRecorder struct {
	mock *MockSSMInterface
}

// NewMockSSMInterface creates a new mock instance
func NewMockSSMInterface(ctrl *gomock.Controller) *MockSSMInterface {
	mock := &MockSSMInterface{ctrl: ctrl}
	mock.recorder = &MockSSMInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSSMInterface) EXPECT() *MockSSMInterfaceMockRecorder {
	return m.recorder
}

// DeleteParameter mocks base method
func (m *MockSSMInterface) DeleteParameter(arg0, arg1 string) error {
	ret := m.ctrl.Call(m, "DeleteParameter", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteParameter indicates an expected call of DeleteParameter
func (mr *MockSSMInterfaceMockRecorder) DeleteParameter(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteParameter", reflect.TypeOf((*MockSSMInterface)(nil).DeleteParameter), arg0, arg1)
}

// GetParameter mocks base method
func (m *MockSSMInterface) GetParameter(arg0, arg1 string) (string, error) {
	ret := m.ctrl.Call(m, "GetParameter", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetParameter indicates an expected call of GetParameter
func (mr *MockSSMInterfaceMockRecorder) GetParameter(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetParameter", reflect.TypeOf((*MockSSMInterface)(nil).GetParameter), arg0, arg1)
}

// ReconcileParameter mocks base method
func (m *MockSSMInterface) ReconcileParameter(arg0, arg1, arg2 string) error {
	ret := m.ctrl.Call(m, "ReconcileParameter", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// ReconcileParameter indicates an expected call of ReconcileParameter
func (mr *MockSSMInterfaceMockRecorder) ReconcileParameter(arg0, arg1, arg2 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReconcileParameter", reflect.TypeOf((*MockSSMInterface)(nil).ReconcileParameter), arg0, arg1, arg2)
}
