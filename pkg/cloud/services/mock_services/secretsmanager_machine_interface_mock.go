/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by MockGen. DO NOT EDIT.
// Source: sigs.k8s.io/cluster-api-provider-aws/pkg/cloud/services (interfaces: SecretsManagerInterface)

// Package mock_services is a generated GoMock package.
package mock_services

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	scope "sigs.k8s.io/cluster-api-provider-aws/pkg/cloud/scope"
)

// MockSecretsManagerInterface is a mock of SecretsManagerInterface interface
type MockSecretsManagerInterface struct {
	ctrl     *gomock.Controller
	recorder *MockSecretsManagerInterfaceMockRecorder
}

// MockSecretsManagerInterfaceMockRecorder is the mock recorder for MockSecretsManagerInterface
type MockSecretsManagerInterfaceMockRecorder struct {
	mock *MockSecretsManagerInterface
}

// NewMockSecretsManagerInterface creates a new mock instance
func NewMockSecretsManagerInterface(ctrl *gomock.Controller) *MockSecretsManagerInterface {
	mock := &MockSecretsManagerInterface{ctrl: ctrl}
	mock.recorder = &MockSecretsManagerInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSecretsManagerInterface) EXPECT() *MockSecretsManagerInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockSecretsManagerInterface) Create(arg0 *scope.MachineScope, arg1 []byte) (string, int32, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(int32)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Create indicates an expected call of Create
func (mr *MockSecretsManagerInterfaceMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockSecretsManagerInterface)(nil).Create), arg0, arg1)
}

// Delete mocks base method
func (m *MockSecretsManagerInterface) Delete(arg0 string, arg1 int32) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete
func (mr *MockSecretsManagerInterfaceMockRecorder) Delete(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockSecretsManagerInterface)(nil).Delete), arg0, arg1)
}
