// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/cloud/services/ssm/service.go

// Package mock_ssmiface is a generated GoMock package.
package mock_ssmiface

import (
	context "context"
	reflect "reflect"

	ssm "github.com/aws/aws-sdk-go-v2/service/ssm"
	gomock "github.com/golang/mock/gomock"
)

// MockSSMAPI is a mock of SSMAPI interface.
type MockSSMAPI struct {
	ctrl     *gomock.Controller
	recorder *MockSSMAPIMockRecorder
}

// MockSSMAPIMockRecorder is the mock recorder for MockSSMAPI.
type MockSSMAPIMockRecorder struct {
	mock *MockSSMAPI
}

// NewMockSSMAPI creates a new mock instance.
func NewMockSSMAPI(ctrl *gomock.Controller) *MockSSMAPI {
	mock := &MockSSMAPI{ctrl: ctrl}
	mock.recorder = &MockSSMAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSSMAPI) EXPECT() *MockSSMAPIMockRecorder {
	return m.recorder
}

// DeleteParameter mocks base method.
func (m *MockSSMAPI) DeleteParameter(ctx context.Context, input *ssm.DeleteParameterInput) (*ssm.DeleteParameterOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteParameter", ctx, input)
	ret0, _ := ret[0].(*ssm.DeleteParameterOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteParameter indicates an expected call of DeleteParameter.
func (mr *MockSSMAPIMockRecorder) DeleteParameter(ctx, input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteParameter", reflect.TypeOf((*MockSSMAPI)(nil).DeleteParameter), ctx, input)
}

// GetParameter mocks base method.
func (m *MockSSMAPI) GetParameter(ctx context.Context, input *ssm.GetParameterInput) (*ssm.GetParameterOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetParameter", ctx, input)
	ret0, _ := ret[0].(*ssm.GetParameterOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetParameter indicates an expected call of GetParameter.
func (mr *MockSSMAPIMockRecorder) GetParameter(ctx, input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetParameter", reflect.TypeOf((*MockSSMAPI)(nil).GetParameter), ctx, input)
}

// PutParameter mocks base method.
func (m *MockSSMAPI) PutParameter(ctx context.Context, input *ssm.PutParameterInput) (*ssm.PutParameterOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutParameter", ctx, input)
	ret0, _ := ret[0].(*ssm.PutParameterOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutParameter indicates an expected call of PutParameter.
func (mr *MockSSMAPIMockRecorder) PutParameter(ctx, input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutParameter", reflect.TypeOf((*MockSSMAPI)(nil).PutParameter), ctx, input)
}
