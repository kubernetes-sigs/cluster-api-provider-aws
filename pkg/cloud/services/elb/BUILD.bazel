load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "errors.go",
        "loadbalancer.go",
        "service.go",
    ],
    importpath = "sigs.k8s.io/cluster-api-provider-aws/pkg/cloud/services/elb",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/apis/infrastructure/v1alpha2:go_default_library",
        "//pkg/cloud/awserrors:go_default_library",
        "//pkg/cloud/converters:go_default_library",
        "//pkg/cloud/scope:go_default_library",
        "//pkg/cloud/services/wait:go_default_library",
        "//vendor/github.com/aws/aws-sdk-go/aws:go_default_library",
        "//vendor/github.com/aws/aws-sdk-go/aws/awserr:go_default_library",
        "//vendor/github.com/aws/aws-sdk-go/service/elb:go_default_library",
        "//vendor/github.com/pkg/errors:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = ["loadbalancer_test.go"],
    embed = [":go_default_library"],
    deps = [
        "//pkg/apis/infrastructure/v1alpha2:go_default_library",
        "//pkg/cloud/scope:go_default_library",
        "//pkg/cloud/services/ec2/mock_ec2iface:go_default_library",
        "//pkg/cloud/services/elb/mock_elbiface:go_default_library",
        "//vendor/github.com/aws/aws-sdk-go/aws:go_default_library",
        "//vendor/github.com/aws/aws-sdk-go/service/elb:go_default_library",
        "//vendor/github.com/golang/mock/gomock:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:go_default_library",
        "//vendor/sigs.k8s.io/cluster-api/pkg/apis/cluster/v1alpha2:go_default_library",
    ],
)
