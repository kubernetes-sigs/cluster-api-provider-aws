// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha2

import (
	time "time"
	unsafe "unsafe"

	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	v1alpha1 "sigs.k8s.io/cluster-api-provider-aws/pkg/apis/awsprovider/v1alpha1"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*AWSResourceReference)(nil), (*v1alpha1.AWSResourceReference)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_AWSResourceReference_To_v1alpha1_AWSResourceReference(a.(*AWSResourceReference), b.(*v1alpha1.AWSResourceReference), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.AWSResourceReference)(nil), (*AWSResourceReference)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_AWSResourceReference_To_v1alpha2_AWSResourceReference(a.(*v1alpha1.AWSResourceReference), b.(*AWSResourceReference), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*BuildParams)(nil), (*v1alpha1.BuildParams)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_BuildParams_To_v1alpha1_BuildParams(a.(*BuildParams), b.(*v1alpha1.BuildParams), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.BuildParams)(nil), (*BuildParams)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_BuildParams_To_v1alpha2_BuildParams(a.(*v1alpha1.BuildParams), b.(*BuildParams), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClassicELB)(nil), (*v1alpha1.ClassicELB)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClassicELB_To_v1alpha1_ClassicELB(a.(*ClassicELB), b.(*v1alpha1.ClassicELB), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.ClassicELB)(nil), (*ClassicELB)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ClassicELB_To_v1alpha2_ClassicELB(a.(*v1alpha1.ClassicELB), b.(*ClassicELB), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClassicELBAttributes)(nil), (*v1alpha1.ClassicELBAttributes)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClassicELBAttributes_To_v1alpha1_ClassicELBAttributes(a.(*ClassicELBAttributes), b.(*v1alpha1.ClassicELBAttributes), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.ClassicELBAttributes)(nil), (*ClassicELBAttributes)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ClassicELBAttributes_To_v1alpha2_ClassicELBAttributes(a.(*v1alpha1.ClassicELBAttributes), b.(*ClassicELBAttributes), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClassicELBHealthCheck)(nil), (*v1alpha1.ClassicELBHealthCheck)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClassicELBHealthCheck_To_v1alpha1_ClassicELBHealthCheck(a.(*ClassicELBHealthCheck), b.(*v1alpha1.ClassicELBHealthCheck), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.ClassicELBHealthCheck)(nil), (*ClassicELBHealthCheck)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ClassicELBHealthCheck_To_v1alpha2_ClassicELBHealthCheck(a.(*v1alpha1.ClassicELBHealthCheck), b.(*ClassicELBHealthCheck), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClassicELBListener)(nil), (*v1alpha1.ClassicELBListener)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_ClassicELBListener_To_v1alpha1_ClassicELBListener(a.(*ClassicELBListener), b.(*v1alpha1.ClassicELBListener), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.ClassicELBListener)(nil), (*ClassicELBListener)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ClassicELBListener_To_v1alpha2_ClassicELBListener(a.(*v1alpha1.ClassicELBListener), b.(*ClassicELBListener), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Filter)(nil), (*v1alpha1.Filter)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_Filter_To_v1alpha1_Filter(a.(*Filter), b.(*v1alpha1.Filter), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.Filter)(nil), (*Filter)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Filter_To_v1alpha2_Filter(a.(*v1alpha1.Filter), b.(*Filter), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*IngressRule)(nil), (*v1alpha1.IngressRule)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_IngressRule_To_v1alpha1_IngressRule(a.(*IngressRule), b.(*v1alpha1.IngressRule), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.IngressRule)(nil), (*IngressRule)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_IngressRule_To_v1alpha2_IngressRule(a.(*v1alpha1.IngressRule), b.(*IngressRule), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Instance)(nil), (*v1alpha1.Instance)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_Instance_To_v1alpha1_Instance(a.(*Instance), b.(*v1alpha1.Instance), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.Instance)(nil), (*Instance)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Instance_To_v1alpha2_Instance(a.(*v1alpha1.Instance), b.(*Instance), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Network)(nil), (*v1alpha1.Network)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_Network_To_v1alpha1_Network(a.(*Network), b.(*v1alpha1.Network), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.Network)(nil), (*Network)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Network_To_v1alpha2_Network(a.(*v1alpha1.Network), b.(*Network), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*NetworkSpec)(nil), (*v1alpha1.NetworkSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_NetworkSpec_To_v1alpha1_NetworkSpec(a.(*NetworkSpec), b.(*v1alpha1.NetworkSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.NetworkSpec)(nil), (*NetworkSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_NetworkSpec_To_v1alpha2_NetworkSpec(a.(*v1alpha1.NetworkSpec), b.(*NetworkSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RouteTable)(nil), (*v1alpha1.RouteTable)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_RouteTable_To_v1alpha1_RouteTable(a.(*RouteTable), b.(*v1alpha1.RouteTable), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.RouteTable)(nil), (*RouteTable)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_RouteTable_To_v1alpha2_RouteTable(a.(*v1alpha1.RouteTable), b.(*RouteTable), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*SecurityGroup)(nil), (*v1alpha1.SecurityGroup)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_SecurityGroup_To_v1alpha1_SecurityGroup(a.(*SecurityGroup), b.(*v1alpha1.SecurityGroup), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.SecurityGroup)(nil), (*SecurityGroup)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_SecurityGroup_To_v1alpha2_SecurityGroup(a.(*v1alpha1.SecurityGroup), b.(*SecurityGroup), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*SubnetSpec)(nil), (*v1alpha1.SubnetSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_SubnetSpec_To_v1alpha1_SubnetSpec(a.(*SubnetSpec), b.(*v1alpha1.SubnetSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.SubnetSpec)(nil), (*SubnetSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_SubnetSpec_To_v1alpha2_SubnetSpec(a.(*v1alpha1.SubnetSpec), b.(*SubnetSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*VPCSpec)(nil), (*v1alpha1.VPCSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_VPCSpec_To_v1alpha1_VPCSpec(a.(*VPCSpec), b.(*v1alpha1.VPCSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.VPCSpec)(nil), (*VPCSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_VPCSpec_To_v1alpha2_VPCSpec(a.(*v1alpha1.VPCSpec), b.(*VPCSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1alpha1.AWSClusterProviderSpec)(nil), (*AWSClusterSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_AWSClusterProviderSpec_To_v1alpha2_AWSClusterSpec(a.(*v1alpha1.AWSClusterProviderSpec), b.(*AWSClusterSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1alpha1.AWSClusterProviderStatus)(nil), (*AWSClusterStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_AWSClusterProviderStatus_To_v1alpha2_AWSClusterStatus(a.(*v1alpha1.AWSClusterProviderStatus), b.(*AWSClusterStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1alpha1.AWSMachineProviderSpec)(nil), (*AWSMachineSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_AWSMachineProviderSpec_To_v1alpha2_AWSMachineSpec(a.(*v1alpha1.AWSMachineProviderSpec), b.(*AWSMachineSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1alpha1.Instance)(nil), (*Instance)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Instance_To_v1alpha2_Instance(a.(*v1alpha1.Instance), b.(*Instance), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*Instance)(nil), (*v1alpha1.Instance)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha2_Instance_To_v1alpha1_Instance(a.(*Instance), b.(*v1alpha1.Instance), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha2_AWSResourceReference_To_v1alpha1_AWSResourceReference(in *AWSResourceReference, out *v1alpha1.AWSResourceReference, s conversion.Scope) error {
	out.ID = (*string)(unsafe.Pointer(in.ID))
	out.ARN = (*string)(unsafe.Pointer(in.ARN))
	out.Filters = *(*[]v1alpha1.Filter)(unsafe.Pointer(&in.Filters))
	return nil
}

// Convert_v1alpha2_AWSResourceReference_To_v1alpha1_AWSResourceReference is an autogenerated conversion function.
func Convert_v1alpha2_AWSResourceReference_To_v1alpha1_AWSResourceReference(in *AWSResourceReference, out *v1alpha1.AWSResourceReference, s conversion.Scope) error {
	return autoConvert_v1alpha2_AWSResourceReference_To_v1alpha1_AWSResourceReference(in, out, s)
}

func autoConvert_v1alpha1_AWSResourceReference_To_v1alpha2_AWSResourceReference(in *v1alpha1.AWSResourceReference, out *AWSResourceReference, s conversion.Scope) error {
	out.ID = (*string)(unsafe.Pointer(in.ID))
	out.ARN = (*string)(unsafe.Pointer(in.ARN))
	out.Filters = *(*[]Filter)(unsafe.Pointer(&in.Filters))
	return nil
}

// Convert_v1alpha1_AWSResourceReference_To_v1alpha2_AWSResourceReference is an autogenerated conversion function.
func Convert_v1alpha1_AWSResourceReference_To_v1alpha2_AWSResourceReference(in *v1alpha1.AWSResourceReference, out *AWSResourceReference, s conversion.Scope) error {
	return autoConvert_v1alpha1_AWSResourceReference_To_v1alpha2_AWSResourceReference(in, out, s)
}

func autoConvert_v1alpha2_BuildParams_To_v1alpha1_BuildParams(in *BuildParams, out *v1alpha1.BuildParams, s conversion.Scope) error {
	out.Lifecycle = v1alpha1.ResourceLifecycle(in.Lifecycle)
	out.ClusterName = in.ClusterName
	out.ResourceID = in.ResourceID
	out.Name = (*string)(unsafe.Pointer(in.Name))
	out.Role = (*string)(unsafe.Pointer(in.Role))
	out.Additional = *(*v1alpha1.Tags)(unsafe.Pointer(&in.Additional))
	return nil
}

// Convert_v1alpha2_BuildParams_To_v1alpha1_BuildParams is an autogenerated conversion function.
func Convert_v1alpha2_BuildParams_To_v1alpha1_BuildParams(in *BuildParams, out *v1alpha1.BuildParams, s conversion.Scope) error {
	return autoConvert_v1alpha2_BuildParams_To_v1alpha1_BuildParams(in, out, s)
}

func autoConvert_v1alpha1_BuildParams_To_v1alpha2_BuildParams(in *v1alpha1.BuildParams, out *BuildParams, s conversion.Scope) error {
	out.Lifecycle = ResourceLifecycle(in.Lifecycle)
	out.ClusterName = in.ClusterName
	out.ResourceID = in.ResourceID
	out.Name = (*string)(unsafe.Pointer(in.Name))
	out.Role = (*string)(unsafe.Pointer(in.Role))
	out.Additional = *(*Tags)(unsafe.Pointer(&in.Additional))
	return nil
}

// Convert_v1alpha1_BuildParams_To_v1alpha2_BuildParams is an autogenerated conversion function.
func Convert_v1alpha1_BuildParams_To_v1alpha2_BuildParams(in *v1alpha1.BuildParams, out *BuildParams, s conversion.Scope) error {
	return autoConvert_v1alpha1_BuildParams_To_v1alpha2_BuildParams(in, out, s)
}

func autoConvert_v1alpha2_ClassicELB_To_v1alpha1_ClassicELB(in *ClassicELB, out *v1alpha1.ClassicELB, s conversion.Scope) error {
	out.Name = in.Name
	out.DNSName = in.DNSName
	out.Scheme = v1alpha1.ClassicELBScheme(in.Scheme)
	out.SubnetIDs = *(*[]string)(unsafe.Pointer(&in.SubnetIDs))
	out.SecurityGroupIDs = *(*[]string)(unsafe.Pointer(&in.SecurityGroupIDs))
	out.Listeners = *(*[]*v1alpha1.ClassicELBListener)(unsafe.Pointer(&in.Listeners))
	out.HealthCheck = (*v1alpha1.ClassicELBHealthCheck)(unsafe.Pointer(in.HealthCheck))
	if err := Convert_v1alpha2_ClassicELBAttributes_To_v1alpha1_ClassicELBAttributes(&in.Attributes, &out.Attributes, s); err != nil {
		return err
	}
	out.Tags = *(*map[string]string)(unsafe.Pointer(&in.Tags))
	return nil
}

// Convert_v1alpha2_ClassicELB_To_v1alpha1_ClassicELB is an autogenerated conversion function.
func Convert_v1alpha2_ClassicELB_To_v1alpha1_ClassicELB(in *ClassicELB, out *v1alpha1.ClassicELB, s conversion.Scope) error {
	return autoConvert_v1alpha2_ClassicELB_To_v1alpha1_ClassicELB(in, out, s)
}

func autoConvert_v1alpha1_ClassicELB_To_v1alpha2_ClassicELB(in *v1alpha1.ClassicELB, out *ClassicELB, s conversion.Scope) error {
	out.Name = in.Name
	out.DNSName = in.DNSName
	out.Scheme = ClassicELBScheme(in.Scheme)
	out.SubnetIDs = *(*[]string)(unsafe.Pointer(&in.SubnetIDs))
	out.SecurityGroupIDs = *(*[]string)(unsafe.Pointer(&in.SecurityGroupIDs))
	out.Listeners = *(*[]*ClassicELBListener)(unsafe.Pointer(&in.Listeners))
	out.HealthCheck = (*ClassicELBHealthCheck)(unsafe.Pointer(in.HealthCheck))
	if err := Convert_v1alpha1_ClassicELBAttributes_To_v1alpha2_ClassicELBAttributes(&in.Attributes, &out.Attributes, s); err != nil {
		return err
	}
	out.Tags = *(*map[string]string)(unsafe.Pointer(&in.Tags))
	return nil
}

// Convert_v1alpha1_ClassicELB_To_v1alpha2_ClassicELB is an autogenerated conversion function.
func Convert_v1alpha1_ClassicELB_To_v1alpha2_ClassicELB(in *v1alpha1.ClassicELB, out *ClassicELB, s conversion.Scope) error {
	return autoConvert_v1alpha1_ClassicELB_To_v1alpha2_ClassicELB(in, out, s)
}

func autoConvert_v1alpha2_ClassicELBAttributes_To_v1alpha1_ClassicELBAttributes(in *ClassicELBAttributes, out *v1alpha1.ClassicELBAttributes, s conversion.Scope) error {
	out.IdleTimeout = time.Duration(in.IdleTimeout)
	return nil
}

// Convert_v1alpha2_ClassicELBAttributes_To_v1alpha1_ClassicELBAttributes is an autogenerated conversion function.
func Convert_v1alpha2_ClassicELBAttributes_To_v1alpha1_ClassicELBAttributes(in *ClassicELBAttributes, out *v1alpha1.ClassicELBAttributes, s conversion.Scope) error {
	return autoConvert_v1alpha2_ClassicELBAttributes_To_v1alpha1_ClassicELBAttributes(in, out, s)
}

func autoConvert_v1alpha1_ClassicELBAttributes_To_v1alpha2_ClassicELBAttributes(in *v1alpha1.ClassicELBAttributes, out *ClassicELBAttributes, s conversion.Scope) error {
	out.IdleTimeout = time.Duration(in.IdleTimeout)
	return nil
}

// Convert_v1alpha1_ClassicELBAttributes_To_v1alpha2_ClassicELBAttributes is an autogenerated conversion function.
func Convert_v1alpha1_ClassicELBAttributes_To_v1alpha2_ClassicELBAttributes(in *v1alpha1.ClassicELBAttributes, out *ClassicELBAttributes, s conversion.Scope) error {
	return autoConvert_v1alpha1_ClassicELBAttributes_To_v1alpha2_ClassicELBAttributes(in, out, s)
}

func autoConvert_v1alpha2_ClassicELBHealthCheck_To_v1alpha1_ClassicELBHealthCheck(in *ClassicELBHealthCheck, out *v1alpha1.ClassicELBHealthCheck, s conversion.Scope) error {
	out.Target = in.Target
	out.Interval = time.Duration(in.Interval)
	out.Timeout = time.Duration(in.Timeout)
	out.HealthyThreshold = in.HealthyThreshold
	out.UnhealthyThreshold = in.UnhealthyThreshold
	return nil
}

// Convert_v1alpha2_ClassicELBHealthCheck_To_v1alpha1_ClassicELBHealthCheck is an autogenerated conversion function.
func Convert_v1alpha2_ClassicELBHealthCheck_To_v1alpha1_ClassicELBHealthCheck(in *ClassicELBHealthCheck, out *v1alpha1.ClassicELBHealthCheck, s conversion.Scope) error {
	return autoConvert_v1alpha2_ClassicELBHealthCheck_To_v1alpha1_ClassicELBHealthCheck(in, out, s)
}

func autoConvert_v1alpha1_ClassicELBHealthCheck_To_v1alpha2_ClassicELBHealthCheck(in *v1alpha1.ClassicELBHealthCheck, out *ClassicELBHealthCheck, s conversion.Scope) error {
	out.Target = in.Target
	out.Interval = time.Duration(in.Interval)
	out.Timeout = time.Duration(in.Timeout)
	out.HealthyThreshold = in.HealthyThreshold
	out.UnhealthyThreshold = in.UnhealthyThreshold
	return nil
}

// Convert_v1alpha1_ClassicELBHealthCheck_To_v1alpha2_ClassicELBHealthCheck is an autogenerated conversion function.
func Convert_v1alpha1_ClassicELBHealthCheck_To_v1alpha2_ClassicELBHealthCheck(in *v1alpha1.ClassicELBHealthCheck, out *ClassicELBHealthCheck, s conversion.Scope) error {
	return autoConvert_v1alpha1_ClassicELBHealthCheck_To_v1alpha2_ClassicELBHealthCheck(in, out, s)
}

func autoConvert_v1alpha2_ClassicELBListener_To_v1alpha1_ClassicELBListener(in *ClassicELBListener, out *v1alpha1.ClassicELBListener, s conversion.Scope) error {
	out.Protocol = v1alpha1.ClassicELBProtocol(in.Protocol)
	out.Port = in.Port
	out.InstanceProtocol = v1alpha1.ClassicELBProtocol(in.InstanceProtocol)
	out.InstancePort = in.InstancePort
	return nil
}

// Convert_v1alpha2_ClassicELBListener_To_v1alpha1_ClassicELBListener is an autogenerated conversion function.
func Convert_v1alpha2_ClassicELBListener_To_v1alpha1_ClassicELBListener(in *ClassicELBListener, out *v1alpha1.ClassicELBListener, s conversion.Scope) error {
	return autoConvert_v1alpha2_ClassicELBListener_To_v1alpha1_ClassicELBListener(in, out, s)
}

func autoConvert_v1alpha1_ClassicELBListener_To_v1alpha2_ClassicELBListener(in *v1alpha1.ClassicELBListener, out *ClassicELBListener, s conversion.Scope) error {
	out.Protocol = ClassicELBProtocol(in.Protocol)
	out.Port = in.Port
	out.InstanceProtocol = ClassicELBProtocol(in.InstanceProtocol)
	out.InstancePort = in.InstancePort
	return nil
}

// Convert_v1alpha1_ClassicELBListener_To_v1alpha2_ClassicELBListener is an autogenerated conversion function.
func Convert_v1alpha1_ClassicELBListener_To_v1alpha2_ClassicELBListener(in *v1alpha1.ClassicELBListener, out *ClassicELBListener, s conversion.Scope) error {
	return autoConvert_v1alpha1_ClassicELBListener_To_v1alpha2_ClassicELBListener(in, out, s)
}

func autoConvert_v1alpha2_Filter_To_v1alpha1_Filter(in *Filter, out *v1alpha1.Filter, s conversion.Scope) error {
	out.Name = in.Name
	out.Values = *(*[]string)(unsafe.Pointer(&in.Values))
	return nil
}

// Convert_v1alpha2_Filter_To_v1alpha1_Filter is an autogenerated conversion function.
func Convert_v1alpha2_Filter_To_v1alpha1_Filter(in *Filter, out *v1alpha1.Filter, s conversion.Scope) error {
	return autoConvert_v1alpha2_Filter_To_v1alpha1_Filter(in, out, s)
}

func autoConvert_v1alpha1_Filter_To_v1alpha2_Filter(in *v1alpha1.Filter, out *Filter, s conversion.Scope) error {
	out.Name = in.Name
	out.Values = *(*[]string)(unsafe.Pointer(&in.Values))
	return nil
}

// Convert_v1alpha1_Filter_To_v1alpha2_Filter is an autogenerated conversion function.
func Convert_v1alpha1_Filter_To_v1alpha2_Filter(in *v1alpha1.Filter, out *Filter, s conversion.Scope) error {
	return autoConvert_v1alpha1_Filter_To_v1alpha2_Filter(in, out, s)
}

func autoConvert_v1alpha2_IngressRule_To_v1alpha1_IngressRule(in *IngressRule, out *v1alpha1.IngressRule, s conversion.Scope) error {
	out.Description = in.Description
	out.Protocol = v1alpha1.SecurityGroupProtocol(in.Protocol)
	out.FromPort = in.FromPort
	out.ToPort = in.ToPort
	out.CidrBlocks = *(*[]string)(unsafe.Pointer(&in.CidrBlocks))
	out.SourceSecurityGroupIDs = *(*[]string)(unsafe.Pointer(&in.SourceSecurityGroupIDs))
	return nil
}

// Convert_v1alpha2_IngressRule_To_v1alpha1_IngressRule is an autogenerated conversion function.
func Convert_v1alpha2_IngressRule_To_v1alpha1_IngressRule(in *IngressRule, out *v1alpha1.IngressRule, s conversion.Scope) error {
	return autoConvert_v1alpha2_IngressRule_To_v1alpha1_IngressRule(in, out, s)
}

func autoConvert_v1alpha1_IngressRule_To_v1alpha2_IngressRule(in *v1alpha1.IngressRule, out *IngressRule, s conversion.Scope) error {
	out.Description = in.Description
	out.Protocol = SecurityGroupProtocol(in.Protocol)
	out.FromPort = in.FromPort
	out.ToPort = in.ToPort
	out.CidrBlocks = *(*[]string)(unsafe.Pointer(&in.CidrBlocks))
	out.SourceSecurityGroupIDs = *(*[]string)(unsafe.Pointer(&in.SourceSecurityGroupIDs))
	return nil
}

// Convert_v1alpha1_IngressRule_To_v1alpha2_IngressRule is an autogenerated conversion function.
func Convert_v1alpha1_IngressRule_To_v1alpha2_IngressRule(in *v1alpha1.IngressRule, out *IngressRule, s conversion.Scope) error {
	return autoConvert_v1alpha1_IngressRule_To_v1alpha2_IngressRule(in, out, s)
}

func autoConvert_v1alpha2_Instance_To_v1alpha1_Instance(in *Instance, out *v1alpha1.Instance, s conversion.Scope) error {
	out.ID = in.ID
	out.State = v1alpha1.InstanceState(in.State)
	out.Type = in.Type
	out.SubnetID = in.SubnetID
	out.ImageID = in.ImageID
	// WARNING: in.SSHKeyName requires manual conversion: does not exist in peer-type
	out.SecurityGroupIDs = *(*[]string)(unsafe.Pointer(&in.SecurityGroupIDs))
	out.UserData = (*string)(unsafe.Pointer(in.UserData))
	out.IAMProfile = in.IAMProfile
	out.PrivateIP = (*string)(unsafe.Pointer(in.PrivateIP))
	out.PublicIP = (*string)(unsafe.Pointer(in.PublicIP))
	out.ENASupport = (*bool)(unsafe.Pointer(in.ENASupport))
	out.EBSOptimized = (*bool)(unsafe.Pointer(in.EBSOptimized))
	// WARNING: in.RootDeviceID requires manual conversion: does not exist in peer-type
	out.RootDeviceSize = in.RootDeviceSize
	// WARNING: in.RootDeviceTags requires manual conversion: does not exist in peer-type
	// WARNING: in.NetworkInterfaces requires manual conversion: does not exist in peer-type
	out.Tags = *(*map[string]string)(unsafe.Pointer(&in.Tags))
	return nil
}

func autoConvert_v1alpha1_Instance_To_v1alpha2_Instance(in *v1alpha1.Instance, out *Instance, s conversion.Scope) error {
	out.ID = in.ID
	out.State = InstanceState(in.State)
	out.Type = in.Type
	out.SubnetID = in.SubnetID
	out.ImageID = in.ImageID
	// WARNING: in.KeyName requires manual conversion: does not exist in peer-type
	out.SecurityGroupIDs = *(*[]string)(unsafe.Pointer(&in.SecurityGroupIDs))
	out.UserData = (*string)(unsafe.Pointer(in.UserData))
	out.IAMProfile = in.IAMProfile
	out.PrivateIP = (*string)(unsafe.Pointer(in.PrivateIP))
	out.PublicIP = (*string)(unsafe.Pointer(in.PublicIP))
	out.ENASupport = (*bool)(unsafe.Pointer(in.ENASupport))
	out.EBSOptimized = (*bool)(unsafe.Pointer(in.EBSOptimized))
	out.RootDeviceSize = in.RootDeviceSize
	out.Tags = *(*map[string]string)(unsafe.Pointer(&in.Tags))
	return nil
}

func autoConvert_v1alpha2_Network_To_v1alpha1_Network(in *Network, out *v1alpha1.Network, s conversion.Scope) error {
	out.SecurityGroups = *(*map[string]v1alpha1.SecurityGroup)(unsafe.Pointer(&in.SecurityGroups))
	if err := Convert_v1alpha2_ClassicELB_To_v1alpha1_ClassicELB(&in.APIServerELB, &out.APIServerELB, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha2_Network_To_v1alpha1_Network is an autogenerated conversion function.
func Convert_v1alpha2_Network_To_v1alpha1_Network(in *Network, out *v1alpha1.Network, s conversion.Scope) error {
	return autoConvert_v1alpha2_Network_To_v1alpha1_Network(in, out, s)
}

func autoConvert_v1alpha1_Network_To_v1alpha2_Network(in *v1alpha1.Network, out *Network, s conversion.Scope) error {
	out.SecurityGroups = *(*map[SecurityGroupRole]SecurityGroup)(unsafe.Pointer(&in.SecurityGroups))
	if err := Convert_v1alpha1_ClassicELB_To_v1alpha2_ClassicELB(&in.APIServerELB, &out.APIServerELB, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_Network_To_v1alpha2_Network is an autogenerated conversion function.
func Convert_v1alpha1_Network_To_v1alpha2_Network(in *v1alpha1.Network, out *Network, s conversion.Scope) error {
	return autoConvert_v1alpha1_Network_To_v1alpha2_Network(in, out, s)
}

func autoConvert_v1alpha2_NetworkSpec_To_v1alpha1_NetworkSpec(in *NetworkSpec, out *v1alpha1.NetworkSpec, s conversion.Scope) error {
	if err := Convert_v1alpha2_VPCSpec_To_v1alpha1_VPCSpec(&in.VPC, &out.VPC, s); err != nil {
		return err
	}
	out.Subnets = *(*v1alpha1.Subnets)(unsafe.Pointer(&in.Subnets))
	return nil
}

// Convert_v1alpha2_NetworkSpec_To_v1alpha1_NetworkSpec is an autogenerated conversion function.
func Convert_v1alpha2_NetworkSpec_To_v1alpha1_NetworkSpec(in *NetworkSpec, out *v1alpha1.NetworkSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_NetworkSpec_To_v1alpha1_NetworkSpec(in, out, s)
}

func autoConvert_v1alpha1_NetworkSpec_To_v1alpha2_NetworkSpec(in *v1alpha1.NetworkSpec, out *NetworkSpec, s conversion.Scope) error {
	if err := Convert_v1alpha1_VPCSpec_To_v1alpha2_VPCSpec(&in.VPC, &out.VPC, s); err != nil {
		return err
	}
	out.Subnets = *(*Subnets)(unsafe.Pointer(&in.Subnets))
	return nil
}

// Convert_v1alpha1_NetworkSpec_To_v1alpha2_NetworkSpec is an autogenerated conversion function.
func Convert_v1alpha1_NetworkSpec_To_v1alpha2_NetworkSpec(in *v1alpha1.NetworkSpec, out *NetworkSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_NetworkSpec_To_v1alpha2_NetworkSpec(in, out, s)
}

func autoConvert_v1alpha2_RouteTable_To_v1alpha1_RouteTable(in *RouteTable, out *v1alpha1.RouteTable, s conversion.Scope) error {
	out.ID = in.ID
	return nil
}

// Convert_v1alpha2_RouteTable_To_v1alpha1_RouteTable is an autogenerated conversion function.
func Convert_v1alpha2_RouteTable_To_v1alpha1_RouteTable(in *RouteTable, out *v1alpha1.RouteTable, s conversion.Scope) error {
	return autoConvert_v1alpha2_RouteTable_To_v1alpha1_RouteTable(in, out, s)
}

func autoConvert_v1alpha1_RouteTable_To_v1alpha2_RouteTable(in *v1alpha1.RouteTable, out *RouteTable, s conversion.Scope) error {
	out.ID = in.ID
	return nil
}

// Convert_v1alpha1_RouteTable_To_v1alpha2_RouteTable is an autogenerated conversion function.
func Convert_v1alpha1_RouteTable_To_v1alpha2_RouteTable(in *v1alpha1.RouteTable, out *RouteTable, s conversion.Scope) error {
	return autoConvert_v1alpha1_RouteTable_To_v1alpha2_RouteTable(in, out, s)
}

func autoConvert_v1alpha2_SecurityGroup_To_v1alpha1_SecurityGroup(in *SecurityGroup, out *v1alpha1.SecurityGroup, s conversion.Scope) error {
	out.ID = in.ID
	out.Name = in.Name
	out.IngressRules = *(*v1alpha1.IngressRules)(unsafe.Pointer(&in.IngressRules))
	out.Tags = *(*v1alpha1.Tags)(unsafe.Pointer(&in.Tags))
	return nil
}

// Convert_v1alpha2_SecurityGroup_To_v1alpha1_SecurityGroup is an autogenerated conversion function.
func Convert_v1alpha2_SecurityGroup_To_v1alpha1_SecurityGroup(in *SecurityGroup, out *v1alpha1.SecurityGroup, s conversion.Scope) error {
	return autoConvert_v1alpha2_SecurityGroup_To_v1alpha1_SecurityGroup(in, out, s)
}

func autoConvert_v1alpha1_SecurityGroup_To_v1alpha2_SecurityGroup(in *v1alpha1.SecurityGroup, out *SecurityGroup, s conversion.Scope) error {
	out.ID = in.ID
	out.Name = in.Name
	out.IngressRules = *(*IngressRules)(unsafe.Pointer(&in.IngressRules))
	out.Tags = *(*Tags)(unsafe.Pointer(&in.Tags))
	return nil
}

// Convert_v1alpha1_SecurityGroup_To_v1alpha2_SecurityGroup is an autogenerated conversion function.
func Convert_v1alpha1_SecurityGroup_To_v1alpha2_SecurityGroup(in *v1alpha1.SecurityGroup, out *SecurityGroup, s conversion.Scope) error {
	return autoConvert_v1alpha1_SecurityGroup_To_v1alpha2_SecurityGroup(in, out, s)
}

func autoConvert_v1alpha2_SubnetSpec_To_v1alpha1_SubnetSpec(in *SubnetSpec, out *v1alpha1.SubnetSpec, s conversion.Scope) error {
	out.ID = in.ID
	out.CidrBlock = in.CidrBlock
	out.AvailabilityZone = in.AvailabilityZone
	out.IsPublic = in.IsPublic
	out.RouteTableID = (*string)(unsafe.Pointer(in.RouteTableID))
	out.NatGatewayID = (*string)(unsafe.Pointer(in.NatGatewayID))
	out.Tags = *(*v1alpha1.Tags)(unsafe.Pointer(&in.Tags))
	return nil
}

// Convert_v1alpha2_SubnetSpec_To_v1alpha1_SubnetSpec is an autogenerated conversion function.
func Convert_v1alpha2_SubnetSpec_To_v1alpha1_SubnetSpec(in *SubnetSpec, out *v1alpha1.SubnetSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_SubnetSpec_To_v1alpha1_SubnetSpec(in, out, s)
}

func autoConvert_v1alpha1_SubnetSpec_To_v1alpha2_SubnetSpec(in *v1alpha1.SubnetSpec, out *SubnetSpec, s conversion.Scope) error {
	out.ID = in.ID
	out.CidrBlock = in.CidrBlock
	out.AvailabilityZone = in.AvailabilityZone
	out.IsPublic = in.IsPublic
	out.RouteTableID = (*string)(unsafe.Pointer(in.RouteTableID))
	out.NatGatewayID = (*string)(unsafe.Pointer(in.NatGatewayID))
	out.Tags = *(*Tags)(unsafe.Pointer(&in.Tags))
	return nil
}

// Convert_v1alpha1_SubnetSpec_To_v1alpha2_SubnetSpec is an autogenerated conversion function.
func Convert_v1alpha1_SubnetSpec_To_v1alpha2_SubnetSpec(in *v1alpha1.SubnetSpec, out *SubnetSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_SubnetSpec_To_v1alpha2_SubnetSpec(in, out, s)
}

func autoConvert_v1alpha2_VPCSpec_To_v1alpha1_VPCSpec(in *VPCSpec, out *v1alpha1.VPCSpec, s conversion.Scope) error {
	out.ID = in.ID
	out.CidrBlock = in.CidrBlock
	out.InternetGatewayID = (*string)(unsafe.Pointer(in.InternetGatewayID))
	out.Tags = *(*v1alpha1.Tags)(unsafe.Pointer(&in.Tags))
	return nil
}

// Convert_v1alpha2_VPCSpec_To_v1alpha1_VPCSpec is an autogenerated conversion function.
func Convert_v1alpha2_VPCSpec_To_v1alpha1_VPCSpec(in *VPCSpec, out *v1alpha1.VPCSpec, s conversion.Scope) error {
	return autoConvert_v1alpha2_VPCSpec_To_v1alpha1_VPCSpec(in, out, s)
}

func autoConvert_v1alpha1_VPCSpec_To_v1alpha2_VPCSpec(in *v1alpha1.VPCSpec, out *VPCSpec, s conversion.Scope) error {
	out.ID = in.ID
	out.CidrBlock = in.CidrBlock
	out.InternetGatewayID = (*string)(unsafe.Pointer(in.InternetGatewayID))
	out.Tags = *(*Tags)(unsafe.Pointer(&in.Tags))
	return nil
}

// Convert_v1alpha1_VPCSpec_To_v1alpha2_VPCSpec is an autogenerated conversion function.
func Convert_v1alpha1_VPCSpec_To_v1alpha2_VPCSpec(in *v1alpha1.VPCSpec, out *VPCSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_VPCSpec_To_v1alpha2_VPCSpec(in, out, s)
}
